
9_Tarefa Shield_LCD1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003b30  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003d0  08003cd0  08003cd0  00004cd0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080040a0  080040a0  000061e0  2**0
                  CONTENTS
  4 .ARM          00000008  080040a0  080040a0  000050a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080040a8  080040a8  000061e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080040a8  080040a8  000050a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080040ac  080040ac  000050ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001e0  20000000  080040b0  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  200001e0  08004290  000061e0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000034c  08004290  0000634c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000061e0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001aa8  00000000  00000000  0000620a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000842  00000000  00000000  00007cb2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000210  00000000  00000000  000084f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000169  00000000  00000000  00008708  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000fca5  00000000  00000000  00008871  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002ef7  00000000  00000000  00018516  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000555c8  00000000  00000000  0001b40d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000709d5  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000163c  00000000  00000000  00070a18  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000062  00000000  00000000  00072054  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001e0 	.word	0x200001e0
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08003cb8 	.word	0x08003cb8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001e4 	.word	0x200001e4
 80001dc:	08003cb8 	.word	0x08003cb8

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <GPIO_init>:
#include "stm32f4xx.h"

#include "timer2.h"

void GPIO_init(void)
{
 8000bb8:	b480      	push	{r7}
 8000bba:	af00      	add	r7, sp, #0
    // Habilita clock para GPIOA, GPIOB, GPIOC
    RCC->AHB1ENR |= (1U<<0) | (1U<<1) | (1U<<2);
 8000bbc:	4b2e      	ldr	r3, [pc, #184]	@ (8000c78 <GPIO_init+0xc0>)
 8000bbe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bc0:	4a2d      	ldr	r2, [pc, #180]	@ (8000c78 <GPIO_init+0xc0>)
 8000bc2:	f043 0307 	orr.w	r3, r3, #7
 8000bc6:	6313      	str	r3, [r2, #48]	@ 0x30

    GPIOA->MODER |= (1U<<18);    // Pino 9 como saída - RS
 8000bc8:	4b2c      	ldr	r3, [pc, #176]	@ (8000c7c <GPIO_init+0xc4>)
 8000bca:	681b      	ldr	r3, [r3, #0]
 8000bcc:	4a2b      	ldr	r2, [pc, #172]	@ (8000c7c <GPIO_init+0xc4>)
 8000bce:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8000bd2:	6013      	str	r3, [r2, #0]
    GPIOA->MODER &= ~(1U<<19);
 8000bd4:	4b29      	ldr	r3, [pc, #164]	@ (8000c7c <GPIO_init+0xc4>)
 8000bd6:	681b      	ldr	r3, [r3, #0]
 8000bd8:	4a28      	ldr	r2, [pc, #160]	@ (8000c7c <GPIO_init+0xc4>)
 8000bda:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 8000bde:	6013      	str	r3, [r2, #0]

    GPIOC->MODER |= (1U<<14);    // Pino 7 como saída - EN
 8000be0:	4b27      	ldr	r3, [pc, #156]	@ (8000c80 <GPIO_init+0xc8>)
 8000be2:	681b      	ldr	r3, [r3, #0]
 8000be4:	4a26      	ldr	r2, [pc, #152]	@ (8000c80 <GPIO_init+0xc8>)
 8000be6:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000bea:	6013      	str	r3, [r2, #0]
    GPIOC->MODER &= ~(1U<<15);
 8000bec:	4b24      	ldr	r3, [pc, #144]	@ (8000c80 <GPIO_init+0xc8>)
 8000bee:	681b      	ldr	r3, [r3, #0]
 8000bf0:	4a23      	ldr	r2, [pc, #140]	@ (8000c80 <GPIO_init+0xc8>)
 8000bf2:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8000bf6:	6013      	str	r3, [r2, #0]

    GPIOB->MODER |= (1U<<10);    // Pino 5 como saída - D4
 8000bf8:	4b22      	ldr	r3, [pc, #136]	@ (8000c84 <GPIO_init+0xcc>)
 8000bfa:	681b      	ldr	r3, [r3, #0]
 8000bfc:	4a21      	ldr	r2, [pc, #132]	@ (8000c84 <GPIO_init+0xcc>)
 8000bfe:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000c02:	6013      	str	r3, [r2, #0]
    GPIOB->MODER &= ~(1U<<11);
 8000c04:	4b1f      	ldr	r3, [pc, #124]	@ (8000c84 <GPIO_init+0xcc>)
 8000c06:	681b      	ldr	r3, [r3, #0]
 8000c08:	4a1e      	ldr	r2, [pc, #120]	@ (8000c84 <GPIO_init+0xcc>)
 8000c0a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8000c0e:	6013      	str	r3, [r2, #0]

    GPIOB->MODER |= (1U<<8);     // Pino 4 como saída - D5
 8000c10:	4b1c      	ldr	r3, [pc, #112]	@ (8000c84 <GPIO_init+0xcc>)
 8000c12:	681b      	ldr	r3, [r3, #0]
 8000c14:	4a1b      	ldr	r2, [pc, #108]	@ (8000c84 <GPIO_init+0xcc>)
 8000c16:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000c1a:	6013      	str	r3, [r2, #0]
    GPIOB->MODER &= ~(1U<<9);
 8000c1c:	4b19      	ldr	r3, [pc, #100]	@ (8000c84 <GPIO_init+0xcc>)
 8000c1e:	681b      	ldr	r3, [r3, #0]
 8000c20:	4a18      	ldr	r2, [pc, #96]	@ (8000c84 <GPIO_init+0xcc>)
 8000c22:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000c26:	6013      	str	r3, [r2, #0]

    GPIOB->MODER |= (1U<<20);    // Pino 10 como saída - D6
 8000c28:	4b16      	ldr	r3, [pc, #88]	@ (8000c84 <GPIO_init+0xcc>)
 8000c2a:	681b      	ldr	r3, [r3, #0]
 8000c2c:	4a15      	ldr	r2, [pc, #84]	@ (8000c84 <GPIO_init+0xcc>)
 8000c2e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000c32:	6013      	str	r3, [r2, #0]
    GPIOB->MODER &= ~(1U<<21);
 8000c34:	4b13      	ldr	r3, [pc, #76]	@ (8000c84 <GPIO_init+0xcc>)
 8000c36:	681b      	ldr	r3, [r3, #0]
 8000c38:	4a12      	ldr	r2, [pc, #72]	@ (8000c84 <GPIO_init+0xcc>)
 8000c3a:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8000c3e:	6013      	str	r3, [r2, #0]

    GPIOB->MODER |= (1U<<16);    // Pino 8 como saída - D7
 8000c40:	4b10      	ldr	r3, [pc, #64]	@ (8000c84 <GPIO_init+0xcc>)
 8000c42:	681b      	ldr	r3, [r3, #0]
 8000c44:	4a0f      	ldr	r2, [pc, #60]	@ (8000c84 <GPIO_init+0xcc>)
 8000c46:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000c4a:	6013      	str	r3, [r2, #0]
    GPIOB->MODER &= ~(1U<<17);
 8000c4c:	4b0d      	ldr	r3, [pc, #52]	@ (8000c84 <GPIO_init+0xcc>)
 8000c4e:	681b      	ldr	r3, [r3, #0]
 8000c50:	4a0c      	ldr	r2, [pc, #48]	@ (8000c84 <GPIO_init+0xcc>)
 8000c52:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8000c56:	6013      	str	r3, [r2, #0]

    GPIOA->MODER |= (1U<<10);    // LED
 8000c58:	4b08      	ldr	r3, [pc, #32]	@ (8000c7c <GPIO_init+0xc4>)
 8000c5a:	681b      	ldr	r3, [r3, #0]
 8000c5c:	4a07      	ldr	r2, [pc, #28]	@ (8000c7c <GPIO_init+0xc4>)
 8000c5e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000c62:	6013      	str	r3, [r2, #0]
    GPIOA->MODER &= ~(1U<<11);
 8000c64:	4b05      	ldr	r3, [pc, #20]	@ (8000c7c <GPIO_init+0xc4>)
 8000c66:	681b      	ldr	r3, [r3, #0]
 8000c68:	4a04      	ldr	r2, [pc, #16]	@ (8000c7c <GPIO_init+0xc4>)
 8000c6a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8000c6e:	6013      	str	r3, [r2, #0]
}
 8000c70:	bf00      	nop
 8000c72:	46bd      	mov	sp, r7
 8000c74:	bc80      	pop	{r7}
 8000c76:	4770      	bx	lr
 8000c78:	40023800 	.word	0x40023800
 8000c7c:	40020000 	.word	0x40020000
 8000c80:	40020800 	.word	0x40020800
 8000c84:	40020400 	.word	0x40020400

08000c88 <send_to_lcd>:
//=========================================================================================================================================================

void send_to_lcd(int data, int rs)
{
 8000c88:	b580      	push	{r7, lr}
 8000c8a:	b082      	sub	sp, #8
 8000c8c:	af00      	add	r7, sp, #0
 8000c8e:	6078      	str	r0, [r7, #4]
 8000c90:	6039      	str	r1, [r7, #0]
    // rs = 1 para dados, rs = 0 para comando
    if (rs == 1) {
 8000c92:	683b      	ldr	r3, [r7, #0]
 8000c94:	2b01      	cmp	r3, #1
 8000c96:	d106      	bne.n	8000ca6 <send_to_lcd+0x1e>
        GPIOA->ODR |= (1U<<9);
 8000c98:	4b36      	ldr	r3, [pc, #216]	@ (8000d74 <send_to_lcd+0xec>)
 8000c9a:	695b      	ldr	r3, [r3, #20]
 8000c9c:	4a35      	ldr	r2, [pc, #212]	@ (8000d74 <send_to_lcd+0xec>)
 8000c9e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000ca2:	6153      	str	r3, [r2, #20]
 8000ca4:	e008      	b.n	8000cb8 <send_to_lcd+0x30>
    } else if (rs == 0) {
 8000ca6:	683b      	ldr	r3, [r7, #0]
 8000ca8:	2b00      	cmp	r3, #0
 8000caa:	d105      	bne.n	8000cb8 <send_to_lcd+0x30>
        GPIOA->ODR &= ~(1U<<9);
 8000cac:	4b31      	ldr	r3, [pc, #196]	@ (8000d74 <send_to_lcd+0xec>)
 8000cae:	695b      	ldr	r3, [r3, #20]
 8000cb0:	4a30      	ldr	r2, [pc, #192]	@ (8000d74 <send_to_lcd+0xec>)
 8000cb2:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000cb6:	6153      	str	r3, [r2, #20]
    }

    if (((data>>3)&0x01) == 1) {    //d7 pin
 8000cb8:	687b      	ldr	r3, [r7, #4]
 8000cba:	f003 0308 	and.w	r3, r3, #8
 8000cbe:	2b00      	cmp	r3, #0
 8000cc0:	d006      	beq.n	8000cd0 <send_to_lcd+0x48>
        GPIOA->ODR |= (1U<<8);
 8000cc2:	4b2c      	ldr	r3, [pc, #176]	@ (8000d74 <send_to_lcd+0xec>)
 8000cc4:	695b      	ldr	r3, [r3, #20]
 8000cc6:	4a2b      	ldr	r2, [pc, #172]	@ (8000d74 <send_to_lcd+0xec>)
 8000cc8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000ccc:	6153      	str	r3, [r2, #20]
 8000cce:	e005      	b.n	8000cdc <send_to_lcd+0x54>
    } else {
        GPIOA->ODR &= ~(1U<<8);
 8000cd0:	4b28      	ldr	r3, [pc, #160]	@ (8000d74 <send_to_lcd+0xec>)
 8000cd2:	695b      	ldr	r3, [r3, #20]
 8000cd4:	4a27      	ldr	r2, [pc, #156]	@ (8000d74 <send_to_lcd+0xec>)
 8000cd6:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000cda:	6153      	str	r3, [r2, #20]
    }

    if (((data>>2)&0x01) == 1) {    //d6 pin
 8000cdc:	687b      	ldr	r3, [r7, #4]
 8000cde:	f003 0304 	and.w	r3, r3, #4
 8000ce2:	2b00      	cmp	r3, #0
 8000ce4:	d006      	beq.n	8000cf4 <send_to_lcd+0x6c>
        GPIOB->ODR |= (1U<<10);
 8000ce6:	4b24      	ldr	r3, [pc, #144]	@ (8000d78 <send_to_lcd+0xf0>)
 8000ce8:	695b      	ldr	r3, [r3, #20]
 8000cea:	4a23      	ldr	r2, [pc, #140]	@ (8000d78 <send_to_lcd+0xf0>)
 8000cec:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000cf0:	6153      	str	r3, [r2, #20]
 8000cf2:	e005      	b.n	8000d00 <send_to_lcd+0x78>
    } else {
        GPIOB->ODR &= ~(1U<<10);
 8000cf4:	4b20      	ldr	r3, [pc, #128]	@ (8000d78 <send_to_lcd+0xf0>)
 8000cf6:	695b      	ldr	r3, [r3, #20]
 8000cf8:	4a1f      	ldr	r2, [pc, #124]	@ (8000d78 <send_to_lcd+0xf0>)
 8000cfa:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000cfe:	6153      	str	r3, [r2, #20]
    }

    if (((data>>1)&0x01) == 1) {    //d5 pin
 8000d00:	687b      	ldr	r3, [r7, #4]
 8000d02:	f003 0302 	and.w	r3, r3, #2
 8000d06:	2b00      	cmp	r3, #0
 8000d08:	d006      	beq.n	8000d18 <send_to_lcd+0x90>
        GPIOB->ODR |= (1U<<4);
 8000d0a:	4b1b      	ldr	r3, [pc, #108]	@ (8000d78 <send_to_lcd+0xf0>)
 8000d0c:	695b      	ldr	r3, [r3, #20]
 8000d0e:	4a1a      	ldr	r2, [pc, #104]	@ (8000d78 <send_to_lcd+0xf0>)
 8000d10:	f043 0310 	orr.w	r3, r3, #16
 8000d14:	6153      	str	r3, [r2, #20]
 8000d16:	e005      	b.n	8000d24 <send_to_lcd+0x9c>
    } else {
        GPIOB->ODR &= ~(1U<<4);
 8000d18:	4b17      	ldr	r3, [pc, #92]	@ (8000d78 <send_to_lcd+0xf0>)
 8000d1a:	695b      	ldr	r3, [r3, #20]
 8000d1c:	4a16      	ldr	r2, [pc, #88]	@ (8000d78 <send_to_lcd+0xf0>)
 8000d1e:	f023 0310 	bic.w	r3, r3, #16
 8000d22:	6153      	str	r3, [r2, #20]
    }

    if (((data>>0)&0x01) == 1) {         //d4 pin
 8000d24:	687b      	ldr	r3, [r7, #4]
 8000d26:	f003 0301 	and.w	r3, r3, #1
 8000d2a:	2b00      	cmp	r3, #0
 8000d2c:	d006      	beq.n	8000d3c <send_to_lcd+0xb4>
        GPIOB->ODR |= (1U<<5);
 8000d2e:	4b12      	ldr	r3, [pc, #72]	@ (8000d78 <send_to_lcd+0xf0>)
 8000d30:	695b      	ldr	r3, [r3, #20]
 8000d32:	4a11      	ldr	r2, [pc, #68]	@ (8000d78 <send_to_lcd+0xf0>)
 8000d34:	f043 0320 	orr.w	r3, r3, #32
 8000d38:	6153      	str	r3, [r2, #20]
 8000d3a:	e005      	b.n	8000d48 <send_to_lcd+0xc0>
    } else {
        GPIOB->ODR &= ~(1U<<5);
 8000d3c:	4b0e      	ldr	r3, [pc, #56]	@ (8000d78 <send_to_lcd+0xf0>)
 8000d3e:	695b      	ldr	r3, [r3, #20]
 8000d40:	4a0d      	ldr	r2, [pc, #52]	@ (8000d78 <send_to_lcd+0xf0>)
 8000d42:	f023 0320 	bic.w	r3, r3, #32
 8000d46:	6153      	str	r3, [r2, #20]
    }

    // Habilita o enable do LCD
    GPIOC->ODR |= (1U<<7);
 8000d48:	4b0c      	ldr	r3, [pc, #48]	@ (8000d7c <send_to_lcd+0xf4>)
 8000d4a:	695b      	ldr	r3, [r3, #20]
 8000d4c:	4a0b      	ldr	r2, [pc, #44]	@ (8000d7c <send_to_lcd+0xf4>)
 8000d4e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000d52:	6153      	str	r3, [r2, #20]
    delayLCD(100);
 8000d54:	2064      	movs	r0, #100	@ 0x64
 8000d56:	f000 fad3 	bl	8001300 <delayLCD>

    // Desabilita o enable do LCD
    GPIOC->ODR &= ~(1U<<7);
 8000d5a:	4b08      	ldr	r3, [pc, #32]	@ (8000d7c <send_to_lcd+0xf4>)
 8000d5c:	695b      	ldr	r3, [r3, #20]
 8000d5e:	4a07      	ldr	r2, [pc, #28]	@ (8000d7c <send_to_lcd+0xf4>)
 8000d60:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000d64:	6153      	str	r3, [r2, #20]
    delayLCD(100);
 8000d66:	2064      	movs	r0, #100	@ 0x64
 8000d68:	f000 faca 	bl	8001300 <delayLCD>
}
 8000d6c:	bf00      	nop
 8000d6e:	3708      	adds	r7, #8
 8000d70:	46bd      	mov	sp, r7
 8000d72:	bd80      	pop	{r7, pc}
 8000d74:	40020000 	.word	0x40020000
 8000d78:	40020400 	.word	0x40020400
 8000d7c:	40020800 	.word	0x40020800

08000d80 <lcd_send_cmd>:


void lcd_send_cmd(char cmd)
{
 8000d80:	b580      	push	{r7, lr}
 8000d82:	b084      	sub	sp, #16
 8000d84:	af00      	add	r7, sp, #0
 8000d86:	4603      	mov	r3, r0
 8000d88:	71fb      	strb	r3, [r7, #7]
    char datatosend;

    /* Envia o nibble superior do byte */
    datatosend = ((cmd>>4)&0x0f);
 8000d8a:	79fb      	ldrb	r3, [r7, #7]
 8000d8c:	091b      	lsrs	r3, r3, #4
 8000d8e:	73fb      	strb	r3, [r7, #15]
    send_to_lcd(datatosend, 0);  // RS deve ser 0 enquanto enviando um comando
 8000d90:	7bfb      	ldrb	r3, [r7, #15]
 8000d92:	2100      	movs	r1, #0
 8000d94:	4618      	mov	r0, r3
 8000d96:	f7ff ff77 	bl	8000c88 <send_to_lcd>

    /* Envia o nibble inferior do byte */
    datatosend = ((cmd)&0x0f);
 8000d9a:	79fb      	ldrb	r3, [r7, #7]
 8000d9c:	f003 030f 	and.w	r3, r3, #15
 8000da0:	73fb      	strb	r3, [r7, #15]
    send_to_lcd(datatosend, 0);
 8000da2:	7bfb      	ldrb	r3, [r7, #15]
 8000da4:	2100      	movs	r1, #0
 8000da6:	4618      	mov	r0, r3
 8000da8:	f7ff ff6e 	bl	8000c88 <send_to_lcd>
}
 8000dac:	bf00      	nop
 8000dae:	3710      	adds	r7, #16
 8000db0:	46bd      	mov	sp, r7
 8000db2:	bd80      	pop	{r7, pc}

08000db4 <lcd_init>:


void lcd_init(void)
{
 8000db4:	b580      	push	{r7, lr}
 8000db6:	af00      	add	r7, sp, #0
	//Inicialização no modo 4 bits
	delay_ms(50);	//Espera > 40ms
 8000db8:	2032      	movs	r0, #50	@ 0x32
 8000dba:	f000 fa89 	bl	80012d0 <delay_ms>
	lcd_send_cmd (0x30);
 8000dbe:	2030      	movs	r0, #48	@ 0x30
 8000dc0:	f7ff ffde 	bl	8000d80 <lcd_send_cmd>
	delay_ms(5);	//Espera > 4.1ms
 8000dc4:	2005      	movs	r0, #5
 8000dc6:	f000 fa83 	bl	80012d0 <delay_ms>
	lcd_send_cmd (0x30);
 8000dca:	2030      	movs	r0, #48	@ 0x30
 8000dcc:	f7ff ffd8 	bl	8000d80 <lcd_send_cmd>
	delay_ms(1);	//Espera > 100us
 8000dd0:	2001      	movs	r0, #1
 8000dd2:	f000 fa7d 	bl	80012d0 <delay_ms>
	lcd_send_cmd (0x30);
 8000dd6:	2030      	movs	r0, #48	@ 0x30
 8000dd8:	f7ff ffd2 	bl	8000d80 <lcd_send_cmd>
	delay_ms(1);
 8000ddc:	2001      	movs	r0, #1
 8000dde:	f000 fa77 	bl	80012d0 <delay_ms>
	lcd_send_cmd (0x20);	// mode 4 bits
 8000de2:	2020      	movs	r0, #32
 8000de4:	f7ff ffcc 	bl	8000d80 <lcd_send_cmd>
	delay_ms(1);	//Espera por 100us
 8000de8:	2001      	movs	r0, #1
 8000dea:	f000 fa71 	bl	80012d0 <delay_ms>

	//inicialização do display
	lcd_send_cmd (0x28);	// Função set --> DL=0 (4 modo 4 bits), N = 1 (2 linhas) F = 0 ( Fonte 5x8)
 8000dee:	2028      	movs	r0, #40	@ 0x28
 8000df0:	f7ff ffc6 	bl	8000d80 <lcd_send_cmd>
	delay_ms(50);
 8000df4:	2032      	movs	r0, #50	@ 0x32
 8000df6:	f000 fa6b 	bl	80012d0 <delay_ms>
	lcd_send_cmd (0x08);	// Controle on/off do display --> D=0, C=0, B=0   ---> display off
 8000dfa:	2008      	movs	r0, #8
 8000dfc:	f7ff ffc0 	bl	8000d80 <lcd_send_cmd>
	delay_ms(50);
 8000e00:	2032      	movs	r0, #50	@ 0x32
 8000e02:	f000 fa65 	bl	80012d0 <delay_ms>
	lcd_send_cmd (0x01);	// limpa display
 8000e06:	2001      	movs	r0, #1
 8000e08:	f7ff ffba 	bl	8000d80 <lcd_send_cmd>
	delay_ms(50);
 8000e0c:	2032      	movs	r0, #50	@ 0x32
 8000e0e:	f000 fa5f 	bl	80012d0 <delay_ms>
	delay_ms(50);
 8000e12:	2032      	movs	r0, #50	@ 0x32
 8000e14:	f000 fa5c 	bl	80012d0 <delay_ms>
	lcd_send_cmd (0x06);	// Entry mode set --> I/D = 1 (incrementa cursor) & S = 0 (não shift)
 8000e18:	2006      	movs	r0, #6
 8000e1a:	f7ff ffb1 	bl	8000d80 <lcd_send_cmd>
	delay_ms(50);
 8000e1e:	2032      	movs	r0, #50	@ 0x32
 8000e20:	f000 fa56 	bl	80012d0 <delay_ms>
	lcd_send_cmd (0x0C);	// Display on/off control --> D = 1, C e B = 0. (Cursor e blink, ultimos 2 bits)
 8000e24:	200c      	movs	r0, #12
 8000e26:	f7ff ffab 	bl	8000d80 <lcd_send_cmd>

}
 8000e2a:	bf00      	nop
 8000e2c:	bd80      	pop	{r7, pc}

08000e2e <lcd_send_data>:

void lcd_send_data (char data)
{
 8000e2e:	b580      	push	{r7, lr}
 8000e30:	b084      	sub	sp, #16
 8000e32:	af00      	add	r7, sp, #0
 8000e34:	4603      	mov	r3, r0
 8000e36:	71fb      	strb	r3, [r7, #7]
	char datatosend;

	// Envia o nibble superior do byte
	datatosend = ((data>>4)&0x0f);
 8000e38:	79fb      	ldrb	r3, [r7, #7]
 8000e3a:	091b      	lsrs	r3, r3, #4
 8000e3c:	73fb      	strb	r3, [r7, #15]
    send_to_lcd(datatosend, 1);  // RS deve ser 1 enquanto enviando um dado
 8000e3e:	7bfb      	ldrb	r3, [r7, #15]
 8000e40:	2101      	movs	r1, #1
 8000e42:	4618      	mov	r0, r3
 8000e44:	f7ff ff20 	bl	8000c88 <send_to_lcd>

    /* Envia o nibble inferior do byte */
    datatosend = ((data)&0x0f);
 8000e48:	79fb      	ldrb	r3, [r7, #7]
 8000e4a:	f003 030f 	and.w	r3, r3, #15
 8000e4e:	73fb      	strb	r3, [r7, #15]
    send_to_lcd(datatosend, 1);
 8000e50:	7bfb      	ldrb	r3, [r7, #15]
 8000e52:	2101      	movs	r1, #1
 8000e54:	4618      	mov	r0, r3
 8000e56:	f7ff ff17 	bl	8000c88 <send_to_lcd>

}
 8000e5a:	bf00      	nop
 8000e5c:	3710      	adds	r7, #16
 8000e5e:	46bd      	mov	sp, r7
 8000e60:	bd80      	pop	{r7, pc}

08000e62 <lcd_clear>:

void lcd_clear (void)
{
 8000e62:	b580      	push	{r7, lr}
 8000e64:	af00      	add	r7, sp, #0
	// comando 01 - Limpa LCD
	lcd_send_cmd(0x01);
 8000e66:	2001      	movs	r0, #1
 8000e68:	f7ff ff8a 	bl	8000d80 <lcd_send_cmd>
	delay_ms(100);
 8000e6c:	2064      	movs	r0, #100	@ 0x64
 8000e6e:	f000 fa2f 	bl	80012d0 <delay_ms>
}
 8000e72:	bf00      	nop
 8000e74:	bd80      	pop	{r7, pc}

08000e76 <lcd_put_cur>:

void lcd_put_cur(int row, int col)
{
 8000e76:	b580      	push	{r7, lr}
 8000e78:	b082      	sub	sp, #8
 8000e7a:	af00      	add	r7, sp, #0
 8000e7c:	6078      	str	r0, [r7, #4]
 8000e7e:	6039      	str	r1, [r7, #0]
	switch (row)
 8000e80:	687b      	ldr	r3, [r7, #4]
 8000e82:	2b00      	cmp	r3, #0
 8000e84:	d003      	beq.n	8000e8e <lcd_put_cur+0x18>
 8000e86:	687b      	ldr	r3, [r7, #4]
 8000e88:	2b01      	cmp	r3, #1
 8000e8a:	d005      	beq.n	8000e98 <lcd_put_cur+0x22>
 8000e8c:	e009      	b.n	8000ea2 <lcd_put_cur+0x2c>
	{
	case 0:
		col |= 0x80; // 0x80 = endereço da 1a col. na linha 1
 8000e8e:	683b      	ldr	r3, [r7, #0]
 8000e90:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000e94:	603b      	str	r3, [r7, #0]
		break;
 8000e96:	e004      	b.n	8000ea2 <lcd_put_cur+0x2c>
	case 1:
		col |= 0xC0; // 0xC0 = endereço da 2a col. na linha 1
 8000e98:	683b      	ldr	r3, [r7, #0]
 8000e9a:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8000e9e:	603b      	str	r3, [r7, #0]
		break;
 8000ea0:	bf00      	nop
	}

	lcd_send_cmd (col); // Posiciona o crso no endereço a ser escrito no LCD
 8000ea2:	683b      	ldr	r3, [r7, #0]
 8000ea4:	b2db      	uxtb	r3, r3
 8000ea6:	4618      	mov	r0, r3
 8000ea8:	f7ff ff6a 	bl	8000d80 <lcd_send_cmd>
}
 8000eac:	bf00      	nop
 8000eae:	3708      	adds	r7, #8
 8000eb0:	46bd      	mov	sp, r7
 8000eb2:	bd80      	pop	{r7, pc}

08000eb4 <lcd_send_string>:

void lcd_send_string (char *str)
{
 8000eb4:	b580      	push	{r7, lr}
 8000eb6:	b082      	sub	sp, #8
 8000eb8:	af00      	add	r7, sp, #0
 8000eba:	6078      	str	r0, [r7, #4]
	while (*str) lcd_send_data (*str++);
 8000ebc:	e006      	b.n	8000ecc <lcd_send_string+0x18>
 8000ebe:	687b      	ldr	r3, [r7, #4]
 8000ec0:	1c5a      	adds	r2, r3, #1
 8000ec2:	607a      	str	r2, [r7, #4]
 8000ec4:	781b      	ldrb	r3, [r3, #0]
 8000ec6:	4618      	mov	r0, r3
 8000ec8:	f7ff ffb1 	bl	8000e2e <lcd_send_data>
 8000ecc:	687b      	ldr	r3, [r7, #4]
 8000ece:	781b      	ldrb	r3, [r3, #0]
 8000ed0:	2b00      	cmp	r3, #0
 8000ed2:	d1f4      	bne.n	8000ebe <lcd_send_string+0xa>
}
 8000ed4:	bf00      	nop
 8000ed6:	bf00      	nop
 8000ed8:	3708      	adds	r7, #8
 8000eda:	46bd      	mov	sp, r7
 8000edc:	bd80      	pop	{r7, pc}
	...

08000ee0 <keypad_init>:
#include "stm32f4xx.h"
#include "keypad.h"


uint8_t keypad_init()
{
 8000ee0:	b480      	push	{r7}
 8000ee2:	af00      	add	r7, sp, #0

	RCC->AHB1ENR |= (1U<<0);	// Habilita o clock para acessar o GPIOA
 8000ee4:	4b12      	ldr	r3, [pc, #72]	@ (8000f30 <keypad_init+0x50>)
 8000ee6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ee8:	4a11      	ldr	r2, [pc, #68]	@ (8000f30 <keypad_init+0x50>)
 8000eea:	f043 0301 	orr.w	r3, r3, #1
 8000eee:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->APB2ENR |= (1U<<8);	// Habilita o clock para acessar o ADC1
 8000ef0:	4b0f      	ldr	r3, [pc, #60]	@ (8000f30 <keypad_init+0x50>)
 8000ef2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000ef4:	4a0e      	ldr	r2, [pc, #56]	@ (8000f30 <keypad_init+0x50>)
 8000ef6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000efa:	6453      	str	r3, [r2, #68]	@ 0x44

	// Configura o modo de PA0 para analógico
	GPIOA->MODER |= 0x3;
 8000efc:	4b0d      	ldr	r3, [pc, #52]	@ (8000f34 <keypad_init+0x54>)
 8000efe:	681b      	ldr	r3, [r3, #0]
 8000f00:	4a0c      	ldr	r2, [pc, #48]	@ (8000f34 <keypad_init+0x54>)
 8000f02:	f043 0303 	orr.w	r3, r3, #3
 8000f06:	6013      	str	r3, [r2, #0]

	/*** Configura o módulo ADC ***/
	ADC1->CR2 = 0;
 8000f08:	4b0b      	ldr	r3, [pc, #44]	@ (8000f38 <keypad_init+0x58>)
 8000f0a:	2200      	movs	r2, #0
 8000f0c:	609a      	str	r2, [r3, #8]
	ADC1->SQR3 = 0;		// Inicia a sequência de conversão
 8000f0e:	4b0a      	ldr	r3, [pc, #40]	@ (8000f38 <keypad_init+0x58>)
 8000f10:	2200      	movs	r2, #0
 8000f12:	635a      	str	r2, [r3, #52]	@ 0x34

	ADC1->SQR1 = 4;		// Configura o tamanho da sequência de conversão
 8000f14:	4b08      	ldr	r3, [pc, #32]	@ (8000f38 <keypad_init+0x58>)
 8000f16:	2204      	movs	r2, #4
 8000f18:	62da      	str	r2, [r3, #44]	@ 0x2c
	ADC1->CR2 |= 1;		// Habilita o módulo ADC
 8000f1a:	4b07      	ldr	r3, [pc, #28]	@ (8000f38 <keypad_init+0x58>)
 8000f1c:	689b      	ldr	r3, [r3, #8]
 8000f1e:	4a06      	ldr	r2, [pc, #24]	@ (8000f38 <keypad_init+0x58>)
 8000f20:	f043 0301 	orr.w	r3, r3, #1
 8000f24:	6093      	str	r3, [r2, #8]

	return 0;
 8000f26:	2300      	movs	r3, #0
}
 8000f28:	4618      	mov	r0, r3
 8000f2a:	46bd      	mov	sp, r7
 8000f2c:	bc80      	pop	{r7}
 8000f2e:	4770      	bx	lr
 8000f30:	40023800 	.word	0x40023800
 8000f34:	40020000 	.word	0x40020000
 8000f38:	40012000 	.word	0x40012000

08000f3c <keypad_read_key>:

uint16_t keypad_read_key()
{
 8000f3c:	b480      	push	{r7}
 8000f3e:	b083      	sub	sp, #12
 8000f40:	af00      	add	r7, sp, #0
	uint16_t adc_readout = 0;
 8000f42:	2300      	movs	r3, #0
 8000f44:	80fb      	strh	r3, [r7, #6]

	ADC1->CR2 |= (1U<<30);	// Inicia a conversão
 8000f46:	4b24      	ldr	r3, [pc, #144]	@ (8000fd8 <keypad_read_key+0x9c>)
 8000f48:	689b      	ldr	r3, [r3, #8]
 8000f4a:	4a23      	ldr	r2, [pc, #140]	@ (8000fd8 <keypad_read_key+0x9c>)
 8000f4c:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8000f50:	6093      	str	r3, [r2, #8]
	while (!(ADC1->SR & 2)){}	// Espera o final da conversão
 8000f52:	bf00      	nop
 8000f54:	4b20      	ldr	r3, [pc, #128]	@ (8000fd8 <keypad_read_key+0x9c>)
 8000f56:	681b      	ldr	r3, [r3, #0]
 8000f58:	f003 0302 	and.w	r3, r3, #2
 8000f5c:	2b00      	cmp	r3, #0
 8000f5e:	d0f9      	beq.n	8000f54 <keypad_read_key+0x18>
	adc_readout = ADC1->DR;		// Retorna o resultado
 8000f60:	4b1d      	ldr	r3, [pc, #116]	@ (8000fd8 <keypad_read_key+0x9c>)
 8000f62:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000f64:	80fb      	strh	r3, [r7, #6]

	if(adc_readout > 750 && adc_readout < 850)
 8000f66:	88fb      	ldrh	r3, [r7, #6]
 8000f68:	f240 22ee 	movw	r2, #750	@ 0x2ee
 8000f6c:	4293      	cmp	r3, r2
 8000f6e:	d906      	bls.n	8000f7e <keypad_read_key+0x42>
 8000f70:	88fb      	ldrh	r3, [r7, #6]
 8000f72:	f240 3251 	movw	r2, #849	@ 0x351
 8000f76:	4293      	cmp	r3, r2
 8000f78:	d801      	bhi.n	8000f7e <keypad_read_key+0x42>
	{
		return KEY_UP;
 8000f7a:	2301      	movs	r3, #1
 8000f7c:	e027      	b.n	8000fce <keypad_read_key+0x92>
	}
	else if(adc_readout > 1800 && adc_readout < 2050)
 8000f7e:	88fb      	ldrh	r3, [r7, #6]
 8000f80:	f5b3 6fe1 	cmp.w	r3, #1800	@ 0x708
 8000f84:	d906      	bls.n	8000f94 <keypad_read_key+0x58>
 8000f86:	88fb      	ldrh	r3, [r7, #6]
 8000f88:	f640 0201 	movw	r2, #2049	@ 0x801
 8000f8c:	4293      	cmp	r3, r2
 8000f8e:	d801      	bhi.n	8000f94 <keypad_read_key+0x58>
	{
		return KEY_DOWN;
 8000f90:	2302      	movs	r3, #2
 8000f92:	e01c      	b.n	8000fce <keypad_read_key+0x92>
	}
	else if(adc_readout > 3000 && adc_readout < 3100)
 8000f94:	88fb      	ldrh	r3, [r7, #6]
 8000f96:	f640 32b8 	movw	r2, #3000	@ 0xbb8
 8000f9a:	4293      	cmp	r3, r2
 8000f9c:	d906      	bls.n	8000fac <keypad_read_key+0x70>
 8000f9e:	88fb      	ldrh	r3, [r7, #6]
 8000fa0:	f640 421b 	movw	r2, #3099	@ 0xc1b
 8000fa4:	4293      	cmp	r3, r2
 8000fa6:	d801      	bhi.n	8000fac <keypad_read_key+0x70>
	{
		return KEY_LEFT;
 8000fa8:	2303      	movs	r3, #3
 8000faa:	e010      	b.n	8000fce <keypad_read_key+0x92>
	}
	else if(adc_readout >= 0 && adc_readout < 50)
 8000fac:	88fb      	ldrh	r3, [r7, #6]
 8000fae:	2b31      	cmp	r3, #49	@ 0x31
 8000fb0:	d801      	bhi.n	8000fb6 <keypad_read_key+0x7a>
	{
		return KEY_RIGHT;
 8000fb2:	2300      	movs	r3, #0
 8000fb4:	e00b      	b.n	8000fce <keypad_read_key+0x92>
	}
	else if(adc_readout > 4000 && adc_readout < 5050)
 8000fb6:	88fb      	ldrh	r3, [r7, #6]
 8000fb8:	f5b3 6f7a 	cmp.w	r3, #4000	@ 0xfa0
 8000fbc:	d906      	bls.n	8000fcc <keypad_read_key+0x90>
 8000fbe:	88fb      	ldrh	r3, [r7, #6]
 8000fc0:	f241 32b9 	movw	r2, #5049	@ 0x13b9
 8000fc4:	4293      	cmp	r3, r2
 8000fc6:	d801      	bhi.n	8000fcc <keypad_read_key+0x90>
	{
		return KEY_SELECT;
 8000fc8:	2304      	movs	r3, #4
 8000fca:	e000      	b.n	8000fce <keypad_read_key+0x92>
	}
	return KEY_NONE;
 8000fcc:	2305      	movs	r3, #5




}
 8000fce:	4618      	mov	r0, r3
 8000fd0:	370c      	adds	r7, #12
 8000fd2:	46bd      	mov	sp, r7
 8000fd4:	bc80      	pop	{r7}
 8000fd6:	4770      	bx	lr
 8000fd8:	40012000 	.word	0x40012000

08000fdc <main>:

int row = 0;
int col = 0;

int main(void)
{
 8000fdc:	b580      	push	{r7, lr}
 8000fde:	b082      	sub	sp, #8
 8000fe0:	af00      	add	r7, sp, #0
   uint16_t key_val = 0;
 8000fe2:	2300      	movs	r3, #0
 8000fe4:	807b      	strh	r3, [r7, #2]
   static char* key_name[] = {"RIGHT", "UP", "DOWN", "LEFT", "SELECT", "NONE"};

   GPIO_init();
 8000fe6:	f7ff fde7 	bl	8000bb8 <GPIO_init>
   tim2_init();
 8000fea:	f000 f915 	bl	8001218 <tim2_init>

   keypad_init();
 8000fee:	f7ff ff77 	bl	8000ee0 <keypad_init>

   lcd_init();
 8000ff2:	f7ff fedf 	bl	8000db4 <lcd_init>
   lcd_put_cur(0,0);
 8000ff6:	2100      	movs	r1, #0
 8000ff8:	2000      	movs	r0, #0
 8000ffa:	f7ff ff3c 	bl	8000e76 <lcd_put_cur>
   lcd_send_string("SIST. TEMPO REAL");
 8000ffe:	4820      	ldr	r0, [pc, #128]	@ (8001080 <main+0xa4>)
 8001000:	f7ff ff58 	bl	8000eb4 <lcd_send_string>

   lcd_put_cur(1,0);
 8001004:	2100      	movs	r1, #0
 8001006:	2001      	movs	r0, #1
 8001008:	f7ff ff35 	bl	8000e76 <lcd_put_cur>
   lcd_send_string("* U N I F O R *");
 800100c:	481d      	ldr	r0, [pc, #116]	@ (8001084 <main+0xa8>)
 800100e:	f7ff ff51 	bl	8000eb4 <lcd_send_string>


   lcd_clear();
 8001012:	f7ff ff26 	bl	8000e62 <lcd_clear>
   lcd_put_cur(0,0);
 8001016:	2100      	movs	r1, #0
 8001018:	2000      	movs	r0, #0
 800101a:	f7ff ff2c 	bl	8000e76 <lcd_put_cur>
   lcd_send_string("TECLA ACIONADA:");
 800101e:	481a      	ldr	r0, [pc, #104]	@ (8001088 <main+0xac>)
 8001020:	f7ff ff48 	bl	8000eb4 <lcd_send_string>

   int bounce=0;
 8001024:	2300      	movs	r3, #0
 8001026:	607b      	str	r3, [r7, #4]

    while(1)
    {
    	key_val = keypad_read_key();
 8001028:	f7ff ff88 	bl	8000f3c <keypad_read_key>
 800102c:	4603      	mov	r3, r0
 800102e:	807b      	strh	r3, [r7, #2]

    	if ((key_val == 4) & (bounce == 0))
 8001030:	887b      	ldrh	r3, [r7, #2]
 8001032:	2b04      	cmp	r3, #4
 8001034:	bf0c      	ite	eq
 8001036:	2301      	moveq	r3, #1
 8001038:	2300      	movne	r3, #0
 800103a:	b2da      	uxtb	r2, r3
 800103c:	687b      	ldr	r3, [r7, #4]
 800103e:	2b00      	cmp	r3, #0
 8001040:	bf0c      	ite	eq
 8001042:	2301      	moveq	r3, #1
 8001044:	2300      	movne	r3, #0
 8001046:	b2db      	uxtb	r3, r3
 8001048:	4013      	ands	r3, r2
 800104a:	b2db      	uxtb	r3, r3
 800104c:	2b00      	cmp	r3, #0
 800104e:	d003      	beq.n	8001058 <main+0x7c>
    	{
    		bounce++;
 8001050:	687b      	ldr	r3, [r7, #4]
 8001052:	3301      	adds	r3, #1
 8001054:	607b      	str	r3, [r7, #4]
 8001056:	e7e7      	b.n	8001028 <main+0x4c>
    	}else{
    		   lcd_put_cur(1,0);
 8001058:	2100      	movs	r1, #0
 800105a:	2001      	movs	r0, #1
 800105c:	f7ff ff0b 	bl	8000e76 <lcd_put_cur>
    		   lcd_send_string(key_name[key_val]);
 8001060:	887b      	ldrh	r3, [r7, #2]
 8001062:	4a0a      	ldr	r2, [pc, #40]	@ (800108c <main+0xb0>)
 8001064:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001068:	4618      	mov	r0, r3
 800106a:	f7ff ff23 	bl	8000eb4 <lcd_send_string>
    		   lcd_send_string("   ");
 800106e:	4808      	ldr	r0, [pc, #32]	@ (8001090 <main+0xb4>)
 8001070:	f7ff ff20 	bl	8000eb4 <lcd_send_string>
    		   delay(100);
 8001074:	2064      	movs	r0, #100	@ 0x64
 8001076:	f000 f8f3 	bl	8001260 <delay>
    		   bounce = 0;
 800107a:	2300      	movs	r3, #0
 800107c:	607b      	str	r3, [r7, #4]
    	key_val = keypad_read_key();
 800107e:	e7d3      	b.n	8001028 <main+0x4c>
 8001080:	08003cd0 	.word	0x08003cd0
 8001084:	08003ce4 	.word	0x08003ce4
 8001088:	08003cf4 	.word	0x08003cf4
 800108c:	20000000 	.word	0x20000000
 8001090:	08003d04 	.word	0x08003d04

08001094 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001094:	b480      	push	{r7}
 8001096:	af00      	add	r7, sp, #0
  return 1;
 8001098:	2301      	movs	r3, #1
}
 800109a:	4618      	mov	r0, r3
 800109c:	46bd      	mov	sp, r7
 800109e:	bc80      	pop	{r7}
 80010a0:	4770      	bx	lr

080010a2 <_kill>:

int _kill(int pid, int sig)
{
 80010a2:	b580      	push	{r7, lr}
 80010a4:	b082      	sub	sp, #8
 80010a6:	af00      	add	r7, sp, #0
 80010a8:	6078      	str	r0, [r7, #4]
 80010aa:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80010ac:	f000 ff3a 	bl	8001f24 <__errno>
 80010b0:	4603      	mov	r3, r0
 80010b2:	2216      	movs	r2, #22
 80010b4:	601a      	str	r2, [r3, #0]
  return -1;
 80010b6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80010ba:	4618      	mov	r0, r3
 80010bc:	3708      	adds	r7, #8
 80010be:	46bd      	mov	sp, r7
 80010c0:	bd80      	pop	{r7, pc}

080010c2 <_exit>:

void _exit (int status)
{
 80010c2:	b580      	push	{r7, lr}
 80010c4:	b082      	sub	sp, #8
 80010c6:	af00      	add	r7, sp, #0
 80010c8:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80010ca:	f04f 31ff 	mov.w	r1, #4294967295
 80010ce:	6878      	ldr	r0, [r7, #4]
 80010d0:	f7ff ffe7 	bl	80010a2 <_kill>
  while (1) {}    /* Make sure we hang here */
 80010d4:	bf00      	nop
 80010d6:	e7fd      	b.n	80010d4 <_exit+0x12>

080010d8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80010d8:	b580      	push	{r7, lr}
 80010da:	b086      	sub	sp, #24
 80010dc:	af00      	add	r7, sp, #0
 80010de:	60f8      	str	r0, [r7, #12]
 80010e0:	60b9      	str	r1, [r7, #8]
 80010e2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80010e4:	2300      	movs	r3, #0
 80010e6:	617b      	str	r3, [r7, #20]
 80010e8:	e00a      	b.n	8001100 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80010ea:	f3af 8000 	nop.w
 80010ee:	4601      	mov	r1, r0
 80010f0:	68bb      	ldr	r3, [r7, #8]
 80010f2:	1c5a      	adds	r2, r3, #1
 80010f4:	60ba      	str	r2, [r7, #8]
 80010f6:	b2ca      	uxtb	r2, r1
 80010f8:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80010fa:	697b      	ldr	r3, [r7, #20]
 80010fc:	3301      	adds	r3, #1
 80010fe:	617b      	str	r3, [r7, #20]
 8001100:	697a      	ldr	r2, [r7, #20]
 8001102:	687b      	ldr	r3, [r7, #4]
 8001104:	429a      	cmp	r2, r3
 8001106:	dbf0      	blt.n	80010ea <_read+0x12>
  }

  return len;
 8001108:	687b      	ldr	r3, [r7, #4]
}
 800110a:	4618      	mov	r0, r3
 800110c:	3718      	adds	r7, #24
 800110e:	46bd      	mov	sp, r7
 8001110:	bd80      	pop	{r7, pc}

08001112 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001112:	b580      	push	{r7, lr}
 8001114:	b086      	sub	sp, #24
 8001116:	af00      	add	r7, sp, #0
 8001118:	60f8      	str	r0, [r7, #12]
 800111a:	60b9      	str	r1, [r7, #8]
 800111c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800111e:	2300      	movs	r3, #0
 8001120:	617b      	str	r3, [r7, #20]
 8001122:	e009      	b.n	8001138 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001124:	68bb      	ldr	r3, [r7, #8]
 8001126:	1c5a      	adds	r2, r3, #1
 8001128:	60ba      	str	r2, [r7, #8]
 800112a:	781b      	ldrb	r3, [r3, #0]
 800112c:	4618      	mov	r0, r3
 800112e:	f000 f8fc 	bl	800132a <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001132:	697b      	ldr	r3, [r7, #20]
 8001134:	3301      	adds	r3, #1
 8001136:	617b      	str	r3, [r7, #20]
 8001138:	697a      	ldr	r2, [r7, #20]
 800113a:	687b      	ldr	r3, [r7, #4]
 800113c:	429a      	cmp	r2, r3
 800113e:	dbf1      	blt.n	8001124 <_write+0x12>
  }
  return len;
 8001140:	687b      	ldr	r3, [r7, #4]
}
 8001142:	4618      	mov	r0, r3
 8001144:	3718      	adds	r7, #24
 8001146:	46bd      	mov	sp, r7
 8001148:	bd80      	pop	{r7, pc}

0800114a <_close>:

int _close(int file)
{
 800114a:	b480      	push	{r7}
 800114c:	b083      	sub	sp, #12
 800114e:	af00      	add	r7, sp, #0
 8001150:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001152:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001156:	4618      	mov	r0, r3
 8001158:	370c      	adds	r7, #12
 800115a:	46bd      	mov	sp, r7
 800115c:	bc80      	pop	{r7}
 800115e:	4770      	bx	lr

08001160 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001160:	b480      	push	{r7}
 8001162:	b083      	sub	sp, #12
 8001164:	af00      	add	r7, sp, #0
 8001166:	6078      	str	r0, [r7, #4]
 8001168:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800116a:	683b      	ldr	r3, [r7, #0]
 800116c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001170:	605a      	str	r2, [r3, #4]
  return 0;
 8001172:	2300      	movs	r3, #0
}
 8001174:	4618      	mov	r0, r3
 8001176:	370c      	adds	r7, #12
 8001178:	46bd      	mov	sp, r7
 800117a:	bc80      	pop	{r7}
 800117c:	4770      	bx	lr

0800117e <_isatty>:

int _isatty(int file)
{
 800117e:	b480      	push	{r7}
 8001180:	b083      	sub	sp, #12
 8001182:	af00      	add	r7, sp, #0
 8001184:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001186:	2301      	movs	r3, #1
}
 8001188:	4618      	mov	r0, r3
 800118a:	370c      	adds	r7, #12
 800118c:	46bd      	mov	sp, r7
 800118e:	bc80      	pop	{r7}
 8001190:	4770      	bx	lr

08001192 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001192:	b480      	push	{r7}
 8001194:	b085      	sub	sp, #20
 8001196:	af00      	add	r7, sp, #0
 8001198:	60f8      	str	r0, [r7, #12]
 800119a:	60b9      	str	r1, [r7, #8]
 800119c:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800119e:	2300      	movs	r3, #0
}
 80011a0:	4618      	mov	r0, r3
 80011a2:	3714      	adds	r7, #20
 80011a4:	46bd      	mov	sp, r7
 80011a6:	bc80      	pop	{r7}
 80011a8:	4770      	bx	lr
	...

080011ac <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80011ac:	b580      	push	{r7, lr}
 80011ae:	b086      	sub	sp, #24
 80011b0:	af00      	add	r7, sp, #0
 80011b2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80011b4:	4a14      	ldr	r2, [pc, #80]	@ (8001208 <_sbrk+0x5c>)
 80011b6:	4b15      	ldr	r3, [pc, #84]	@ (800120c <_sbrk+0x60>)
 80011b8:	1ad3      	subs	r3, r2, r3
 80011ba:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80011bc:	697b      	ldr	r3, [r7, #20]
 80011be:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80011c0:	4b13      	ldr	r3, [pc, #76]	@ (8001210 <_sbrk+0x64>)
 80011c2:	681b      	ldr	r3, [r3, #0]
 80011c4:	2b00      	cmp	r3, #0
 80011c6:	d102      	bne.n	80011ce <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80011c8:	4b11      	ldr	r3, [pc, #68]	@ (8001210 <_sbrk+0x64>)
 80011ca:	4a12      	ldr	r2, [pc, #72]	@ (8001214 <_sbrk+0x68>)
 80011cc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80011ce:	4b10      	ldr	r3, [pc, #64]	@ (8001210 <_sbrk+0x64>)
 80011d0:	681a      	ldr	r2, [r3, #0]
 80011d2:	687b      	ldr	r3, [r7, #4]
 80011d4:	4413      	add	r3, r2
 80011d6:	693a      	ldr	r2, [r7, #16]
 80011d8:	429a      	cmp	r2, r3
 80011da:	d207      	bcs.n	80011ec <_sbrk+0x40>
  {
    errno = ENOMEM;
 80011dc:	f000 fea2 	bl	8001f24 <__errno>
 80011e0:	4603      	mov	r3, r0
 80011e2:	220c      	movs	r2, #12
 80011e4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80011e6:	f04f 33ff 	mov.w	r3, #4294967295
 80011ea:	e009      	b.n	8001200 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80011ec:	4b08      	ldr	r3, [pc, #32]	@ (8001210 <_sbrk+0x64>)
 80011ee:	681b      	ldr	r3, [r3, #0]
 80011f0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80011f2:	4b07      	ldr	r3, [pc, #28]	@ (8001210 <_sbrk+0x64>)
 80011f4:	681a      	ldr	r2, [r3, #0]
 80011f6:	687b      	ldr	r3, [r7, #4]
 80011f8:	4413      	add	r3, r2
 80011fa:	4a05      	ldr	r2, [pc, #20]	@ (8001210 <_sbrk+0x64>)
 80011fc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80011fe:	68fb      	ldr	r3, [r7, #12]
}
 8001200:	4618      	mov	r0, r3
 8001202:	3718      	adds	r7, #24
 8001204:	46bd      	mov	sp, r7
 8001206:	bd80      	pop	{r7, pc}
 8001208:	20018000 	.word	0x20018000
 800120c:	00000400 	.word	0x00000400
 8001210:	200001fc 	.word	0x200001fc
 8001214:	20000350 	.word	0x20000350

08001218 <tim2_init>:
#define TIM2EN	(1U<<0)
#define CR1_CEN	(1U<<0)
#define SR_UIF 	(1U<<0)

void tim2_init(void)
{
 8001218:	b480      	push	{r7}
 800121a:	af00      	add	r7, sp, #0
    /* Habilita o clock para acesso ao timer2 */
    RCC->APB1ENR |=TIM2EN;
 800121c:	4b0f      	ldr	r3, [pc, #60]	@ (800125c <tim2_init+0x44>)
 800121e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001220:	4a0e      	ldr	r2, [pc, #56]	@ (800125c <tim2_init+0x44>)
 8001222:	f043 0301 	orr.w	r3, r3, #1
 8001226:	6413      	str	r3, [r2, #64]	@ 0x40

    TIM2->PSC = 16; // Configura o valor do prescaler
 8001228:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800122c:	2210      	movs	r2, #16
 800122e:	629a      	str	r2, [r3, #40]	@ 0x28

    /* Configura o valor de recarga automática (auto-reload) */
    TIM2->ARR = 1000;  // 1.000.000 / 10.000 = 1000
 8001230:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001234:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8001238:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Limpa o contador */
    TIM2->CNT = 0;
 800123a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800123e:	2200      	movs	r2, #0
 8001240:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Habilita o timer */
    TIM2->CR1 &= ~CR1_CEN;
 8001242:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001246:	681b      	ldr	r3, [r3, #0]
 8001248:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800124c:	f023 0301 	bic.w	r3, r3, #1
 8001250:	6013      	str	r3, [r2, #0]

}
 8001252:	bf00      	nop
 8001254:	46bd      	mov	sp, r7
 8001256:	bc80      	pop	{r7}
 8001258:	4770      	bx	lr
 800125a:	bf00      	nop
 800125c:	40023800 	.word	0x40023800

08001260 <delay>:


void delay (uint16_t ms)
{
 8001260:	b480      	push	{r7}
 8001262:	b085      	sub	sp, #20
 8001264:	af00      	add	r7, sp, #0
 8001266:	4603      	mov	r3, r0
 8001268:	80fb      	strh	r3, [r7, #6]
	// Habilita o timer
	TIM2->CR1 |= CR1_CEN;
 800126a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800126e:	681b      	ldr	r3, [r3, #0]
 8001270:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001274:	f043 0301 	orr.w	r3, r3, #1
 8001278:	6013      	str	r3, [r2, #0]
	TIM2->CNT = 0;
 800127a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800127e:	2200      	movs	r2, #0
 8001280:	625a      	str	r2, [r3, #36]	@ 0x24
	for (int i = 0; i < ms; i++){
 8001282:	2300      	movs	r3, #0
 8001284:	60fb      	str	r3, [r7, #12]
 8001286:	e012      	b.n	80012ae <delay+0x4e>
		while(!(TIM2->SR & SR_UIF)){}  // Espera pelo flag UIF - Estouro do timer
 8001288:	bf00      	nop
 800128a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800128e:	691b      	ldr	r3, [r3, #16]
 8001290:	f003 0301 	and.w	r3, r3, #1
 8001294:	2b00      	cmp	r3, #0
 8001296:	d0f8      	beq.n	800128a <delay+0x2a>
		TIM2->SR &=~SR_UIF;
 8001298:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800129c:	691b      	ldr	r3, [r3, #16]
 800129e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80012a2:	f023 0301 	bic.w	r3, r3, #1
 80012a6:	6113      	str	r3, [r2, #16]
	for (int i = 0; i < ms; i++){
 80012a8:	68fb      	ldr	r3, [r7, #12]
 80012aa:	3301      	adds	r3, #1
 80012ac:	60fb      	str	r3, [r7, #12]
 80012ae:	88fb      	ldrh	r3, [r7, #6]
 80012b0:	68fa      	ldr	r2, [r7, #12]
 80012b2:	429a      	cmp	r2, r3
 80012b4:	dbe8      	blt.n	8001288 <delay+0x28>

	};
	TIM2->CR1 &= ~CR1_CEN;
 80012b6:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80012ba:	681b      	ldr	r3, [r3, #0]
 80012bc:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80012c0:	f023 0301 	bic.w	r3, r3, #1
 80012c4:	6013      	str	r3, [r2, #0]
}
 80012c6:	bf00      	nop
 80012c8:	3714      	adds	r7, #20
 80012ca:	46bd      	mov	sp, r7
 80012cc:	bc80      	pop	{r7}
 80012ce:	4770      	bx	lr

080012d0 <delay_ms>:


// delay de aprox. 1ms
void delay_ms (uint16_t us)
{
 80012d0:	b480      	push	{r7}
 80012d2:	b085      	sub	sp, #20
 80012d4:	af00      	add	r7, sp, #0
 80012d6:	4603      	mov	r3, r0
 80012d8:	80fb      	strh	r3, [r7, #6]
	for (int i =0; i < 50*us; i++){}
 80012da:	2300      	movs	r3, #0
 80012dc:	60fb      	str	r3, [r7, #12]
 80012de:	e002      	b.n	80012e6 <delay_ms+0x16>
 80012e0:	68fb      	ldr	r3, [r7, #12]
 80012e2:	3301      	adds	r3, #1
 80012e4:	60fb      	str	r3, [r7, #12]
 80012e6:	88fb      	ldrh	r3, [r7, #6]
 80012e8:	2232      	movs	r2, #50	@ 0x32
 80012ea:	fb02 f303 	mul.w	r3, r2, r3
 80012ee:	68fa      	ldr	r2, [r7, #12]
 80012f0:	429a      	cmp	r2, r3
 80012f2:	dbf5      	blt.n	80012e0 <delay_ms+0x10>
}
 80012f4:	bf00      	nop
 80012f6:	bf00      	nop
 80012f8:	3714      	adds	r7, #20
 80012fa:	46bd      	mov	sp, r7
 80012fc:	bc80      	pop	{r7}
 80012fe:	4770      	bx	lr

08001300 <delayLCD>:


// Delay de aprox. 20us
void delayLCD (uint16_t us)
{
 8001300:	b480      	push	{r7}
 8001302:	b085      	sub	sp, #20
 8001304:	af00      	add	r7, sp, #0
 8001306:	4603      	mov	r3, r0
 8001308:	80fb      	strh	r3, [r7, #6]
	for (int i =0; i < us; i++){}
 800130a:	2300      	movs	r3, #0
 800130c:	60fb      	str	r3, [r7, #12]
 800130e:	e002      	b.n	8001316 <delayLCD+0x16>
 8001310:	68fb      	ldr	r3, [r7, #12]
 8001312:	3301      	adds	r3, #1
 8001314:	60fb      	str	r3, [r7, #12]
 8001316:	88fb      	ldrh	r3, [r7, #6]
 8001318:	68fa      	ldr	r2, [r7, #12]
 800131a:	429a      	cmp	r2, r3
 800131c:	dbf8      	blt.n	8001310 <delayLCD+0x10>
}
 800131e:	bf00      	nop
 8001320:	bf00      	nop
 8001322:	3714      	adds	r7, #20
 8001324:	46bd      	mov	sp, r7
 8001326:	bc80      	pop	{r7}
 8001328:	4770      	bx	lr

0800132a <__io_putchar>:

void uart2_write(int ch);


int __io_putchar(int ch)
{
 800132a:	b580      	push	{r7, lr}
 800132c:	b082      	sub	sp, #8
 800132e:	af00      	add	r7, sp, #0
 8001330:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8001332:	6878      	ldr	r0, [r7, #4]
 8001334:	f000 f806 	bl	8001344 <uart2_write>
	return ch;
 8001338:	687b      	ldr	r3, [r7, #4]
}
 800133a:	4618      	mov	r0, r3
 800133c:	3708      	adds	r7, #8
 800133e:	46bd      	mov	sp, r7
 8001340:	bd80      	pop	{r7, pc}
	...

08001344 <uart2_write>:
    return USART2 -> DR;
}


void uart2_write(int ch)
{
 8001344:	b480      	push	{r7}
 8001346:	b083      	sub	sp, #12
 8001348:	af00      	add	r7, sp, #0
 800134a:	6078      	str	r0, [r7, #4]
    /*Testa se o buffer de transmissão está vazio */
    while (!(USART2->SR & SR_TXE)) {}
 800134c:	bf00      	nop
 800134e:	4b07      	ldr	r3, [pc, #28]	@ (800136c <uart2_write+0x28>)
 8001350:	681b      	ldr	r3, [r3, #0]
 8001352:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001356:	2b00      	cmp	r3, #0
 8001358:	d0f9      	beq.n	800134e <uart2_write+0xa>

    /* Escreva dado no registrador de saída da uart2 (data register) */
    USART2->DR = (ch & 0xFF);
 800135a:	687b      	ldr	r3, [r7, #4]
 800135c:	4a03      	ldr	r2, [pc, #12]	@ (800136c <uart2_write+0x28>)
 800135e:	b2db      	uxtb	r3, r3
 8001360:	6053      	str	r3, [r2, #4]
}
 8001362:	bf00      	nop
 8001364:	370c      	adds	r7, #12
 8001366:	46bd      	mov	sp, r7
 8001368:	bc80      	pop	{r7}
 800136a:	4770      	bx	lr
 800136c:	40004400 	.word	0x40004400

08001370 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001370:	480d      	ldr	r0, [pc, #52]	@ (80013a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001372:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001374:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001378:	480c      	ldr	r0, [pc, #48]	@ (80013ac <LoopForever+0x6>)
  ldr r1, =_edata
 800137a:	490d      	ldr	r1, [pc, #52]	@ (80013b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800137c:	4a0d      	ldr	r2, [pc, #52]	@ (80013b4 <LoopForever+0xe>)
  movs r3, #0
 800137e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001380:	e002      	b.n	8001388 <LoopCopyDataInit>

08001382 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001382:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001384:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001386:	3304      	adds	r3, #4

08001388 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001388:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800138a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800138c:	d3f9      	bcc.n	8001382 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800138e:	4a0a      	ldr	r2, [pc, #40]	@ (80013b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001390:	4c0a      	ldr	r4, [pc, #40]	@ (80013bc <LoopForever+0x16>)
  movs r3, #0
 8001392:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001394:	e001      	b.n	800139a <LoopFillZerobss>

08001396 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001396:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001398:	3204      	adds	r2, #4

0800139a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800139a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800139c:	d3fb      	bcc.n	8001396 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800139e:	f000 fdc7 	bl	8001f30 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80013a2:	f7ff fe1b 	bl	8000fdc <main>

080013a6 <LoopForever>:

LoopForever:
  b LoopForever
 80013a6:	e7fe      	b.n	80013a6 <LoopForever>
  ldr   r0, =_estack
 80013a8:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80013ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80013b0:	200001e0 	.word	0x200001e0
  ldr r2, =_sidata
 80013b4:	080040b0 	.word	0x080040b0
  ldr r2, =_sbss
 80013b8:	200001e0 	.word	0x200001e0
  ldr r4, =_ebss
 80013bc:	2000034c 	.word	0x2000034c

080013c0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80013c0:	e7fe      	b.n	80013c0 <ADC_IRQHandler>

080013c2 <__cvt>:
 80013c2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80013c6:	b088      	sub	sp, #32
 80013c8:	2b00      	cmp	r3, #0
 80013ca:	461d      	mov	r5, r3
 80013cc:	4614      	mov	r4, r2
 80013ce:	bfbc      	itt	lt
 80013d0:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 80013d4:	4614      	movlt	r4, r2
 80013d6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80013d8:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 80013da:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 80013de:	bfb6      	itet	lt
 80013e0:	461d      	movlt	r5, r3
 80013e2:	2300      	movge	r3, #0
 80013e4:	232d      	movlt	r3, #45	@ 0x2d
 80013e6:	7013      	strb	r3, [r2, #0]
 80013e8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80013ea:	f023 0820 	bic.w	r8, r3, #32
 80013ee:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80013f2:	d005      	beq.n	8001400 <__cvt+0x3e>
 80013f4:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 80013f8:	d100      	bne.n	80013fc <__cvt+0x3a>
 80013fa:	3601      	adds	r6, #1
 80013fc:	2302      	movs	r3, #2
 80013fe:	e000      	b.n	8001402 <__cvt+0x40>
 8001400:	2303      	movs	r3, #3
 8001402:	aa07      	add	r2, sp, #28
 8001404:	9204      	str	r2, [sp, #16]
 8001406:	aa06      	add	r2, sp, #24
 8001408:	e9cd a202 	strd	sl, r2, [sp, #8]
 800140c:	e9cd 3600 	strd	r3, r6, [sp]
 8001410:	4622      	mov	r2, r4
 8001412:	462b      	mov	r3, r5
 8001414:	f000 fe3c 	bl	8002090 <_dtoa_r>
 8001418:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800141c:	4607      	mov	r7, r0
 800141e:	d119      	bne.n	8001454 <__cvt+0x92>
 8001420:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8001422:	07db      	lsls	r3, r3, #31
 8001424:	d50e      	bpl.n	8001444 <__cvt+0x82>
 8001426:	eb00 0906 	add.w	r9, r0, r6
 800142a:	2200      	movs	r2, #0
 800142c:	2300      	movs	r3, #0
 800142e:	4620      	mov	r0, r4
 8001430:	4629      	mov	r1, r5
 8001432:	f7ff fb51 	bl	8000ad8 <__aeabi_dcmpeq>
 8001436:	b108      	cbz	r0, 800143c <__cvt+0x7a>
 8001438:	f8cd 901c 	str.w	r9, [sp, #28]
 800143c:	2230      	movs	r2, #48	@ 0x30
 800143e:	9b07      	ldr	r3, [sp, #28]
 8001440:	454b      	cmp	r3, r9
 8001442:	d31e      	bcc.n	8001482 <__cvt+0xc0>
 8001444:	9b07      	ldr	r3, [sp, #28]
 8001446:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8001448:	1bdb      	subs	r3, r3, r7
 800144a:	4638      	mov	r0, r7
 800144c:	6013      	str	r3, [r2, #0]
 800144e:	b008      	add	sp, #32
 8001450:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001454:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001458:	eb00 0906 	add.w	r9, r0, r6
 800145c:	d1e5      	bne.n	800142a <__cvt+0x68>
 800145e:	7803      	ldrb	r3, [r0, #0]
 8001460:	2b30      	cmp	r3, #48	@ 0x30
 8001462:	d10a      	bne.n	800147a <__cvt+0xb8>
 8001464:	2200      	movs	r2, #0
 8001466:	2300      	movs	r3, #0
 8001468:	4620      	mov	r0, r4
 800146a:	4629      	mov	r1, r5
 800146c:	f7ff fb34 	bl	8000ad8 <__aeabi_dcmpeq>
 8001470:	b918      	cbnz	r0, 800147a <__cvt+0xb8>
 8001472:	f1c6 0601 	rsb	r6, r6, #1
 8001476:	f8ca 6000 	str.w	r6, [sl]
 800147a:	f8da 3000 	ldr.w	r3, [sl]
 800147e:	4499      	add	r9, r3
 8001480:	e7d3      	b.n	800142a <__cvt+0x68>
 8001482:	1c59      	adds	r1, r3, #1
 8001484:	9107      	str	r1, [sp, #28]
 8001486:	701a      	strb	r2, [r3, #0]
 8001488:	e7d9      	b.n	800143e <__cvt+0x7c>

0800148a <__exponent>:
 800148a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800148c:	2900      	cmp	r1, #0
 800148e:	bfba      	itte	lt
 8001490:	4249      	neglt	r1, r1
 8001492:	232d      	movlt	r3, #45	@ 0x2d
 8001494:	232b      	movge	r3, #43	@ 0x2b
 8001496:	2909      	cmp	r1, #9
 8001498:	7002      	strb	r2, [r0, #0]
 800149a:	7043      	strb	r3, [r0, #1]
 800149c:	dd29      	ble.n	80014f2 <__exponent+0x68>
 800149e:	f10d 0307 	add.w	r3, sp, #7
 80014a2:	461d      	mov	r5, r3
 80014a4:	270a      	movs	r7, #10
 80014a6:	461a      	mov	r2, r3
 80014a8:	fbb1 f6f7 	udiv	r6, r1, r7
 80014ac:	fb07 1416 	mls	r4, r7, r6, r1
 80014b0:	3430      	adds	r4, #48	@ 0x30
 80014b2:	f802 4c01 	strb.w	r4, [r2, #-1]
 80014b6:	460c      	mov	r4, r1
 80014b8:	2c63      	cmp	r4, #99	@ 0x63
 80014ba:	f103 33ff 	add.w	r3, r3, #4294967295
 80014be:	4631      	mov	r1, r6
 80014c0:	dcf1      	bgt.n	80014a6 <__exponent+0x1c>
 80014c2:	3130      	adds	r1, #48	@ 0x30
 80014c4:	1e94      	subs	r4, r2, #2
 80014c6:	f803 1c01 	strb.w	r1, [r3, #-1]
 80014ca:	1c41      	adds	r1, r0, #1
 80014cc:	4623      	mov	r3, r4
 80014ce:	42ab      	cmp	r3, r5
 80014d0:	d30a      	bcc.n	80014e8 <__exponent+0x5e>
 80014d2:	f10d 0309 	add.w	r3, sp, #9
 80014d6:	1a9b      	subs	r3, r3, r2
 80014d8:	42ac      	cmp	r4, r5
 80014da:	bf88      	it	hi
 80014dc:	2300      	movhi	r3, #0
 80014de:	3302      	adds	r3, #2
 80014e0:	4403      	add	r3, r0
 80014e2:	1a18      	subs	r0, r3, r0
 80014e4:	b003      	add	sp, #12
 80014e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014e8:	f813 6b01 	ldrb.w	r6, [r3], #1
 80014ec:	f801 6f01 	strb.w	r6, [r1, #1]!
 80014f0:	e7ed      	b.n	80014ce <__exponent+0x44>
 80014f2:	2330      	movs	r3, #48	@ 0x30
 80014f4:	3130      	adds	r1, #48	@ 0x30
 80014f6:	7083      	strb	r3, [r0, #2]
 80014f8:	70c1      	strb	r1, [r0, #3]
 80014fa:	1d03      	adds	r3, r0, #4
 80014fc:	e7f1      	b.n	80014e2 <__exponent+0x58>
	...

08001500 <_printf_float>:
 8001500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001504:	b091      	sub	sp, #68	@ 0x44
 8001506:	460c      	mov	r4, r1
 8001508:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 800150c:	4616      	mov	r6, r2
 800150e:	461f      	mov	r7, r3
 8001510:	4605      	mov	r5, r0
 8001512:	f000 fcbd 	bl	8001e90 <_localeconv_r>
 8001516:	6803      	ldr	r3, [r0, #0]
 8001518:	9308      	str	r3, [sp, #32]
 800151a:	4618      	mov	r0, r3
 800151c:	f7fe feb0 	bl	8000280 <strlen>
 8001520:	2300      	movs	r3, #0
 8001522:	930e      	str	r3, [sp, #56]	@ 0x38
 8001524:	f8d8 3000 	ldr.w	r3, [r8]
 8001528:	9009      	str	r0, [sp, #36]	@ 0x24
 800152a:	3307      	adds	r3, #7
 800152c:	f023 0307 	bic.w	r3, r3, #7
 8001530:	f103 0208 	add.w	r2, r3, #8
 8001534:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001538:	f8d4 b000 	ldr.w	fp, [r4]
 800153c:	f8c8 2000 	str.w	r2, [r8]
 8001540:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001544:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001548:	930b      	str	r3, [sp, #44]	@ 0x2c
 800154a:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 800154e:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001552:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8001556:	4b9d      	ldr	r3, [pc, #628]	@ (80017cc <_printf_float+0x2cc>)
 8001558:	f04f 32ff 	mov.w	r2, #4294967295
 800155c:	f7ff faee 	bl	8000b3c <__aeabi_dcmpun>
 8001560:	bb70      	cbnz	r0, 80015c0 <_printf_float+0xc0>
 8001562:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8001566:	4b99      	ldr	r3, [pc, #612]	@ (80017cc <_printf_float+0x2cc>)
 8001568:	f04f 32ff 	mov.w	r2, #4294967295
 800156c:	f7ff fac8 	bl	8000b00 <__aeabi_dcmple>
 8001570:	bb30      	cbnz	r0, 80015c0 <_printf_float+0xc0>
 8001572:	2200      	movs	r2, #0
 8001574:	2300      	movs	r3, #0
 8001576:	4640      	mov	r0, r8
 8001578:	4649      	mov	r1, r9
 800157a:	f7ff fab7 	bl	8000aec <__aeabi_dcmplt>
 800157e:	b110      	cbz	r0, 8001586 <_printf_float+0x86>
 8001580:	232d      	movs	r3, #45	@ 0x2d
 8001582:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001586:	4a92      	ldr	r2, [pc, #584]	@ (80017d0 <_printf_float+0x2d0>)
 8001588:	4b92      	ldr	r3, [pc, #584]	@ (80017d4 <_printf_float+0x2d4>)
 800158a:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800158e:	bf94      	ite	ls
 8001590:	4690      	movls	r8, r2
 8001592:	4698      	movhi	r8, r3
 8001594:	2303      	movs	r3, #3
 8001596:	6123      	str	r3, [r4, #16]
 8001598:	f02b 0304 	bic.w	r3, fp, #4
 800159c:	6023      	str	r3, [r4, #0]
 800159e:	f04f 0900 	mov.w	r9, #0
 80015a2:	9700      	str	r7, [sp, #0]
 80015a4:	4633      	mov	r3, r6
 80015a6:	aa0f      	add	r2, sp, #60	@ 0x3c
 80015a8:	4621      	mov	r1, r4
 80015aa:	4628      	mov	r0, r5
 80015ac:	f000 f9d4 	bl	8001958 <_printf_common>
 80015b0:	3001      	adds	r0, #1
 80015b2:	f040 808f 	bne.w	80016d4 <_printf_float+0x1d4>
 80015b6:	f04f 30ff 	mov.w	r0, #4294967295
 80015ba:	b011      	add	sp, #68	@ 0x44
 80015bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80015c0:	4642      	mov	r2, r8
 80015c2:	464b      	mov	r3, r9
 80015c4:	4640      	mov	r0, r8
 80015c6:	4649      	mov	r1, r9
 80015c8:	f7ff fab8 	bl	8000b3c <__aeabi_dcmpun>
 80015cc:	b140      	cbz	r0, 80015e0 <_printf_float+0xe0>
 80015ce:	464b      	mov	r3, r9
 80015d0:	2b00      	cmp	r3, #0
 80015d2:	bfbc      	itt	lt
 80015d4:	232d      	movlt	r3, #45	@ 0x2d
 80015d6:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80015da:	4a7f      	ldr	r2, [pc, #508]	@ (80017d8 <_printf_float+0x2d8>)
 80015dc:	4b7f      	ldr	r3, [pc, #508]	@ (80017dc <_printf_float+0x2dc>)
 80015de:	e7d4      	b.n	800158a <_printf_float+0x8a>
 80015e0:	6863      	ldr	r3, [r4, #4]
 80015e2:	1c5a      	adds	r2, r3, #1
 80015e4:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 80015e8:	d13f      	bne.n	800166a <_printf_float+0x16a>
 80015ea:	2306      	movs	r3, #6
 80015ec:	6063      	str	r3, [r4, #4]
 80015ee:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 80015f2:	2200      	movs	r2, #0
 80015f4:	6023      	str	r3, [r4, #0]
 80015f6:	9206      	str	r2, [sp, #24]
 80015f8:	aa0e      	add	r2, sp, #56	@ 0x38
 80015fa:	e9cd a204 	strd	sl, r2, [sp, #16]
 80015fe:	aa0d      	add	r2, sp, #52	@ 0x34
 8001600:	9203      	str	r2, [sp, #12]
 8001602:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8001606:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800160a:	6863      	ldr	r3, [r4, #4]
 800160c:	9300      	str	r3, [sp, #0]
 800160e:	4642      	mov	r2, r8
 8001610:	464b      	mov	r3, r9
 8001612:	4628      	mov	r0, r5
 8001614:	910a      	str	r1, [sp, #40]	@ 0x28
 8001616:	f7ff fed4 	bl	80013c2 <__cvt>
 800161a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800161c:	2947      	cmp	r1, #71	@ 0x47
 800161e:	4680      	mov	r8, r0
 8001620:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8001622:	d128      	bne.n	8001676 <_printf_float+0x176>
 8001624:	1cc8      	adds	r0, r1, #3
 8001626:	db02      	blt.n	800162e <_printf_float+0x12e>
 8001628:	6863      	ldr	r3, [r4, #4]
 800162a:	4299      	cmp	r1, r3
 800162c:	dd40      	ble.n	80016b0 <_printf_float+0x1b0>
 800162e:	f1aa 0a02 	sub.w	sl, sl, #2
 8001632:	fa5f fa8a 	uxtb.w	sl, sl
 8001636:	3901      	subs	r1, #1
 8001638:	4652      	mov	r2, sl
 800163a:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800163e:	910d      	str	r1, [sp, #52]	@ 0x34
 8001640:	f7ff ff23 	bl	800148a <__exponent>
 8001644:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001646:	1813      	adds	r3, r2, r0
 8001648:	2a01      	cmp	r2, #1
 800164a:	4681      	mov	r9, r0
 800164c:	6123      	str	r3, [r4, #16]
 800164e:	dc02      	bgt.n	8001656 <_printf_float+0x156>
 8001650:	6822      	ldr	r2, [r4, #0]
 8001652:	07d2      	lsls	r2, r2, #31
 8001654:	d501      	bpl.n	800165a <_printf_float+0x15a>
 8001656:	3301      	adds	r3, #1
 8001658:	6123      	str	r3, [r4, #16]
 800165a:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 800165e:	2b00      	cmp	r3, #0
 8001660:	d09f      	beq.n	80015a2 <_printf_float+0xa2>
 8001662:	232d      	movs	r3, #45	@ 0x2d
 8001664:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001668:	e79b      	b.n	80015a2 <_printf_float+0xa2>
 800166a:	2947      	cmp	r1, #71	@ 0x47
 800166c:	d1bf      	bne.n	80015ee <_printf_float+0xee>
 800166e:	2b00      	cmp	r3, #0
 8001670:	d1bd      	bne.n	80015ee <_printf_float+0xee>
 8001672:	2301      	movs	r3, #1
 8001674:	e7ba      	b.n	80015ec <_printf_float+0xec>
 8001676:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800167a:	d9dc      	bls.n	8001636 <_printf_float+0x136>
 800167c:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001680:	d118      	bne.n	80016b4 <_printf_float+0x1b4>
 8001682:	2900      	cmp	r1, #0
 8001684:	6863      	ldr	r3, [r4, #4]
 8001686:	dd0b      	ble.n	80016a0 <_printf_float+0x1a0>
 8001688:	6121      	str	r1, [r4, #16]
 800168a:	b913      	cbnz	r3, 8001692 <_printf_float+0x192>
 800168c:	6822      	ldr	r2, [r4, #0]
 800168e:	07d0      	lsls	r0, r2, #31
 8001690:	d502      	bpl.n	8001698 <_printf_float+0x198>
 8001692:	3301      	adds	r3, #1
 8001694:	440b      	add	r3, r1
 8001696:	6123      	str	r3, [r4, #16]
 8001698:	65a1      	str	r1, [r4, #88]	@ 0x58
 800169a:	f04f 0900 	mov.w	r9, #0
 800169e:	e7dc      	b.n	800165a <_printf_float+0x15a>
 80016a0:	b913      	cbnz	r3, 80016a8 <_printf_float+0x1a8>
 80016a2:	6822      	ldr	r2, [r4, #0]
 80016a4:	07d2      	lsls	r2, r2, #31
 80016a6:	d501      	bpl.n	80016ac <_printf_float+0x1ac>
 80016a8:	3302      	adds	r3, #2
 80016aa:	e7f4      	b.n	8001696 <_printf_float+0x196>
 80016ac:	2301      	movs	r3, #1
 80016ae:	e7f2      	b.n	8001696 <_printf_float+0x196>
 80016b0:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 80016b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80016b6:	4299      	cmp	r1, r3
 80016b8:	db05      	blt.n	80016c6 <_printf_float+0x1c6>
 80016ba:	6823      	ldr	r3, [r4, #0]
 80016bc:	6121      	str	r1, [r4, #16]
 80016be:	07d8      	lsls	r0, r3, #31
 80016c0:	d5ea      	bpl.n	8001698 <_printf_float+0x198>
 80016c2:	1c4b      	adds	r3, r1, #1
 80016c4:	e7e7      	b.n	8001696 <_printf_float+0x196>
 80016c6:	2900      	cmp	r1, #0
 80016c8:	bfd4      	ite	le
 80016ca:	f1c1 0202 	rsble	r2, r1, #2
 80016ce:	2201      	movgt	r2, #1
 80016d0:	4413      	add	r3, r2
 80016d2:	e7e0      	b.n	8001696 <_printf_float+0x196>
 80016d4:	6823      	ldr	r3, [r4, #0]
 80016d6:	055a      	lsls	r2, r3, #21
 80016d8:	d407      	bmi.n	80016ea <_printf_float+0x1ea>
 80016da:	6923      	ldr	r3, [r4, #16]
 80016dc:	4642      	mov	r2, r8
 80016de:	4631      	mov	r1, r6
 80016e0:	4628      	mov	r0, r5
 80016e2:	47b8      	blx	r7
 80016e4:	3001      	adds	r0, #1
 80016e6:	d12b      	bne.n	8001740 <_printf_float+0x240>
 80016e8:	e765      	b.n	80015b6 <_printf_float+0xb6>
 80016ea:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80016ee:	f240 80dd 	bls.w	80018ac <_printf_float+0x3ac>
 80016f2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80016f6:	2200      	movs	r2, #0
 80016f8:	2300      	movs	r3, #0
 80016fa:	f7ff f9ed 	bl	8000ad8 <__aeabi_dcmpeq>
 80016fe:	2800      	cmp	r0, #0
 8001700:	d033      	beq.n	800176a <_printf_float+0x26a>
 8001702:	4a37      	ldr	r2, [pc, #220]	@ (80017e0 <_printf_float+0x2e0>)
 8001704:	2301      	movs	r3, #1
 8001706:	4631      	mov	r1, r6
 8001708:	4628      	mov	r0, r5
 800170a:	47b8      	blx	r7
 800170c:	3001      	adds	r0, #1
 800170e:	f43f af52 	beq.w	80015b6 <_printf_float+0xb6>
 8001712:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8001716:	4543      	cmp	r3, r8
 8001718:	db02      	blt.n	8001720 <_printf_float+0x220>
 800171a:	6823      	ldr	r3, [r4, #0]
 800171c:	07d8      	lsls	r0, r3, #31
 800171e:	d50f      	bpl.n	8001740 <_printf_float+0x240>
 8001720:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001724:	4631      	mov	r1, r6
 8001726:	4628      	mov	r0, r5
 8001728:	47b8      	blx	r7
 800172a:	3001      	adds	r0, #1
 800172c:	f43f af43 	beq.w	80015b6 <_printf_float+0xb6>
 8001730:	f04f 0900 	mov.w	r9, #0
 8001734:	f108 38ff 	add.w	r8, r8, #4294967295
 8001738:	f104 0a1a 	add.w	sl, r4, #26
 800173c:	45c8      	cmp	r8, r9
 800173e:	dc09      	bgt.n	8001754 <_printf_float+0x254>
 8001740:	6823      	ldr	r3, [r4, #0]
 8001742:	079b      	lsls	r3, r3, #30
 8001744:	f100 8103 	bmi.w	800194e <_printf_float+0x44e>
 8001748:	68e0      	ldr	r0, [r4, #12]
 800174a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800174c:	4298      	cmp	r0, r3
 800174e:	bfb8      	it	lt
 8001750:	4618      	movlt	r0, r3
 8001752:	e732      	b.n	80015ba <_printf_float+0xba>
 8001754:	2301      	movs	r3, #1
 8001756:	4652      	mov	r2, sl
 8001758:	4631      	mov	r1, r6
 800175a:	4628      	mov	r0, r5
 800175c:	47b8      	blx	r7
 800175e:	3001      	adds	r0, #1
 8001760:	f43f af29 	beq.w	80015b6 <_printf_float+0xb6>
 8001764:	f109 0901 	add.w	r9, r9, #1
 8001768:	e7e8      	b.n	800173c <_printf_float+0x23c>
 800176a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800176c:	2b00      	cmp	r3, #0
 800176e:	dc39      	bgt.n	80017e4 <_printf_float+0x2e4>
 8001770:	4a1b      	ldr	r2, [pc, #108]	@ (80017e0 <_printf_float+0x2e0>)
 8001772:	2301      	movs	r3, #1
 8001774:	4631      	mov	r1, r6
 8001776:	4628      	mov	r0, r5
 8001778:	47b8      	blx	r7
 800177a:	3001      	adds	r0, #1
 800177c:	f43f af1b 	beq.w	80015b6 <_printf_float+0xb6>
 8001780:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 8001784:	ea59 0303 	orrs.w	r3, r9, r3
 8001788:	d102      	bne.n	8001790 <_printf_float+0x290>
 800178a:	6823      	ldr	r3, [r4, #0]
 800178c:	07d9      	lsls	r1, r3, #31
 800178e:	d5d7      	bpl.n	8001740 <_printf_float+0x240>
 8001790:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001794:	4631      	mov	r1, r6
 8001796:	4628      	mov	r0, r5
 8001798:	47b8      	blx	r7
 800179a:	3001      	adds	r0, #1
 800179c:	f43f af0b 	beq.w	80015b6 <_printf_float+0xb6>
 80017a0:	f04f 0a00 	mov.w	sl, #0
 80017a4:	f104 0b1a 	add.w	fp, r4, #26
 80017a8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80017aa:	425b      	negs	r3, r3
 80017ac:	4553      	cmp	r3, sl
 80017ae:	dc01      	bgt.n	80017b4 <_printf_float+0x2b4>
 80017b0:	464b      	mov	r3, r9
 80017b2:	e793      	b.n	80016dc <_printf_float+0x1dc>
 80017b4:	2301      	movs	r3, #1
 80017b6:	465a      	mov	r2, fp
 80017b8:	4631      	mov	r1, r6
 80017ba:	4628      	mov	r0, r5
 80017bc:	47b8      	blx	r7
 80017be:	3001      	adds	r0, #1
 80017c0:	f43f aef9 	beq.w	80015b6 <_printf_float+0xb6>
 80017c4:	f10a 0a01 	add.w	sl, sl, #1
 80017c8:	e7ee      	b.n	80017a8 <_printf_float+0x2a8>
 80017ca:	bf00      	nop
 80017cc:	7fefffff 	.word	0x7fefffff
 80017d0:	08003d31 	.word	0x08003d31
 80017d4:	08003d35 	.word	0x08003d35
 80017d8:	08003d39 	.word	0x08003d39
 80017dc:	08003d3d 	.word	0x08003d3d
 80017e0:	08003d41 	.word	0x08003d41
 80017e4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80017e6:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 80017ea:	4553      	cmp	r3, sl
 80017ec:	bfa8      	it	ge
 80017ee:	4653      	movge	r3, sl
 80017f0:	2b00      	cmp	r3, #0
 80017f2:	4699      	mov	r9, r3
 80017f4:	dc36      	bgt.n	8001864 <_printf_float+0x364>
 80017f6:	f04f 0b00 	mov.w	fp, #0
 80017fa:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80017fe:	f104 021a 	add.w	r2, r4, #26
 8001802:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001804:	930a      	str	r3, [sp, #40]	@ 0x28
 8001806:	eba3 0309 	sub.w	r3, r3, r9
 800180a:	455b      	cmp	r3, fp
 800180c:	dc31      	bgt.n	8001872 <_printf_float+0x372>
 800180e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001810:	459a      	cmp	sl, r3
 8001812:	dc3a      	bgt.n	800188a <_printf_float+0x38a>
 8001814:	6823      	ldr	r3, [r4, #0]
 8001816:	07da      	lsls	r2, r3, #31
 8001818:	d437      	bmi.n	800188a <_printf_float+0x38a>
 800181a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800181c:	ebaa 0903 	sub.w	r9, sl, r3
 8001820:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001822:	ebaa 0303 	sub.w	r3, sl, r3
 8001826:	4599      	cmp	r9, r3
 8001828:	bfa8      	it	ge
 800182a:	4699      	movge	r9, r3
 800182c:	f1b9 0f00 	cmp.w	r9, #0
 8001830:	dc33      	bgt.n	800189a <_printf_float+0x39a>
 8001832:	f04f 0800 	mov.w	r8, #0
 8001836:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800183a:	f104 0b1a 	add.w	fp, r4, #26
 800183e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001840:	ebaa 0303 	sub.w	r3, sl, r3
 8001844:	eba3 0309 	sub.w	r3, r3, r9
 8001848:	4543      	cmp	r3, r8
 800184a:	f77f af79 	ble.w	8001740 <_printf_float+0x240>
 800184e:	2301      	movs	r3, #1
 8001850:	465a      	mov	r2, fp
 8001852:	4631      	mov	r1, r6
 8001854:	4628      	mov	r0, r5
 8001856:	47b8      	blx	r7
 8001858:	3001      	adds	r0, #1
 800185a:	f43f aeac 	beq.w	80015b6 <_printf_float+0xb6>
 800185e:	f108 0801 	add.w	r8, r8, #1
 8001862:	e7ec      	b.n	800183e <_printf_float+0x33e>
 8001864:	4642      	mov	r2, r8
 8001866:	4631      	mov	r1, r6
 8001868:	4628      	mov	r0, r5
 800186a:	47b8      	blx	r7
 800186c:	3001      	adds	r0, #1
 800186e:	d1c2      	bne.n	80017f6 <_printf_float+0x2f6>
 8001870:	e6a1      	b.n	80015b6 <_printf_float+0xb6>
 8001872:	2301      	movs	r3, #1
 8001874:	4631      	mov	r1, r6
 8001876:	4628      	mov	r0, r5
 8001878:	920a      	str	r2, [sp, #40]	@ 0x28
 800187a:	47b8      	blx	r7
 800187c:	3001      	adds	r0, #1
 800187e:	f43f ae9a 	beq.w	80015b6 <_printf_float+0xb6>
 8001882:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001884:	f10b 0b01 	add.w	fp, fp, #1
 8001888:	e7bb      	b.n	8001802 <_printf_float+0x302>
 800188a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800188e:	4631      	mov	r1, r6
 8001890:	4628      	mov	r0, r5
 8001892:	47b8      	blx	r7
 8001894:	3001      	adds	r0, #1
 8001896:	d1c0      	bne.n	800181a <_printf_float+0x31a>
 8001898:	e68d      	b.n	80015b6 <_printf_float+0xb6>
 800189a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800189c:	464b      	mov	r3, r9
 800189e:	4442      	add	r2, r8
 80018a0:	4631      	mov	r1, r6
 80018a2:	4628      	mov	r0, r5
 80018a4:	47b8      	blx	r7
 80018a6:	3001      	adds	r0, #1
 80018a8:	d1c3      	bne.n	8001832 <_printf_float+0x332>
 80018aa:	e684      	b.n	80015b6 <_printf_float+0xb6>
 80018ac:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 80018b0:	f1ba 0f01 	cmp.w	sl, #1
 80018b4:	dc01      	bgt.n	80018ba <_printf_float+0x3ba>
 80018b6:	07db      	lsls	r3, r3, #31
 80018b8:	d536      	bpl.n	8001928 <_printf_float+0x428>
 80018ba:	2301      	movs	r3, #1
 80018bc:	4642      	mov	r2, r8
 80018be:	4631      	mov	r1, r6
 80018c0:	4628      	mov	r0, r5
 80018c2:	47b8      	blx	r7
 80018c4:	3001      	adds	r0, #1
 80018c6:	f43f ae76 	beq.w	80015b6 <_printf_float+0xb6>
 80018ca:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80018ce:	4631      	mov	r1, r6
 80018d0:	4628      	mov	r0, r5
 80018d2:	47b8      	blx	r7
 80018d4:	3001      	adds	r0, #1
 80018d6:	f43f ae6e 	beq.w	80015b6 <_printf_float+0xb6>
 80018da:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80018de:	2200      	movs	r2, #0
 80018e0:	2300      	movs	r3, #0
 80018e2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80018e6:	f7ff f8f7 	bl	8000ad8 <__aeabi_dcmpeq>
 80018ea:	b9c0      	cbnz	r0, 800191e <_printf_float+0x41e>
 80018ec:	4653      	mov	r3, sl
 80018ee:	f108 0201 	add.w	r2, r8, #1
 80018f2:	4631      	mov	r1, r6
 80018f4:	4628      	mov	r0, r5
 80018f6:	47b8      	blx	r7
 80018f8:	3001      	adds	r0, #1
 80018fa:	d10c      	bne.n	8001916 <_printf_float+0x416>
 80018fc:	e65b      	b.n	80015b6 <_printf_float+0xb6>
 80018fe:	2301      	movs	r3, #1
 8001900:	465a      	mov	r2, fp
 8001902:	4631      	mov	r1, r6
 8001904:	4628      	mov	r0, r5
 8001906:	47b8      	blx	r7
 8001908:	3001      	adds	r0, #1
 800190a:	f43f ae54 	beq.w	80015b6 <_printf_float+0xb6>
 800190e:	f108 0801 	add.w	r8, r8, #1
 8001912:	45d0      	cmp	r8, sl
 8001914:	dbf3      	blt.n	80018fe <_printf_float+0x3fe>
 8001916:	464b      	mov	r3, r9
 8001918:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 800191c:	e6df      	b.n	80016de <_printf_float+0x1de>
 800191e:	f04f 0800 	mov.w	r8, #0
 8001922:	f104 0b1a 	add.w	fp, r4, #26
 8001926:	e7f4      	b.n	8001912 <_printf_float+0x412>
 8001928:	2301      	movs	r3, #1
 800192a:	4642      	mov	r2, r8
 800192c:	e7e1      	b.n	80018f2 <_printf_float+0x3f2>
 800192e:	2301      	movs	r3, #1
 8001930:	464a      	mov	r2, r9
 8001932:	4631      	mov	r1, r6
 8001934:	4628      	mov	r0, r5
 8001936:	47b8      	blx	r7
 8001938:	3001      	adds	r0, #1
 800193a:	f43f ae3c 	beq.w	80015b6 <_printf_float+0xb6>
 800193e:	f108 0801 	add.w	r8, r8, #1
 8001942:	68e3      	ldr	r3, [r4, #12]
 8001944:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8001946:	1a5b      	subs	r3, r3, r1
 8001948:	4543      	cmp	r3, r8
 800194a:	dcf0      	bgt.n	800192e <_printf_float+0x42e>
 800194c:	e6fc      	b.n	8001748 <_printf_float+0x248>
 800194e:	f04f 0800 	mov.w	r8, #0
 8001952:	f104 0919 	add.w	r9, r4, #25
 8001956:	e7f4      	b.n	8001942 <_printf_float+0x442>

08001958 <_printf_common>:
 8001958:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800195c:	4616      	mov	r6, r2
 800195e:	4698      	mov	r8, r3
 8001960:	688a      	ldr	r2, [r1, #8]
 8001962:	690b      	ldr	r3, [r1, #16]
 8001964:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001968:	4293      	cmp	r3, r2
 800196a:	bfb8      	it	lt
 800196c:	4613      	movlt	r3, r2
 800196e:	6033      	str	r3, [r6, #0]
 8001970:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001974:	4607      	mov	r7, r0
 8001976:	460c      	mov	r4, r1
 8001978:	b10a      	cbz	r2, 800197e <_printf_common+0x26>
 800197a:	3301      	adds	r3, #1
 800197c:	6033      	str	r3, [r6, #0]
 800197e:	6823      	ldr	r3, [r4, #0]
 8001980:	0699      	lsls	r1, r3, #26
 8001982:	bf42      	ittt	mi
 8001984:	6833      	ldrmi	r3, [r6, #0]
 8001986:	3302      	addmi	r3, #2
 8001988:	6033      	strmi	r3, [r6, #0]
 800198a:	6825      	ldr	r5, [r4, #0]
 800198c:	f015 0506 	ands.w	r5, r5, #6
 8001990:	d106      	bne.n	80019a0 <_printf_common+0x48>
 8001992:	f104 0a19 	add.w	sl, r4, #25
 8001996:	68e3      	ldr	r3, [r4, #12]
 8001998:	6832      	ldr	r2, [r6, #0]
 800199a:	1a9b      	subs	r3, r3, r2
 800199c:	42ab      	cmp	r3, r5
 800199e:	dc26      	bgt.n	80019ee <_printf_common+0x96>
 80019a0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80019a4:	6822      	ldr	r2, [r4, #0]
 80019a6:	3b00      	subs	r3, #0
 80019a8:	bf18      	it	ne
 80019aa:	2301      	movne	r3, #1
 80019ac:	0692      	lsls	r2, r2, #26
 80019ae:	d42b      	bmi.n	8001a08 <_printf_common+0xb0>
 80019b0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80019b4:	4641      	mov	r1, r8
 80019b6:	4638      	mov	r0, r7
 80019b8:	47c8      	blx	r9
 80019ba:	3001      	adds	r0, #1
 80019bc:	d01e      	beq.n	80019fc <_printf_common+0xa4>
 80019be:	6823      	ldr	r3, [r4, #0]
 80019c0:	6922      	ldr	r2, [r4, #16]
 80019c2:	f003 0306 	and.w	r3, r3, #6
 80019c6:	2b04      	cmp	r3, #4
 80019c8:	bf02      	ittt	eq
 80019ca:	68e5      	ldreq	r5, [r4, #12]
 80019cc:	6833      	ldreq	r3, [r6, #0]
 80019ce:	1aed      	subeq	r5, r5, r3
 80019d0:	68a3      	ldr	r3, [r4, #8]
 80019d2:	bf0c      	ite	eq
 80019d4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80019d8:	2500      	movne	r5, #0
 80019da:	4293      	cmp	r3, r2
 80019dc:	bfc4      	itt	gt
 80019de:	1a9b      	subgt	r3, r3, r2
 80019e0:	18ed      	addgt	r5, r5, r3
 80019e2:	2600      	movs	r6, #0
 80019e4:	341a      	adds	r4, #26
 80019e6:	42b5      	cmp	r5, r6
 80019e8:	d11a      	bne.n	8001a20 <_printf_common+0xc8>
 80019ea:	2000      	movs	r0, #0
 80019ec:	e008      	b.n	8001a00 <_printf_common+0xa8>
 80019ee:	2301      	movs	r3, #1
 80019f0:	4652      	mov	r2, sl
 80019f2:	4641      	mov	r1, r8
 80019f4:	4638      	mov	r0, r7
 80019f6:	47c8      	blx	r9
 80019f8:	3001      	adds	r0, #1
 80019fa:	d103      	bne.n	8001a04 <_printf_common+0xac>
 80019fc:	f04f 30ff 	mov.w	r0, #4294967295
 8001a00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001a04:	3501      	adds	r5, #1
 8001a06:	e7c6      	b.n	8001996 <_printf_common+0x3e>
 8001a08:	18e1      	adds	r1, r4, r3
 8001a0a:	1c5a      	adds	r2, r3, #1
 8001a0c:	2030      	movs	r0, #48	@ 0x30
 8001a0e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001a12:	4422      	add	r2, r4
 8001a14:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001a18:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001a1c:	3302      	adds	r3, #2
 8001a1e:	e7c7      	b.n	80019b0 <_printf_common+0x58>
 8001a20:	2301      	movs	r3, #1
 8001a22:	4622      	mov	r2, r4
 8001a24:	4641      	mov	r1, r8
 8001a26:	4638      	mov	r0, r7
 8001a28:	47c8      	blx	r9
 8001a2a:	3001      	adds	r0, #1
 8001a2c:	d0e6      	beq.n	80019fc <_printf_common+0xa4>
 8001a2e:	3601      	adds	r6, #1
 8001a30:	e7d9      	b.n	80019e6 <_printf_common+0x8e>
	...

08001a34 <_printf_i>:
 8001a34:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001a38:	7e0f      	ldrb	r7, [r1, #24]
 8001a3a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001a3c:	2f78      	cmp	r7, #120	@ 0x78
 8001a3e:	4691      	mov	r9, r2
 8001a40:	4680      	mov	r8, r0
 8001a42:	460c      	mov	r4, r1
 8001a44:	469a      	mov	sl, r3
 8001a46:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001a4a:	d807      	bhi.n	8001a5c <_printf_i+0x28>
 8001a4c:	2f62      	cmp	r7, #98	@ 0x62
 8001a4e:	d80a      	bhi.n	8001a66 <_printf_i+0x32>
 8001a50:	2f00      	cmp	r7, #0
 8001a52:	f000 80d2 	beq.w	8001bfa <_printf_i+0x1c6>
 8001a56:	2f58      	cmp	r7, #88	@ 0x58
 8001a58:	f000 80b9 	beq.w	8001bce <_printf_i+0x19a>
 8001a5c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001a60:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001a64:	e03a      	b.n	8001adc <_printf_i+0xa8>
 8001a66:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001a6a:	2b15      	cmp	r3, #21
 8001a6c:	d8f6      	bhi.n	8001a5c <_printf_i+0x28>
 8001a6e:	a101      	add	r1, pc, #4	@ (adr r1, 8001a74 <_printf_i+0x40>)
 8001a70:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001a74:	08001acd 	.word	0x08001acd
 8001a78:	08001ae1 	.word	0x08001ae1
 8001a7c:	08001a5d 	.word	0x08001a5d
 8001a80:	08001a5d 	.word	0x08001a5d
 8001a84:	08001a5d 	.word	0x08001a5d
 8001a88:	08001a5d 	.word	0x08001a5d
 8001a8c:	08001ae1 	.word	0x08001ae1
 8001a90:	08001a5d 	.word	0x08001a5d
 8001a94:	08001a5d 	.word	0x08001a5d
 8001a98:	08001a5d 	.word	0x08001a5d
 8001a9c:	08001a5d 	.word	0x08001a5d
 8001aa0:	08001be1 	.word	0x08001be1
 8001aa4:	08001b0b 	.word	0x08001b0b
 8001aa8:	08001b9b 	.word	0x08001b9b
 8001aac:	08001a5d 	.word	0x08001a5d
 8001ab0:	08001a5d 	.word	0x08001a5d
 8001ab4:	08001c03 	.word	0x08001c03
 8001ab8:	08001a5d 	.word	0x08001a5d
 8001abc:	08001b0b 	.word	0x08001b0b
 8001ac0:	08001a5d 	.word	0x08001a5d
 8001ac4:	08001a5d 	.word	0x08001a5d
 8001ac8:	08001ba3 	.word	0x08001ba3
 8001acc:	6833      	ldr	r3, [r6, #0]
 8001ace:	1d1a      	adds	r2, r3, #4
 8001ad0:	681b      	ldr	r3, [r3, #0]
 8001ad2:	6032      	str	r2, [r6, #0]
 8001ad4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001ad8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001adc:	2301      	movs	r3, #1
 8001ade:	e09d      	b.n	8001c1c <_printf_i+0x1e8>
 8001ae0:	6833      	ldr	r3, [r6, #0]
 8001ae2:	6820      	ldr	r0, [r4, #0]
 8001ae4:	1d19      	adds	r1, r3, #4
 8001ae6:	6031      	str	r1, [r6, #0]
 8001ae8:	0606      	lsls	r6, r0, #24
 8001aea:	d501      	bpl.n	8001af0 <_printf_i+0xbc>
 8001aec:	681d      	ldr	r5, [r3, #0]
 8001aee:	e003      	b.n	8001af8 <_printf_i+0xc4>
 8001af0:	0645      	lsls	r5, r0, #25
 8001af2:	d5fb      	bpl.n	8001aec <_printf_i+0xb8>
 8001af4:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001af8:	2d00      	cmp	r5, #0
 8001afa:	da03      	bge.n	8001b04 <_printf_i+0xd0>
 8001afc:	232d      	movs	r3, #45	@ 0x2d
 8001afe:	426d      	negs	r5, r5
 8001b00:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001b04:	4859      	ldr	r0, [pc, #356]	@ (8001c6c <_printf_i+0x238>)
 8001b06:	230a      	movs	r3, #10
 8001b08:	e011      	b.n	8001b2e <_printf_i+0xfa>
 8001b0a:	6821      	ldr	r1, [r4, #0]
 8001b0c:	6833      	ldr	r3, [r6, #0]
 8001b0e:	0608      	lsls	r0, r1, #24
 8001b10:	f853 5b04 	ldr.w	r5, [r3], #4
 8001b14:	d402      	bmi.n	8001b1c <_printf_i+0xe8>
 8001b16:	0649      	lsls	r1, r1, #25
 8001b18:	bf48      	it	mi
 8001b1a:	b2ad      	uxthmi	r5, r5
 8001b1c:	2f6f      	cmp	r7, #111	@ 0x6f
 8001b1e:	4853      	ldr	r0, [pc, #332]	@ (8001c6c <_printf_i+0x238>)
 8001b20:	6033      	str	r3, [r6, #0]
 8001b22:	bf14      	ite	ne
 8001b24:	230a      	movne	r3, #10
 8001b26:	2308      	moveq	r3, #8
 8001b28:	2100      	movs	r1, #0
 8001b2a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001b2e:	6866      	ldr	r6, [r4, #4]
 8001b30:	60a6      	str	r6, [r4, #8]
 8001b32:	2e00      	cmp	r6, #0
 8001b34:	bfa2      	ittt	ge
 8001b36:	6821      	ldrge	r1, [r4, #0]
 8001b38:	f021 0104 	bicge.w	r1, r1, #4
 8001b3c:	6021      	strge	r1, [r4, #0]
 8001b3e:	b90d      	cbnz	r5, 8001b44 <_printf_i+0x110>
 8001b40:	2e00      	cmp	r6, #0
 8001b42:	d04b      	beq.n	8001bdc <_printf_i+0x1a8>
 8001b44:	4616      	mov	r6, r2
 8001b46:	fbb5 f1f3 	udiv	r1, r5, r3
 8001b4a:	fb03 5711 	mls	r7, r3, r1, r5
 8001b4e:	5dc7      	ldrb	r7, [r0, r7]
 8001b50:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001b54:	462f      	mov	r7, r5
 8001b56:	42bb      	cmp	r3, r7
 8001b58:	460d      	mov	r5, r1
 8001b5a:	d9f4      	bls.n	8001b46 <_printf_i+0x112>
 8001b5c:	2b08      	cmp	r3, #8
 8001b5e:	d10b      	bne.n	8001b78 <_printf_i+0x144>
 8001b60:	6823      	ldr	r3, [r4, #0]
 8001b62:	07df      	lsls	r7, r3, #31
 8001b64:	d508      	bpl.n	8001b78 <_printf_i+0x144>
 8001b66:	6923      	ldr	r3, [r4, #16]
 8001b68:	6861      	ldr	r1, [r4, #4]
 8001b6a:	4299      	cmp	r1, r3
 8001b6c:	bfde      	ittt	le
 8001b6e:	2330      	movle	r3, #48	@ 0x30
 8001b70:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001b74:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001b78:	1b92      	subs	r2, r2, r6
 8001b7a:	6122      	str	r2, [r4, #16]
 8001b7c:	f8cd a000 	str.w	sl, [sp]
 8001b80:	464b      	mov	r3, r9
 8001b82:	aa03      	add	r2, sp, #12
 8001b84:	4621      	mov	r1, r4
 8001b86:	4640      	mov	r0, r8
 8001b88:	f7ff fee6 	bl	8001958 <_printf_common>
 8001b8c:	3001      	adds	r0, #1
 8001b8e:	d14a      	bne.n	8001c26 <_printf_i+0x1f2>
 8001b90:	f04f 30ff 	mov.w	r0, #4294967295
 8001b94:	b004      	add	sp, #16
 8001b96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001b9a:	6823      	ldr	r3, [r4, #0]
 8001b9c:	f043 0320 	orr.w	r3, r3, #32
 8001ba0:	6023      	str	r3, [r4, #0]
 8001ba2:	4833      	ldr	r0, [pc, #204]	@ (8001c70 <_printf_i+0x23c>)
 8001ba4:	2778      	movs	r7, #120	@ 0x78
 8001ba6:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001baa:	6823      	ldr	r3, [r4, #0]
 8001bac:	6831      	ldr	r1, [r6, #0]
 8001bae:	061f      	lsls	r7, r3, #24
 8001bb0:	f851 5b04 	ldr.w	r5, [r1], #4
 8001bb4:	d402      	bmi.n	8001bbc <_printf_i+0x188>
 8001bb6:	065f      	lsls	r7, r3, #25
 8001bb8:	bf48      	it	mi
 8001bba:	b2ad      	uxthmi	r5, r5
 8001bbc:	6031      	str	r1, [r6, #0]
 8001bbe:	07d9      	lsls	r1, r3, #31
 8001bc0:	bf44      	itt	mi
 8001bc2:	f043 0320 	orrmi.w	r3, r3, #32
 8001bc6:	6023      	strmi	r3, [r4, #0]
 8001bc8:	b11d      	cbz	r5, 8001bd2 <_printf_i+0x19e>
 8001bca:	2310      	movs	r3, #16
 8001bcc:	e7ac      	b.n	8001b28 <_printf_i+0xf4>
 8001bce:	4827      	ldr	r0, [pc, #156]	@ (8001c6c <_printf_i+0x238>)
 8001bd0:	e7e9      	b.n	8001ba6 <_printf_i+0x172>
 8001bd2:	6823      	ldr	r3, [r4, #0]
 8001bd4:	f023 0320 	bic.w	r3, r3, #32
 8001bd8:	6023      	str	r3, [r4, #0]
 8001bda:	e7f6      	b.n	8001bca <_printf_i+0x196>
 8001bdc:	4616      	mov	r6, r2
 8001bde:	e7bd      	b.n	8001b5c <_printf_i+0x128>
 8001be0:	6833      	ldr	r3, [r6, #0]
 8001be2:	6825      	ldr	r5, [r4, #0]
 8001be4:	6961      	ldr	r1, [r4, #20]
 8001be6:	1d18      	adds	r0, r3, #4
 8001be8:	6030      	str	r0, [r6, #0]
 8001bea:	062e      	lsls	r6, r5, #24
 8001bec:	681b      	ldr	r3, [r3, #0]
 8001bee:	d501      	bpl.n	8001bf4 <_printf_i+0x1c0>
 8001bf0:	6019      	str	r1, [r3, #0]
 8001bf2:	e002      	b.n	8001bfa <_printf_i+0x1c6>
 8001bf4:	0668      	lsls	r0, r5, #25
 8001bf6:	d5fb      	bpl.n	8001bf0 <_printf_i+0x1bc>
 8001bf8:	8019      	strh	r1, [r3, #0]
 8001bfa:	2300      	movs	r3, #0
 8001bfc:	6123      	str	r3, [r4, #16]
 8001bfe:	4616      	mov	r6, r2
 8001c00:	e7bc      	b.n	8001b7c <_printf_i+0x148>
 8001c02:	6833      	ldr	r3, [r6, #0]
 8001c04:	1d1a      	adds	r2, r3, #4
 8001c06:	6032      	str	r2, [r6, #0]
 8001c08:	681e      	ldr	r6, [r3, #0]
 8001c0a:	6862      	ldr	r2, [r4, #4]
 8001c0c:	2100      	movs	r1, #0
 8001c0e:	4630      	mov	r0, r6
 8001c10:	f7fe fae6 	bl	80001e0 <memchr>
 8001c14:	b108      	cbz	r0, 8001c1a <_printf_i+0x1e6>
 8001c16:	1b80      	subs	r0, r0, r6
 8001c18:	6060      	str	r0, [r4, #4]
 8001c1a:	6863      	ldr	r3, [r4, #4]
 8001c1c:	6123      	str	r3, [r4, #16]
 8001c1e:	2300      	movs	r3, #0
 8001c20:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001c24:	e7aa      	b.n	8001b7c <_printf_i+0x148>
 8001c26:	6923      	ldr	r3, [r4, #16]
 8001c28:	4632      	mov	r2, r6
 8001c2a:	4649      	mov	r1, r9
 8001c2c:	4640      	mov	r0, r8
 8001c2e:	47d0      	blx	sl
 8001c30:	3001      	adds	r0, #1
 8001c32:	d0ad      	beq.n	8001b90 <_printf_i+0x15c>
 8001c34:	6823      	ldr	r3, [r4, #0]
 8001c36:	079b      	lsls	r3, r3, #30
 8001c38:	d413      	bmi.n	8001c62 <_printf_i+0x22e>
 8001c3a:	68e0      	ldr	r0, [r4, #12]
 8001c3c:	9b03      	ldr	r3, [sp, #12]
 8001c3e:	4298      	cmp	r0, r3
 8001c40:	bfb8      	it	lt
 8001c42:	4618      	movlt	r0, r3
 8001c44:	e7a6      	b.n	8001b94 <_printf_i+0x160>
 8001c46:	2301      	movs	r3, #1
 8001c48:	4632      	mov	r2, r6
 8001c4a:	4649      	mov	r1, r9
 8001c4c:	4640      	mov	r0, r8
 8001c4e:	47d0      	blx	sl
 8001c50:	3001      	adds	r0, #1
 8001c52:	d09d      	beq.n	8001b90 <_printf_i+0x15c>
 8001c54:	3501      	adds	r5, #1
 8001c56:	68e3      	ldr	r3, [r4, #12]
 8001c58:	9903      	ldr	r1, [sp, #12]
 8001c5a:	1a5b      	subs	r3, r3, r1
 8001c5c:	42ab      	cmp	r3, r5
 8001c5e:	dcf2      	bgt.n	8001c46 <_printf_i+0x212>
 8001c60:	e7eb      	b.n	8001c3a <_printf_i+0x206>
 8001c62:	2500      	movs	r5, #0
 8001c64:	f104 0619 	add.w	r6, r4, #25
 8001c68:	e7f5      	b.n	8001c56 <_printf_i+0x222>
 8001c6a:	bf00      	nop
 8001c6c:	08003d43 	.word	0x08003d43
 8001c70:	08003d54 	.word	0x08003d54

08001c74 <std>:
 8001c74:	2300      	movs	r3, #0
 8001c76:	b510      	push	{r4, lr}
 8001c78:	4604      	mov	r4, r0
 8001c7a:	e9c0 3300 	strd	r3, r3, [r0]
 8001c7e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001c82:	6083      	str	r3, [r0, #8]
 8001c84:	8181      	strh	r1, [r0, #12]
 8001c86:	6643      	str	r3, [r0, #100]	@ 0x64
 8001c88:	81c2      	strh	r2, [r0, #14]
 8001c8a:	6183      	str	r3, [r0, #24]
 8001c8c:	4619      	mov	r1, r3
 8001c8e:	2208      	movs	r2, #8
 8001c90:	305c      	adds	r0, #92	@ 0x5c
 8001c92:	f000 f8f4 	bl	8001e7e <memset>
 8001c96:	4b0d      	ldr	r3, [pc, #52]	@ (8001ccc <std+0x58>)
 8001c98:	6263      	str	r3, [r4, #36]	@ 0x24
 8001c9a:	4b0d      	ldr	r3, [pc, #52]	@ (8001cd0 <std+0x5c>)
 8001c9c:	62a3      	str	r3, [r4, #40]	@ 0x28
 8001c9e:	4b0d      	ldr	r3, [pc, #52]	@ (8001cd4 <std+0x60>)
 8001ca0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001ca2:	4b0d      	ldr	r3, [pc, #52]	@ (8001cd8 <std+0x64>)
 8001ca4:	6323      	str	r3, [r4, #48]	@ 0x30
 8001ca6:	4b0d      	ldr	r3, [pc, #52]	@ (8001cdc <std+0x68>)
 8001ca8:	6224      	str	r4, [r4, #32]
 8001caa:	429c      	cmp	r4, r3
 8001cac:	d006      	beq.n	8001cbc <std+0x48>
 8001cae:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8001cb2:	4294      	cmp	r4, r2
 8001cb4:	d002      	beq.n	8001cbc <std+0x48>
 8001cb6:	33d0      	adds	r3, #208	@ 0xd0
 8001cb8:	429c      	cmp	r4, r3
 8001cba:	d105      	bne.n	8001cc8 <std+0x54>
 8001cbc:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001cc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001cc4:	f000 b958 	b.w	8001f78 <__retarget_lock_init_recursive>
 8001cc8:	bd10      	pop	{r4, pc}
 8001cca:	bf00      	nop
 8001ccc:	08001df9 	.word	0x08001df9
 8001cd0:	08001e1b 	.word	0x08001e1b
 8001cd4:	08001e53 	.word	0x08001e53
 8001cd8:	08001e77 	.word	0x08001e77
 8001cdc:	20000200 	.word	0x20000200

08001ce0 <stdio_exit_handler>:
 8001ce0:	4a02      	ldr	r2, [pc, #8]	@ (8001cec <stdio_exit_handler+0xc>)
 8001ce2:	4903      	ldr	r1, [pc, #12]	@ (8001cf0 <stdio_exit_handler+0x10>)
 8001ce4:	4803      	ldr	r0, [pc, #12]	@ (8001cf4 <stdio_exit_handler+0x14>)
 8001ce6:	f000 b869 	b.w	8001dbc <_fwalk_sglue>
 8001cea:	bf00      	nop
 8001cec:	20000018 	.word	0x20000018
 8001cf0:	08003621 	.word	0x08003621
 8001cf4:	20000028 	.word	0x20000028

08001cf8 <cleanup_stdio>:
 8001cf8:	6841      	ldr	r1, [r0, #4]
 8001cfa:	4b0c      	ldr	r3, [pc, #48]	@ (8001d2c <cleanup_stdio+0x34>)
 8001cfc:	4299      	cmp	r1, r3
 8001cfe:	b510      	push	{r4, lr}
 8001d00:	4604      	mov	r4, r0
 8001d02:	d001      	beq.n	8001d08 <cleanup_stdio+0x10>
 8001d04:	f001 fc8c 	bl	8003620 <_fflush_r>
 8001d08:	68a1      	ldr	r1, [r4, #8]
 8001d0a:	4b09      	ldr	r3, [pc, #36]	@ (8001d30 <cleanup_stdio+0x38>)
 8001d0c:	4299      	cmp	r1, r3
 8001d0e:	d002      	beq.n	8001d16 <cleanup_stdio+0x1e>
 8001d10:	4620      	mov	r0, r4
 8001d12:	f001 fc85 	bl	8003620 <_fflush_r>
 8001d16:	68e1      	ldr	r1, [r4, #12]
 8001d18:	4b06      	ldr	r3, [pc, #24]	@ (8001d34 <cleanup_stdio+0x3c>)
 8001d1a:	4299      	cmp	r1, r3
 8001d1c:	d004      	beq.n	8001d28 <cleanup_stdio+0x30>
 8001d1e:	4620      	mov	r0, r4
 8001d20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d24:	f001 bc7c 	b.w	8003620 <_fflush_r>
 8001d28:	bd10      	pop	{r4, pc}
 8001d2a:	bf00      	nop
 8001d2c:	20000200 	.word	0x20000200
 8001d30:	20000268 	.word	0x20000268
 8001d34:	200002d0 	.word	0x200002d0

08001d38 <global_stdio_init.part.0>:
 8001d38:	b510      	push	{r4, lr}
 8001d3a:	4b0b      	ldr	r3, [pc, #44]	@ (8001d68 <global_stdio_init.part.0+0x30>)
 8001d3c:	4c0b      	ldr	r4, [pc, #44]	@ (8001d6c <global_stdio_init.part.0+0x34>)
 8001d3e:	4a0c      	ldr	r2, [pc, #48]	@ (8001d70 <global_stdio_init.part.0+0x38>)
 8001d40:	601a      	str	r2, [r3, #0]
 8001d42:	4620      	mov	r0, r4
 8001d44:	2200      	movs	r2, #0
 8001d46:	2104      	movs	r1, #4
 8001d48:	f7ff ff94 	bl	8001c74 <std>
 8001d4c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8001d50:	2201      	movs	r2, #1
 8001d52:	2109      	movs	r1, #9
 8001d54:	f7ff ff8e 	bl	8001c74 <std>
 8001d58:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8001d5c:	2202      	movs	r2, #2
 8001d5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d62:	2112      	movs	r1, #18
 8001d64:	f7ff bf86 	b.w	8001c74 <std>
 8001d68:	20000338 	.word	0x20000338
 8001d6c:	20000200 	.word	0x20000200
 8001d70:	08001ce1 	.word	0x08001ce1

08001d74 <__sfp_lock_acquire>:
 8001d74:	4801      	ldr	r0, [pc, #4]	@ (8001d7c <__sfp_lock_acquire+0x8>)
 8001d76:	f000 b900 	b.w	8001f7a <__retarget_lock_acquire_recursive>
 8001d7a:	bf00      	nop
 8001d7c:	20000341 	.word	0x20000341

08001d80 <__sfp_lock_release>:
 8001d80:	4801      	ldr	r0, [pc, #4]	@ (8001d88 <__sfp_lock_release+0x8>)
 8001d82:	f000 b8fb 	b.w	8001f7c <__retarget_lock_release_recursive>
 8001d86:	bf00      	nop
 8001d88:	20000341 	.word	0x20000341

08001d8c <__sinit>:
 8001d8c:	b510      	push	{r4, lr}
 8001d8e:	4604      	mov	r4, r0
 8001d90:	f7ff fff0 	bl	8001d74 <__sfp_lock_acquire>
 8001d94:	6a23      	ldr	r3, [r4, #32]
 8001d96:	b11b      	cbz	r3, 8001da0 <__sinit+0x14>
 8001d98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d9c:	f7ff bff0 	b.w	8001d80 <__sfp_lock_release>
 8001da0:	4b04      	ldr	r3, [pc, #16]	@ (8001db4 <__sinit+0x28>)
 8001da2:	6223      	str	r3, [r4, #32]
 8001da4:	4b04      	ldr	r3, [pc, #16]	@ (8001db8 <__sinit+0x2c>)
 8001da6:	681b      	ldr	r3, [r3, #0]
 8001da8:	2b00      	cmp	r3, #0
 8001daa:	d1f5      	bne.n	8001d98 <__sinit+0xc>
 8001dac:	f7ff ffc4 	bl	8001d38 <global_stdio_init.part.0>
 8001db0:	e7f2      	b.n	8001d98 <__sinit+0xc>
 8001db2:	bf00      	nop
 8001db4:	08001cf9 	.word	0x08001cf9
 8001db8:	20000338 	.word	0x20000338

08001dbc <_fwalk_sglue>:
 8001dbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001dc0:	4607      	mov	r7, r0
 8001dc2:	4688      	mov	r8, r1
 8001dc4:	4614      	mov	r4, r2
 8001dc6:	2600      	movs	r6, #0
 8001dc8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001dcc:	f1b9 0901 	subs.w	r9, r9, #1
 8001dd0:	d505      	bpl.n	8001dde <_fwalk_sglue+0x22>
 8001dd2:	6824      	ldr	r4, [r4, #0]
 8001dd4:	2c00      	cmp	r4, #0
 8001dd6:	d1f7      	bne.n	8001dc8 <_fwalk_sglue+0xc>
 8001dd8:	4630      	mov	r0, r6
 8001dda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001dde:	89ab      	ldrh	r3, [r5, #12]
 8001de0:	2b01      	cmp	r3, #1
 8001de2:	d907      	bls.n	8001df4 <_fwalk_sglue+0x38>
 8001de4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001de8:	3301      	adds	r3, #1
 8001dea:	d003      	beq.n	8001df4 <_fwalk_sglue+0x38>
 8001dec:	4629      	mov	r1, r5
 8001dee:	4638      	mov	r0, r7
 8001df0:	47c0      	blx	r8
 8001df2:	4306      	orrs	r6, r0
 8001df4:	3568      	adds	r5, #104	@ 0x68
 8001df6:	e7e9      	b.n	8001dcc <_fwalk_sglue+0x10>

08001df8 <__sread>:
 8001df8:	b510      	push	{r4, lr}
 8001dfa:	460c      	mov	r4, r1
 8001dfc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001e00:	f000 f86c 	bl	8001edc <_read_r>
 8001e04:	2800      	cmp	r0, #0
 8001e06:	bfab      	itete	ge
 8001e08:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8001e0a:	89a3      	ldrhlt	r3, [r4, #12]
 8001e0c:	181b      	addge	r3, r3, r0
 8001e0e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8001e12:	bfac      	ite	ge
 8001e14:	6563      	strge	r3, [r4, #84]	@ 0x54
 8001e16:	81a3      	strhlt	r3, [r4, #12]
 8001e18:	bd10      	pop	{r4, pc}

08001e1a <__swrite>:
 8001e1a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e1e:	461f      	mov	r7, r3
 8001e20:	898b      	ldrh	r3, [r1, #12]
 8001e22:	05db      	lsls	r3, r3, #23
 8001e24:	4605      	mov	r5, r0
 8001e26:	460c      	mov	r4, r1
 8001e28:	4616      	mov	r6, r2
 8001e2a:	d505      	bpl.n	8001e38 <__swrite+0x1e>
 8001e2c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001e30:	2302      	movs	r3, #2
 8001e32:	2200      	movs	r2, #0
 8001e34:	f000 f840 	bl	8001eb8 <_lseek_r>
 8001e38:	89a3      	ldrh	r3, [r4, #12]
 8001e3a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001e3e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8001e42:	81a3      	strh	r3, [r4, #12]
 8001e44:	4632      	mov	r2, r6
 8001e46:	463b      	mov	r3, r7
 8001e48:	4628      	mov	r0, r5
 8001e4a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001e4e:	f000 b857 	b.w	8001f00 <_write_r>

08001e52 <__sseek>:
 8001e52:	b510      	push	{r4, lr}
 8001e54:	460c      	mov	r4, r1
 8001e56:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001e5a:	f000 f82d 	bl	8001eb8 <_lseek_r>
 8001e5e:	1c43      	adds	r3, r0, #1
 8001e60:	89a3      	ldrh	r3, [r4, #12]
 8001e62:	bf15      	itete	ne
 8001e64:	6560      	strne	r0, [r4, #84]	@ 0x54
 8001e66:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8001e6a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8001e6e:	81a3      	strheq	r3, [r4, #12]
 8001e70:	bf18      	it	ne
 8001e72:	81a3      	strhne	r3, [r4, #12]
 8001e74:	bd10      	pop	{r4, pc}

08001e76 <__sclose>:
 8001e76:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001e7a:	f000 b80d 	b.w	8001e98 <_close_r>

08001e7e <memset>:
 8001e7e:	4402      	add	r2, r0
 8001e80:	4603      	mov	r3, r0
 8001e82:	4293      	cmp	r3, r2
 8001e84:	d100      	bne.n	8001e88 <memset+0xa>
 8001e86:	4770      	bx	lr
 8001e88:	f803 1b01 	strb.w	r1, [r3], #1
 8001e8c:	e7f9      	b.n	8001e82 <memset+0x4>
	...

08001e90 <_localeconv_r>:
 8001e90:	4800      	ldr	r0, [pc, #0]	@ (8001e94 <_localeconv_r+0x4>)
 8001e92:	4770      	bx	lr
 8001e94:	20000164 	.word	0x20000164

08001e98 <_close_r>:
 8001e98:	b538      	push	{r3, r4, r5, lr}
 8001e9a:	4d06      	ldr	r5, [pc, #24]	@ (8001eb4 <_close_r+0x1c>)
 8001e9c:	2300      	movs	r3, #0
 8001e9e:	4604      	mov	r4, r0
 8001ea0:	4608      	mov	r0, r1
 8001ea2:	602b      	str	r3, [r5, #0]
 8001ea4:	f7ff f951 	bl	800114a <_close>
 8001ea8:	1c43      	adds	r3, r0, #1
 8001eaa:	d102      	bne.n	8001eb2 <_close_r+0x1a>
 8001eac:	682b      	ldr	r3, [r5, #0]
 8001eae:	b103      	cbz	r3, 8001eb2 <_close_r+0x1a>
 8001eb0:	6023      	str	r3, [r4, #0]
 8001eb2:	bd38      	pop	{r3, r4, r5, pc}
 8001eb4:	2000033c 	.word	0x2000033c

08001eb8 <_lseek_r>:
 8001eb8:	b538      	push	{r3, r4, r5, lr}
 8001eba:	4d07      	ldr	r5, [pc, #28]	@ (8001ed8 <_lseek_r+0x20>)
 8001ebc:	4604      	mov	r4, r0
 8001ebe:	4608      	mov	r0, r1
 8001ec0:	4611      	mov	r1, r2
 8001ec2:	2200      	movs	r2, #0
 8001ec4:	602a      	str	r2, [r5, #0]
 8001ec6:	461a      	mov	r2, r3
 8001ec8:	f7ff f963 	bl	8001192 <_lseek>
 8001ecc:	1c43      	adds	r3, r0, #1
 8001ece:	d102      	bne.n	8001ed6 <_lseek_r+0x1e>
 8001ed0:	682b      	ldr	r3, [r5, #0]
 8001ed2:	b103      	cbz	r3, 8001ed6 <_lseek_r+0x1e>
 8001ed4:	6023      	str	r3, [r4, #0]
 8001ed6:	bd38      	pop	{r3, r4, r5, pc}
 8001ed8:	2000033c 	.word	0x2000033c

08001edc <_read_r>:
 8001edc:	b538      	push	{r3, r4, r5, lr}
 8001ede:	4d07      	ldr	r5, [pc, #28]	@ (8001efc <_read_r+0x20>)
 8001ee0:	4604      	mov	r4, r0
 8001ee2:	4608      	mov	r0, r1
 8001ee4:	4611      	mov	r1, r2
 8001ee6:	2200      	movs	r2, #0
 8001ee8:	602a      	str	r2, [r5, #0]
 8001eea:	461a      	mov	r2, r3
 8001eec:	f7ff f8f4 	bl	80010d8 <_read>
 8001ef0:	1c43      	adds	r3, r0, #1
 8001ef2:	d102      	bne.n	8001efa <_read_r+0x1e>
 8001ef4:	682b      	ldr	r3, [r5, #0]
 8001ef6:	b103      	cbz	r3, 8001efa <_read_r+0x1e>
 8001ef8:	6023      	str	r3, [r4, #0]
 8001efa:	bd38      	pop	{r3, r4, r5, pc}
 8001efc:	2000033c 	.word	0x2000033c

08001f00 <_write_r>:
 8001f00:	b538      	push	{r3, r4, r5, lr}
 8001f02:	4d07      	ldr	r5, [pc, #28]	@ (8001f20 <_write_r+0x20>)
 8001f04:	4604      	mov	r4, r0
 8001f06:	4608      	mov	r0, r1
 8001f08:	4611      	mov	r1, r2
 8001f0a:	2200      	movs	r2, #0
 8001f0c:	602a      	str	r2, [r5, #0]
 8001f0e:	461a      	mov	r2, r3
 8001f10:	f7ff f8ff 	bl	8001112 <_write>
 8001f14:	1c43      	adds	r3, r0, #1
 8001f16:	d102      	bne.n	8001f1e <_write_r+0x1e>
 8001f18:	682b      	ldr	r3, [r5, #0]
 8001f1a:	b103      	cbz	r3, 8001f1e <_write_r+0x1e>
 8001f1c:	6023      	str	r3, [r4, #0]
 8001f1e:	bd38      	pop	{r3, r4, r5, pc}
 8001f20:	2000033c 	.word	0x2000033c

08001f24 <__errno>:
 8001f24:	4b01      	ldr	r3, [pc, #4]	@ (8001f2c <__errno+0x8>)
 8001f26:	6818      	ldr	r0, [r3, #0]
 8001f28:	4770      	bx	lr
 8001f2a:	bf00      	nop
 8001f2c:	20000024 	.word	0x20000024

08001f30 <__libc_init_array>:
 8001f30:	b570      	push	{r4, r5, r6, lr}
 8001f32:	4d0d      	ldr	r5, [pc, #52]	@ (8001f68 <__libc_init_array+0x38>)
 8001f34:	4c0d      	ldr	r4, [pc, #52]	@ (8001f6c <__libc_init_array+0x3c>)
 8001f36:	1b64      	subs	r4, r4, r5
 8001f38:	10a4      	asrs	r4, r4, #2
 8001f3a:	2600      	movs	r6, #0
 8001f3c:	42a6      	cmp	r6, r4
 8001f3e:	d109      	bne.n	8001f54 <__libc_init_array+0x24>
 8001f40:	4d0b      	ldr	r5, [pc, #44]	@ (8001f70 <__libc_init_array+0x40>)
 8001f42:	4c0c      	ldr	r4, [pc, #48]	@ (8001f74 <__libc_init_array+0x44>)
 8001f44:	f001 feb8 	bl	8003cb8 <_init>
 8001f48:	1b64      	subs	r4, r4, r5
 8001f4a:	10a4      	asrs	r4, r4, #2
 8001f4c:	2600      	movs	r6, #0
 8001f4e:	42a6      	cmp	r6, r4
 8001f50:	d105      	bne.n	8001f5e <__libc_init_array+0x2e>
 8001f52:	bd70      	pop	{r4, r5, r6, pc}
 8001f54:	f855 3b04 	ldr.w	r3, [r5], #4
 8001f58:	4798      	blx	r3
 8001f5a:	3601      	adds	r6, #1
 8001f5c:	e7ee      	b.n	8001f3c <__libc_init_array+0xc>
 8001f5e:	f855 3b04 	ldr.w	r3, [r5], #4
 8001f62:	4798      	blx	r3
 8001f64:	3601      	adds	r6, #1
 8001f66:	e7f2      	b.n	8001f4e <__libc_init_array+0x1e>
 8001f68:	080040a8 	.word	0x080040a8
 8001f6c:	080040a8 	.word	0x080040a8
 8001f70:	080040a8 	.word	0x080040a8
 8001f74:	080040ac 	.word	0x080040ac

08001f78 <__retarget_lock_init_recursive>:
 8001f78:	4770      	bx	lr

08001f7a <__retarget_lock_acquire_recursive>:
 8001f7a:	4770      	bx	lr

08001f7c <__retarget_lock_release_recursive>:
 8001f7c:	4770      	bx	lr

08001f7e <quorem>:
 8001f7e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001f82:	6903      	ldr	r3, [r0, #16]
 8001f84:	690c      	ldr	r4, [r1, #16]
 8001f86:	42a3      	cmp	r3, r4
 8001f88:	4607      	mov	r7, r0
 8001f8a:	db7e      	blt.n	800208a <quorem+0x10c>
 8001f8c:	3c01      	subs	r4, #1
 8001f8e:	f101 0814 	add.w	r8, r1, #20
 8001f92:	00a3      	lsls	r3, r4, #2
 8001f94:	f100 0514 	add.w	r5, r0, #20
 8001f98:	9300      	str	r3, [sp, #0]
 8001f9a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8001f9e:	9301      	str	r3, [sp, #4]
 8001fa0:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8001fa4:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8001fa8:	3301      	adds	r3, #1
 8001faa:	429a      	cmp	r2, r3
 8001fac:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8001fb0:	fbb2 f6f3 	udiv	r6, r2, r3
 8001fb4:	d32e      	bcc.n	8002014 <quorem+0x96>
 8001fb6:	f04f 0a00 	mov.w	sl, #0
 8001fba:	46c4      	mov	ip, r8
 8001fbc:	46ae      	mov	lr, r5
 8001fbe:	46d3      	mov	fp, sl
 8001fc0:	f85c 3b04 	ldr.w	r3, [ip], #4
 8001fc4:	b298      	uxth	r0, r3
 8001fc6:	fb06 a000 	mla	r0, r6, r0, sl
 8001fca:	0c02      	lsrs	r2, r0, #16
 8001fcc:	0c1b      	lsrs	r3, r3, #16
 8001fce:	fb06 2303 	mla	r3, r6, r3, r2
 8001fd2:	f8de 2000 	ldr.w	r2, [lr]
 8001fd6:	b280      	uxth	r0, r0
 8001fd8:	b292      	uxth	r2, r2
 8001fda:	1a12      	subs	r2, r2, r0
 8001fdc:	445a      	add	r2, fp
 8001fde:	f8de 0000 	ldr.w	r0, [lr]
 8001fe2:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8001fe6:	b29b      	uxth	r3, r3
 8001fe8:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8001fec:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8001ff0:	b292      	uxth	r2, r2
 8001ff2:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8001ff6:	45e1      	cmp	r9, ip
 8001ff8:	f84e 2b04 	str.w	r2, [lr], #4
 8001ffc:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8002000:	d2de      	bcs.n	8001fc0 <quorem+0x42>
 8002002:	9b00      	ldr	r3, [sp, #0]
 8002004:	58eb      	ldr	r3, [r5, r3]
 8002006:	b92b      	cbnz	r3, 8002014 <quorem+0x96>
 8002008:	9b01      	ldr	r3, [sp, #4]
 800200a:	3b04      	subs	r3, #4
 800200c:	429d      	cmp	r5, r3
 800200e:	461a      	mov	r2, r3
 8002010:	d32f      	bcc.n	8002072 <quorem+0xf4>
 8002012:	613c      	str	r4, [r7, #16]
 8002014:	4638      	mov	r0, r7
 8002016:	f001 f97d 	bl	8003314 <__mcmp>
 800201a:	2800      	cmp	r0, #0
 800201c:	db25      	blt.n	800206a <quorem+0xec>
 800201e:	4629      	mov	r1, r5
 8002020:	2000      	movs	r0, #0
 8002022:	f858 2b04 	ldr.w	r2, [r8], #4
 8002026:	f8d1 c000 	ldr.w	ip, [r1]
 800202a:	fa1f fe82 	uxth.w	lr, r2
 800202e:	fa1f f38c 	uxth.w	r3, ip
 8002032:	eba3 030e 	sub.w	r3, r3, lr
 8002036:	4403      	add	r3, r0
 8002038:	0c12      	lsrs	r2, r2, #16
 800203a:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800203e:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002042:	b29b      	uxth	r3, r3
 8002044:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002048:	45c1      	cmp	r9, r8
 800204a:	f841 3b04 	str.w	r3, [r1], #4
 800204e:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002052:	d2e6      	bcs.n	8002022 <quorem+0xa4>
 8002054:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002058:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800205c:	b922      	cbnz	r2, 8002068 <quorem+0xea>
 800205e:	3b04      	subs	r3, #4
 8002060:	429d      	cmp	r5, r3
 8002062:	461a      	mov	r2, r3
 8002064:	d30b      	bcc.n	800207e <quorem+0x100>
 8002066:	613c      	str	r4, [r7, #16]
 8002068:	3601      	adds	r6, #1
 800206a:	4630      	mov	r0, r6
 800206c:	b003      	add	sp, #12
 800206e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002072:	6812      	ldr	r2, [r2, #0]
 8002074:	3b04      	subs	r3, #4
 8002076:	2a00      	cmp	r2, #0
 8002078:	d1cb      	bne.n	8002012 <quorem+0x94>
 800207a:	3c01      	subs	r4, #1
 800207c:	e7c6      	b.n	800200c <quorem+0x8e>
 800207e:	6812      	ldr	r2, [r2, #0]
 8002080:	3b04      	subs	r3, #4
 8002082:	2a00      	cmp	r2, #0
 8002084:	d1ef      	bne.n	8002066 <quorem+0xe8>
 8002086:	3c01      	subs	r4, #1
 8002088:	e7ea      	b.n	8002060 <quorem+0xe2>
 800208a:	2000      	movs	r0, #0
 800208c:	e7ee      	b.n	800206c <quorem+0xee>
	...

08002090 <_dtoa_r>:
 8002090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002094:	69c7      	ldr	r7, [r0, #28]
 8002096:	b097      	sub	sp, #92	@ 0x5c
 8002098:	4614      	mov	r4, r2
 800209a:	461d      	mov	r5, r3
 800209c:	e9cd 4502 	strd	r4, r5, [sp, #8]
 80020a0:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 80020a2:	4683      	mov	fp, r0
 80020a4:	b97f      	cbnz	r7, 80020c6 <_dtoa_r+0x36>
 80020a6:	2010      	movs	r0, #16
 80020a8:	f000 fe04 	bl	8002cb4 <malloc>
 80020ac:	4602      	mov	r2, r0
 80020ae:	f8cb 001c 	str.w	r0, [fp, #28]
 80020b2:	b920      	cbnz	r0, 80020be <_dtoa_r+0x2e>
 80020b4:	4ba8      	ldr	r3, [pc, #672]	@ (8002358 <_dtoa_r+0x2c8>)
 80020b6:	21ef      	movs	r1, #239	@ 0xef
 80020b8:	48a8      	ldr	r0, [pc, #672]	@ (800235c <_dtoa_r+0x2cc>)
 80020ba:	f001 faf7 	bl	80036ac <__assert_func>
 80020be:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80020c2:	6007      	str	r7, [r0, #0]
 80020c4:	60c7      	str	r7, [r0, #12]
 80020c6:	f8db 301c 	ldr.w	r3, [fp, #28]
 80020ca:	6819      	ldr	r1, [r3, #0]
 80020cc:	b159      	cbz	r1, 80020e6 <_dtoa_r+0x56>
 80020ce:	685a      	ldr	r2, [r3, #4]
 80020d0:	604a      	str	r2, [r1, #4]
 80020d2:	2301      	movs	r3, #1
 80020d4:	4093      	lsls	r3, r2
 80020d6:	608b      	str	r3, [r1, #8]
 80020d8:	4658      	mov	r0, fp
 80020da:	f000 fee1 	bl	8002ea0 <_Bfree>
 80020de:	f8db 301c 	ldr.w	r3, [fp, #28]
 80020e2:	2200      	movs	r2, #0
 80020e4:	601a      	str	r2, [r3, #0]
 80020e6:	1e2b      	subs	r3, r5, #0
 80020e8:	bfb9      	ittee	lt
 80020ea:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80020ee:	9303      	strlt	r3, [sp, #12]
 80020f0:	2300      	movge	r3, #0
 80020f2:	6033      	strge	r3, [r6, #0]
 80020f4:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80020f8:	4b99      	ldr	r3, [pc, #612]	@ (8002360 <_dtoa_r+0x2d0>)
 80020fa:	bfbc      	itt	lt
 80020fc:	2201      	movlt	r2, #1
 80020fe:	6032      	strlt	r2, [r6, #0]
 8002100:	ea33 0308 	bics.w	r3, r3, r8
 8002104:	d112      	bne.n	800212c <_dtoa_r+0x9c>
 8002106:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8002108:	f242 730f 	movw	r3, #9999	@ 0x270f
 800210c:	6013      	str	r3, [r2, #0]
 800210e:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8002112:	4323      	orrs	r3, r4
 8002114:	f000 8551 	beq.w	8002bba <_dtoa_r+0xb2a>
 8002118:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800211a:	f8df a248 	ldr.w	sl, [pc, #584]	@ 8002364 <_dtoa_r+0x2d4>
 800211e:	2b00      	cmp	r3, #0
 8002120:	f000 8553 	beq.w	8002bca <_dtoa_r+0xb3a>
 8002124:	f10a 0303 	add.w	r3, sl, #3
 8002128:	f000 bd4d 	b.w	8002bc6 <_dtoa_r+0xb36>
 800212c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002130:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8002134:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002138:	2200      	movs	r2, #0
 800213a:	2300      	movs	r3, #0
 800213c:	f7fe fccc 	bl	8000ad8 <__aeabi_dcmpeq>
 8002140:	4607      	mov	r7, r0
 8002142:	b158      	cbz	r0, 800215c <_dtoa_r+0xcc>
 8002144:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8002146:	2301      	movs	r3, #1
 8002148:	6013      	str	r3, [r2, #0]
 800214a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800214c:	b113      	cbz	r3, 8002154 <_dtoa_r+0xc4>
 800214e:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8002150:	4b85      	ldr	r3, [pc, #532]	@ (8002368 <_dtoa_r+0x2d8>)
 8002152:	6013      	str	r3, [r2, #0]
 8002154:	f8df a214 	ldr.w	sl, [pc, #532]	@ 800236c <_dtoa_r+0x2dc>
 8002158:	f000 bd37 	b.w	8002bca <_dtoa_r+0xb3a>
 800215c:	ab14      	add	r3, sp, #80	@ 0x50
 800215e:	9301      	str	r3, [sp, #4]
 8002160:	ab15      	add	r3, sp, #84	@ 0x54
 8002162:	9300      	str	r3, [sp, #0]
 8002164:	4658      	mov	r0, fp
 8002166:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800216a:	f001 f981 	bl	8003470 <__d2b>
 800216e:	f3c8 560a 	ubfx	r6, r8, #20, #11
 8002172:	4681      	mov	r9, r0
 8002174:	2e00      	cmp	r6, #0
 8002176:	d076      	beq.n	8002266 <_dtoa_r+0x1d6>
 8002178:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800217a:	9712      	str	r7, [sp, #72]	@ 0x48
 800217c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002180:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002184:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002188:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 800218c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002190:	4619      	mov	r1, r3
 8002192:	2200      	movs	r2, #0
 8002194:	4b76      	ldr	r3, [pc, #472]	@ (8002370 <_dtoa_r+0x2e0>)
 8002196:	f7fe f87f 	bl	8000298 <__aeabi_dsub>
 800219a:	a369      	add	r3, pc, #420	@ (adr r3, 8002340 <_dtoa_r+0x2b0>)
 800219c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021a0:	f7fe fa32 	bl	8000608 <__aeabi_dmul>
 80021a4:	a368      	add	r3, pc, #416	@ (adr r3, 8002348 <_dtoa_r+0x2b8>)
 80021a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021aa:	f7fe f877 	bl	800029c <__adddf3>
 80021ae:	4604      	mov	r4, r0
 80021b0:	4630      	mov	r0, r6
 80021b2:	460d      	mov	r5, r1
 80021b4:	f7fe f9be 	bl	8000534 <__aeabi_i2d>
 80021b8:	a365      	add	r3, pc, #404	@ (adr r3, 8002350 <_dtoa_r+0x2c0>)
 80021ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021be:	f7fe fa23 	bl	8000608 <__aeabi_dmul>
 80021c2:	4602      	mov	r2, r0
 80021c4:	460b      	mov	r3, r1
 80021c6:	4620      	mov	r0, r4
 80021c8:	4629      	mov	r1, r5
 80021ca:	f7fe f867 	bl	800029c <__adddf3>
 80021ce:	4604      	mov	r4, r0
 80021d0:	460d      	mov	r5, r1
 80021d2:	f7fe fcc9 	bl	8000b68 <__aeabi_d2iz>
 80021d6:	2200      	movs	r2, #0
 80021d8:	4607      	mov	r7, r0
 80021da:	2300      	movs	r3, #0
 80021dc:	4620      	mov	r0, r4
 80021de:	4629      	mov	r1, r5
 80021e0:	f7fe fc84 	bl	8000aec <__aeabi_dcmplt>
 80021e4:	b140      	cbz	r0, 80021f8 <_dtoa_r+0x168>
 80021e6:	4638      	mov	r0, r7
 80021e8:	f7fe f9a4 	bl	8000534 <__aeabi_i2d>
 80021ec:	4622      	mov	r2, r4
 80021ee:	462b      	mov	r3, r5
 80021f0:	f7fe fc72 	bl	8000ad8 <__aeabi_dcmpeq>
 80021f4:	b900      	cbnz	r0, 80021f8 <_dtoa_r+0x168>
 80021f6:	3f01      	subs	r7, #1
 80021f8:	2f16      	cmp	r7, #22
 80021fa:	d852      	bhi.n	80022a2 <_dtoa_r+0x212>
 80021fc:	4b5d      	ldr	r3, [pc, #372]	@ (8002374 <_dtoa_r+0x2e4>)
 80021fe:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002202:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002206:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800220a:	f7fe fc6f 	bl	8000aec <__aeabi_dcmplt>
 800220e:	2800      	cmp	r0, #0
 8002210:	d049      	beq.n	80022a6 <_dtoa_r+0x216>
 8002212:	3f01      	subs	r7, #1
 8002214:	2300      	movs	r3, #0
 8002216:	930f      	str	r3, [sp, #60]	@ 0x3c
 8002218:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800221a:	1b9b      	subs	r3, r3, r6
 800221c:	1e5a      	subs	r2, r3, #1
 800221e:	bf44      	itt	mi
 8002220:	f1c3 0801 	rsbmi	r8, r3, #1
 8002224:	2300      	movmi	r3, #0
 8002226:	9209      	str	r2, [sp, #36]	@ 0x24
 8002228:	bf54      	ite	pl
 800222a:	f04f 0800 	movpl.w	r8, #0
 800222e:	9309      	strmi	r3, [sp, #36]	@ 0x24
 8002230:	2f00      	cmp	r7, #0
 8002232:	db3a      	blt.n	80022aa <_dtoa_r+0x21a>
 8002234:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002236:	970e      	str	r7, [sp, #56]	@ 0x38
 8002238:	443b      	add	r3, r7
 800223a:	9309      	str	r3, [sp, #36]	@ 0x24
 800223c:	2300      	movs	r3, #0
 800223e:	930a      	str	r3, [sp, #40]	@ 0x28
 8002240:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002242:	2b09      	cmp	r3, #9
 8002244:	d865      	bhi.n	8002312 <_dtoa_r+0x282>
 8002246:	2b05      	cmp	r3, #5
 8002248:	bfc4      	itt	gt
 800224a:	3b04      	subgt	r3, #4
 800224c:	9320      	strgt	r3, [sp, #128]	@ 0x80
 800224e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002250:	f1a3 0302 	sub.w	r3, r3, #2
 8002254:	bfcc      	ite	gt
 8002256:	2400      	movgt	r4, #0
 8002258:	2401      	movle	r4, #1
 800225a:	2b03      	cmp	r3, #3
 800225c:	d864      	bhi.n	8002328 <_dtoa_r+0x298>
 800225e:	e8df f003 	tbb	[pc, r3]
 8002262:	382b      	.short	0x382b
 8002264:	5636      	.short	0x5636
 8002266:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 800226a:	441e      	add	r6, r3
 800226c:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002270:	2b20      	cmp	r3, #32
 8002272:	bfc1      	itttt	gt
 8002274:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002278:	fa08 f803 	lslgt.w	r8, r8, r3
 800227c:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002280:	fa24 f303 	lsrgt.w	r3, r4, r3
 8002284:	bfd6      	itet	le
 8002286:	f1c3 0320 	rsble	r3, r3, #32
 800228a:	ea48 0003 	orrgt.w	r0, r8, r3
 800228e:	fa04 f003 	lslle.w	r0, r4, r3
 8002292:	f7fe f93f 	bl	8000514 <__aeabi_ui2d>
 8002296:	2201      	movs	r2, #1
 8002298:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800229c:	3e01      	subs	r6, #1
 800229e:	9212      	str	r2, [sp, #72]	@ 0x48
 80022a0:	e776      	b.n	8002190 <_dtoa_r+0x100>
 80022a2:	2301      	movs	r3, #1
 80022a4:	e7b7      	b.n	8002216 <_dtoa_r+0x186>
 80022a6:	900f      	str	r0, [sp, #60]	@ 0x3c
 80022a8:	e7b6      	b.n	8002218 <_dtoa_r+0x188>
 80022aa:	427b      	negs	r3, r7
 80022ac:	930a      	str	r3, [sp, #40]	@ 0x28
 80022ae:	2300      	movs	r3, #0
 80022b0:	eba8 0807 	sub.w	r8, r8, r7
 80022b4:	930e      	str	r3, [sp, #56]	@ 0x38
 80022b6:	e7c3      	b.n	8002240 <_dtoa_r+0x1b0>
 80022b8:	2300      	movs	r3, #0
 80022ba:	930b      	str	r3, [sp, #44]	@ 0x2c
 80022bc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80022be:	2b00      	cmp	r3, #0
 80022c0:	dc35      	bgt.n	800232e <_dtoa_r+0x29e>
 80022c2:	2301      	movs	r3, #1
 80022c4:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80022c8:	461a      	mov	r2, r3
 80022ca:	9221      	str	r2, [sp, #132]	@ 0x84
 80022cc:	e00b      	b.n	80022e6 <_dtoa_r+0x256>
 80022ce:	2301      	movs	r3, #1
 80022d0:	e7f3      	b.n	80022ba <_dtoa_r+0x22a>
 80022d2:	2300      	movs	r3, #0
 80022d4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80022d6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80022d8:	18fb      	adds	r3, r7, r3
 80022da:	9308      	str	r3, [sp, #32]
 80022dc:	3301      	adds	r3, #1
 80022de:	2b01      	cmp	r3, #1
 80022e0:	9307      	str	r3, [sp, #28]
 80022e2:	bfb8      	it	lt
 80022e4:	2301      	movlt	r3, #1
 80022e6:	f8db 001c 	ldr.w	r0, [fp, #28]
 80022ea:	2100      	movs	r1, #0
 80022ec:	2204      	movs	r2, #4
 80022ee:	f102 0514 	add.w	r5, r2, #20
 80022f2:	429d      	cmp	r5, r3
 80022f4:	d91f      	bls.n	8002336 <_dtoa_r+0x2a6>
 80022f6:	6041      	str	r1, [r0, #4]
 80022f8:	4658      	mov	r0, fp
 80022fa:	f000 fd91 	bl	8002e20 <_Balloc>
 80022fe:	4682      	mov	sl, r0
 8002300:	2800      	cmp	r0, #0
 8002302:	d13b      	bne.n	800237c <_dtoa_r+0x2ec>
 8002304:	4b1c      	ldr	r3, [pc, #112]	@ (8002378 <_dtoa_r+0x2e8>)
 8002306:	4602      	mov	r2, r0
 8002308:	f240 11af 	movw	r1, #431	@ 0x1af
 800230c:	e6d4      	b.n	80020b8 <_dtoa_r+0x28>
 800230e:	2301      	movs	r3, #1
 8002310:	e7e0      	b.n	80022d4 <_dtoa_r+0x244>
 8002312:	2401      	movs	r4, #1
 8002314:	2300      	movs	r3, #0
 8002316:	9320      	str	r3, [sp, #128]	@ 0x80
 8002318:	940b      	str	r4, [sp, #44]	@ 0x2c
 800231a:	f04f 33ff 	mov.w	r3, #4294967295
 800231e:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002322:	2200      	movs	r2, #0
 8002324:	2312      	movs	r3, #18
 8002326:	e7d0      	b.n	80022ca <_dtoa_r+0x23a>
 8002328:	2301      	movs	r3, #1
 800232a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800232c:	e7f5      	b.n	800231a <_dtoa_r+0x28a>
 800232e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002330:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002334:	e7d7      	b.n	80022e6 <_dtoa_r+0x256>
 8002336:	3101      	adds	r1, #1
 8002338:	0052      	lsls	r2, r2, #1
 800233a:	e7d8      	b.n	80022ee <_dtoa_r+0x25e>
 800233c:	f3af 8000 	nop.w
 8002340:	636f4361 	.word	0x636f4361
 8002344:	3fd287a7 	.word	0x3fd287a7
 8002348:	8b60c8b3 	.word	0x8b60c8b3
 800234c:	3fc68a28 	.word	0x3fc68a28
 8002350:	509f79fb 	.word	0x509f79fb
 8002354:	3fd34413 	.word	0x3fd34413
 8002358:	08003d72 	.word	0x08003d72
 800235c:	08003d89 	.word	0x08003d89
 8002360:	7ff00000 	.word	0x7ff00000
 8002364:	08003d6e 	.word	0x08003d6e
 8002368:	08003d42 	.word	0x08003d42
 800236c:	08003d41 	.word	0x08003d41
 8002370:	3ff80000 	.word	0x3ff80000
 8002374:	08003e80 	.word	0x08003e80
 8002378:	08003de1 	.word	0x08003de1
 800237c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002380:	6018      	str	r0, [r3, #0]
 8002382:	9b07      	ldr	r3, [sp, #28]
 8002384:	2b0e      	cmp	r3, #14
 8002386:	f200 80a4 	bhi.w	80024d2 <_dtoa_r+0x442>
 800238a:	2c00      	cmp	r4, #0
 800238c:	f000 80a1 	beq.w	80024d2 <_dtoa_r+0x442>
 8002390:	2f00      	cmp	r7, #0
 8002392:	dd33      	ble.n	80023fc <_dtoa_r+0x36c>
 8002394:	4b86      	ldr	r3, [pc, #536]	@ (80025b0 <_dtoa_r+0x520>)
 8002396:	f007 020f 	and.w	r2, r7, #15
 800239a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800239e:	e9d3 3400 	ldrd	r3, r4, [r3]
 80023a2:	05f8      	lsls	r0, r7, #23
 80023a4:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80023a8:	ea4f 1427 	mov.w	r4, r7, asr #4
 80023ac:	d516      	bpl.n	80023dc <_dtoa_r+0x34c>
 80023ae:	4b81      	ldr	r3, [pc, #516]	@ (80025b4 <_dtoa_r+0x524>)
 80023b0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80023b4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80023b8:	f7fe fa50 	bl	800085c <__aeabi_ddiv>
 80023bc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80023c0:	f004 040f 	and.w	r4, r4, #15
 80023c4:	2603      	movs	r6, #3
 80023c6:	4d7b      	ldr	r5, [pc, #492]	@ (80025b4 <_dtoa_r+0x524>)
 80023c8:	b954      	cbnz	r4, 80023e0 <_dtoa_r+0x350>
 80023ca:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80023ce:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80023d2:	f7fe fa43 	bl	800085c <__aeabi_ddiv>
 80023d6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80023da:	e028      	b.n	800242e <_dtoa_r+0x39e>
 80023dc:	2602      	movs	r6, #2
 80023de:	e7f2      	b.n	80023c6 <_dtoa_r+0x336>
 80023e0:	07e1      	lsls	r1, r4, #31
 80023e2:	d508      	bpl.n	80023f6 <_dtoa_r+0x366>
 80023e4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80023e8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80023ec:	f7fe f90c 	bl	8000608 <__aeabi_dmul>
 80023f0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80023f4:	3601      	adds	r6, #1
 80023f6:	1064      	asrs	r4, r4, #1
 80023f8:	3508      	adds	r5, #8
 80023fa:	e7e5      	b.n	80023c8 <_dtoa_r+0x338>
 80023fc:	f000 80d2 	beq.w	80025a4 <_dtoa_r+0x514>
 8002400:	427c      	negs	r4, r7
 8002402:	4b6b      	ldr	r3, [pc, #428]	@ (80025b0 <_dtoa_r+0x520>)
 8002404:	4d6b      	ldr	r5, [pc, #428]	@ (80025b4 <_dtoa_r+0x524>)
 8002406:	f004 020f 	and.w	r2, r4, #15
 800240a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800240e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002412:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002416:	f7fe f8f7 	bl	8000608 <__aeabi_dmul>
 800241a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800241e:	1124      	asrs	r4, r4, #4
 8002420:	2300      	movs	r3, #0
 8002422:	2602      	movs	r6, #2
 8002424:	2c00      	cmp	r4, #0
 8002426:	f040 80b2 	bne.w	800258e <_dtoa_r+0x4fe>
 800242a:	2b00      	cmp	r3, #0
 800242c:	d1d3      	bne.n	80023d6 <_dtoa_r+0x346>
 800242e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002430:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002434:	2b00      	cmp	r3, #0
 8002436:	f000 80b7 	beq.w	80025a8 <_dtoa_r+0x518>
 800243a:	4b5f      	ldr	r3, [pc, #380]	@ (80025b8 <_dtoa_r+0x528>)
 800243c:	2200      	movs	r2, #0
 800243e:	4620      	mov	r0, r4
 8002440:	4629      	mov	r1, r5
 8002442:	f7fe fb53 	bl	8000aec <__aeabi_dcmplt>
 8002446:	2800      	cmp	r0, #0
 8002448:	f000 80ae 	beq.w	80025a8 <_dtoa_r+0x518>
 800244c:	9b07      	ldr	r3, [sp, #28]
 800244e:	2b00      	cmp	r3, #0
 8002450:	f000 80aa 	beq.w	80025a8 <_dtoa_r+0x518>
 8002454:	9b08      	ldr	r3, [sp, #32]
 8002456:	2b00      	cmp	r3, #0
 8002458:	dd37      	ble.n	80024ca <_dtoa_r+0x43a>
 800245a:	1e7b      	subs	r3, r7, #1
 800245c:	9304      	str	r3, [sp, #16]
 800245e:	4620      	mov	r0, r4
 8002460:	4b56      	ldr	r3, [pc, #344]	@ (80025bc <_dtoa_r+0x52c>)
 8002462:	2200      	movs	r2, #0
 8002464:	4629      	mov	r1, r5
 8002466:	f7fe f8cf 	bl	8000608 <__aeabi_dmul>
 800246a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800246e:	9c08      	ldr	r4, [sp, #32]
 8002470:	3601      	adds	r6, #1
 8002472:	4630      	mov	r0, r6
 8002474:	f7fe f85e 	bl	8000534 <__aeabi_i2d>
 8002478:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800247c:	f7fe f8c4 	bl	8000608 <__aeabi_dmul>
 8002480:	4b4f      	ldr	r3, [pc, #316]	@ (80025c0 <_dtoa_r+0x530>)
 8002482:	2200      	movs	r2, #0
 8002484:	f7fd ff0a 	bl	800029c <__adddf3>
 8002488:	4605      	mov	r5, r0
 800248a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800248e:	2c00      	cmp	r4, #0
 8002490:	f040 809a 	bne.w	80025c8 <_dtoa_r+0x538>
 8002494:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002498:	4b4a      	ldr	r3, [pc, #296]	@ (80025c4 <_dtoa_r+0x534>)
 800249a:	2200      	movs	r2, #0
 800249c:	f7fd fefc 	bl	8000298 <__aeabi_dsub>
 80024a0:	4602      	mov	r2, r0
 80024a2:	460b      	mov	r3, r1
 80024a4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80024a8:	462a      	mov	r2, r5
 80024aa:	4633      	mov	r3, r6
 80024ac:	f7fe fb3c 	bl	8000b28 <__aeabi_dcmpgt>
 80024b0:	2800      	cmp	r0, #0
 80024b2:	f040 828e 	bne.w	80029d2 <_dtoa_r+0x942>
 80024b6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80024ba:	462a      	mov	r2, r5
 80024bc:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80024c0:	f7fe fb14 	bl	8000aec <__aeabi_dcmplt>
 80024c4:	2800      	cmp	r0, #0
 80024c6:	f040 8127 	bne.w	8002718 <_dtoa_r+0x688>
 80024ca:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 80024ce:	e9cd 3402 	strd	r3, r4, [sp, #8]
 80024d2:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80024d4:	2b00      	cmp	r3, #0
 80024d6:	f2c0 8163 	blt.w	80027a0 <_dtoa_r+0x710>
 80024da:	2f0e      	cmp	r7, #14
 80024dc:	f300 8160 	bgt.w	80027a0 <_dtoa_r+0x710>
 80024e0:	4b33      	ldr	r3, [pc, #204]	@ (80025b0 <_dtoa_r+0x520>)
 80024e2:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80024e6:	e9d3 3400 	ldrd	r3, r4, [r3]
 80024ea:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80024ee:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80024f0:	2b00      	cmp	r3, #0
 80024f2:	da03      	bge.n	80024fc <_dtoa_r+0x46c>
 80024f4:	9b07      	ldr	r3, [sp, #28]
 80024f6:	2b00      	cmp	r3, #0
 80024f8:	f340 8100 	ble.w	80026fc <_dtoa_r+0x66c>
 80024fc:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002500:	4656      	mov	r6, sl
 8002502:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002506:	4620      	mov	r0, r4
 8002508:	4629      	mov	r1, r5
 800250a:	f7fe f9a7 	bl	800085c <__aeabi_ddiv>
 800250e:	f7fe fb2b 	bl	8000b68 <__aeabi_d2iz>
 8002512:	4680      	mov	r8, r0
 8002514:	f7fe f80e 	bl	8000534 <__aeabi_i2d>
 8002518:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800251c:	f7fe f874 	bl	8000608 <__aeabi_dmul>
 8002520:	4602      	mov	r2, r0
 8002522:	460b      	mov	r3, r1
 8002524:	4620      	mov	r0, r4
 8002526:	4629      	mov	r1, r5
 8002528:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800252c:	f7fd feb4 	bl	8000298 <__aeabi_dsub>
 8002530:	f806 4b01 	strb.w	r4, [r6], #1
 8002534:	9d07      	ldr	r5, [sp, #28]
 8002536:	eba6 040a 	sub.w	r4, r6, sl
 800253a:	42a5      	cmp	r5, r4
 800253c:	4602      	mov	r2, r0
 800253e:	460b      	mov	r3, r1
 8002540:	f040 8116 	bne.w	8002770 <_dtoa_r+0x6e0>
 8002544:	f7fd feaa 	bl	800029c <__adddf3>
 8002548:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800254c:	4604      	mov	r4, r0
 800254e:	460d      	mov	r5, r1
 8002550:	f7fe faea 	bl	8000b28 <__aeabi_dcmpgt>
 8002554:	2800      	cmp	r0, #0
 8002556:	f040 80f8 	bne.w	800274a <_dtoa_r+0x6ba>
 800255a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800255e:	4620      	mov	r0, r4
 8002560:	4629      	mov	r1, r5
 8002562:	f7fe fab9 	bl	8000ad8 <__aeabi_dcmpeq>
 8002566:	b118      	cbz	r0, 8002570 <_dtoa_r+0x4e0>
 8002568:	f018 0f01 	tst.w	r8, #1
 800256c:	f040 80ed 	bne.w	800274a <_dtoa_r+0x6ba>
 8002570:	4649      	mov	r1, r9
 8002572:	4658      	mov	r0, fp
 8002574:	f000 fc94 	bl	8002ea0 <_Bfree>
 8002578:	2300      	movs	r3, #0
 800257a:	7033      	strb	r3, [r6, #0]
 800257c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 800257e:	3701      	adds	r7, #1
 8002580:	601f      	str	r7, [r3, #0]
 8002582:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002584:	2b00      	cmp	r3, #0
 8002586:	f000 8320 	beq.w	8002bca <_dtoa_r+0xb3a>
 800258a:	601e      	str	r6, [r3, #0]
 800258c:	e31d      	b.n	8002bca <_dtoa_r+0xb3a>
 800258e:	07e2      	lsls	r2, r4, #31
 8002590:	d505      	bpl.n	800259e <_dtoa_r+0x50e>
 8002592:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002596:	f7fe f837 	bl	8000608 <__aeabi_dmul>
 800259a:	3601      	adds	r6, #1
 800259c:	2301      	movs	r3, #1
 800259e:	1064      	asrs	r4, r4, #1
 80025a0:	3508      	adds	r5, #8
 80025a2:	e73f      	b.n	8002424 <_dtoa_r+0x394>
 80025a4:	2602      	movs	r6, #2
 80025a6:	e742      	b.n	800242e <_dtoa_r+0x39e>
 80025a8:	9c07      	ldr	r4, [sp, #28]
 80025aa:	9704      	str	r7, [sp, #16]
 80025ac:	e761      	b.n	8002472 <_dtoa_r+0x3e2>
 80025ae:	bf00      	nop
 80025b0:	08003e80 	.word	0x08003e80
 80025b4:	08003e58 	.word	0x08003e58
 80025b8:	3ff00000 	.word	0x3ff00000
 80025bc:	40240000 	.word	0x40240000
 80025c0:	401c0000 	.word	0x401c0000
 80025c4:	40140000 	.word	0x40140000
 80025c8:	4b70      	ldr	r3, [pc, #448]	@ (800278c <_dtoa_r+0x6fc>)
 80025ca:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80025cc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80025d0:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80025d4:	4454      	add	r4, sl
 80025d6:	2900      	cmp	r1, #0
 80025d8:	d045      	beq.n	8002666 <_dtoa_r+0x5d6>
 80025da:	496d      	ldr	r1, [pc, #436]	@ (8002790 <_dtoa_r+0x700>)
 80025dc:	2000      	movs	r0, #0
 80025de:	f7fe f93d 	bl	800085c <__aeabi_ddiv>
 80025e2:	4633      	mov	r3, r6
 80025e4:	462a      	mov	r2, r5
 80025e6:	f7fd fe57 	bl	8000298 <__aeabi_dsub>
 80025ea:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80025ee:	4656      	mov	r6, sl
 80025f0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80025f4:	f7fe fab8 	bl	8000b68 <__aeabi_d2iz>
 80025f8:	4605      	mov	r5, r0
 80025fa:	f7fd ff9b 	bl	8000534 <__aeabi_i2d>
 80025fe:	4602      	mov	r2, r0
 8002600:	460b      	mov	r3, r1
 8002602:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002606:	f7fd fe47 	bl	8000298 <__aeabi_dsub>
 800260a:	3530      	adds	r5, #48	@ 0x30
 800260c:	4602      	mov	r2, r0
 800260e:	460b      	mov	r3, r1
 8002610:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002614:	f806 5b01 	strb.w	r5, [r6], #1
 8002618:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800261c:	f7fe fa66 	bl	8000aec <__aeabi_dcmplt>
 8002620:	2800      	cmp	r0, #0
 8002622:	d163      	bne.n	80026ec <_dtoa_r+0x65c>
 8002624:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002628:	495a      	ldr	r1, [pc, #360]	@ (8002794 <_dtoa_r+0x704>)
 800262a:	2000      	movs	r0, #0
 800262c:	f7fd fe34 	bl	8000298 <__aeabi_dsub>
 8002630:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002634:	f7fe fa5a 	bl	8000aec <__aeabi_dcmplt>
 8002638:	2800      	cmp	r0, #0
 800263a:	f040 8087 	bne.w	800274c <_dtoa_r+0x6bc>
 800263e:	42a6      	cmp	r6, r4
 8002640:	f43f af43 	beq.w	80024ca <_dtoa_r+0x43a>
 8002644:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002648:	4b53      	ldr	r3, [pc, #332]	@ (8002798 <_dtoa_r+0x708>)
 800264a:	2200      	movs	r2, #0
 800264c:	f7fd ffdc 	bl	8000608 <__aeabi_dmul>
 8002650:	4b51      	ldr	r3, [pc, #324]	@ (8002798 <_dtoa_r+0x708>)
 8002652:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002656:	2200      	movs	r2, #0
 8002658:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800265c:	f7fd ffd4 	bl	8000608 <__aeabi_dmul>
 8002660:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002664:	e7c4      	b.n	80025f0 <_dtoa_r+0x560>
 8002666:	4631      	mov	r1, r6
 8002668:	4628      	mov	r0, r5
 800266a:	f7fd ffcd 	bl	8000608 <__aeabi_dmul>
 800266e:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002672:	9413      	str	r4, [sp, #76]	@ 0x4c
 8002674:	4656      	mov	r6, sl
 8002676:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800267a:	f7fe fa75 	bl	8000b68 <__aeabi_d2iz>
 800267e:	4605      	mov	r5, r0
 8002680:	f7fd ff58 	bl	8000534 <__aeabi_i2d>
 8002684:	4602      	mov	r2, r0
 8002686:	460b      	mov	r3, r1
 8002688:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800268c:	f7fd fe04 	bl	8000298 <__aeabi_dsub>
 8002690:	3530      	adds	r5, #48	@ 0x30
 8002692:	f806 5b01 	strb.w	r5, [r6], #1
 8002696:	4602      	mov	r2, r0
 8002698:	460b      	mov	r3, r1
 800269a:	42a6      	cmp	r6, r4
 800269c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80026a0:	f04f 0200 	mov.w	r2, #0
 80026a4:	d124      	bne.n	80026f0 <_dtoa_r+0x660>
 80026a6:	4b3a      	ldr	r3, [pc, #232]	@ (8002790 <_dtoa_r+0x700>)
 80026a8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80026ac:	f7fd fdf6 	bl	800029c <__adddf3>
 80026b0:	4602      	mov	r2, r0
 80026b2:	460b      	mov	r3, r1
 80026b4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80026b8:	f7fe fa36 	bl	8000b28 <__aeabi_dcmpgt>
 80026bc:	2800      	cmp	r0, #0
 80026be:	d145      	bne.n	800274c <_dtoa_r+0x6bc>
 80026c0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80026c4:	4932      	ldr	r1, [pc, #200]	@ (8002790 <_dtoa_r+0x700>)
 80026c6:	2000      	movs	r0, #0
 80026c8:	f7fd fde6 	bl	8000298 <__aeabi_dsub>
 80026cc:	4602      	mov	r2, r0
 80026ce:	460b      	mov	r3, r1
 80026d0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80026d4:	f7fe fa0a 	bl	8000aec <__aeabi_dcmplt>
 80026d8:	2800      	cmp	r0, #0
 80026da:	f43f aef6 	beq.w	80024ca <_dtoa_r+0x43a>
 80026de:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80026e0:	1e73      	subs	r3, r6, #1
 80026e2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80026e4:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80026e8:	2b30      	cmp	r3, #48	@ 0x30
 80026ea:	d0f8      	beq.n	80026de <_dtoa_r+0x64e>
 80026ec:	9f04      	ldr	r7, [sp, #16]
 80026ee:	e73f      	b.n	8002570 <_dtoa_r+0x4e0>
 80026f0:	4b29      	ldr	r3, [pc, #164]	@ (8002798 <_dtoa_r+0x708>)
 80026f2:	f7fd ff89 	bl	8000608 <__aeabi_dmul>
 80026f6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80026fa:	e7bc      	b.n	8002676 <_dtoa_r+0x5e6>
 80026fc:	d10c      	bne.n	8002718 <_dtoa_r+0x688>
 80026fe:	4b27      	ldr	r3, [pc, #156]	@ (800279c <_dtoa_r+0x70c>)
 8002700:	2200      	movs	r2, #0
 8002702:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002706:	f7fd ff7f 	bl	8000608 <__aeabi_dmul>
 800270a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800270e:	f7fe fa01 	bl	8000b14 <__aeabi_dcmpge>
 8002712:	2800      	cmp	r0, #0
 8002714:	f000 815b 	beq.w	80029ce <_dtoa_r+0x93e>
 8002718:	2400      	movs	r4, #0
 800271a:	4625      	mov	r5, r4
 800271c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800271e:	43db      	mvns	r3, r3
 8002720:	9304      	str	r3, [sp, #16]
 8002722:	4656      	mov	r6, sl
 8002724:	2700      	movs	r7, #0
 8002726:	4621      	mov	r1, r4
 8002728:	4658      	mov	r0, fp
 800272a:	f000 fbb9 	bl	8002ea0 <_Bfree>
 800272e:	2d00      	cmp	r5, #0
 8002730:	d0dc      	beq.n	80026ec <_dtoa_r+0x65c>
 8002732:	b12f      	cbz	r7, 8002740 <_dtoa_r+0x6b0>
 8002734:	42af      	cmp	r7, r5
 8002736:	d003      	beq.n	8002740 <_dtoa_r+0x6b0>
 8002738:	4639      	mov	r1, r7
 800273a:	4658      	mov	r0, fp
 800273c:	f000 fbb0 	bl	8002ea0 <_Bfree>
 8002740:	4629      	mov	r1, r5
 8002742:	4658      	mov	r0, fp
 8002744:	f000 fbac 	bl	8002ea0 <_Bfree>
 8002748:	e7d0      	b.n	80026ec <_dtoa_r+0x65c>
 800274a:	9704      	str	r7, [sp, #16]
 800274c:	4633      	mov	r3, r6
 800274e:	461e      	mov	r6, r3
 8002750:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002754:	2a39      	cmp	r2, #57	@ 0x39
 8002756:	d107      	bne.n	8002768 <_dtoa_r+0x6d8>
 8002758:	459a      	cmp	sl, r3
 800275a:	d1f8      	bne.n	800274e <_dtoa_r+0x6be>
 800275c:	9a04      	ldr	r2, [sp, #16]
 800275e:	3201      	adds	r2, #1
 8002760:	9204      	str	r2, [sp, #16]
 8002762:	2230      	movs	r2, #48	@ 0x30
 8002764:	f88a 2000 	strb.w	r2, [sl]
 8002768:	781a      	ldrb	r2, [r3, #0]
 800276a:	3201      	adds	r2, #1
 800276c:	701a      	strb	r2, [r3, #0]
 800276e:	e7bd      	b.n	80026ec <_dtoa_r+0x65c>
 8002770:	4b09      	ldr	r3, [pc, #36]	@ (8002798 <_dtoa_r+0x708>)
 8002772:	2200      	movs	r2, #0
 8002774:	f7fd ff48 	bl	8000608 <__aeabi_dmul>
 8002778:	2200      	movs	r2, #0
 800277a:	2300      	movs	r3, #0
 800277c:	4604      	mov	r4, r0
 800277e:	460d      	mov	r5, r1
 8002780:	f7fe f9aa 	bl	8000ad8 <__aeabi_dcmpeq>
 8002784:	2800      	cmp	r0, #0
 8002786:	f43f aebc 	beq.w	8002502 <_dtoa_r+0x472>
 800278a:	e6f1      	b.n	8002570 <_dtoa_r+0x4e0>
 800278c:	08003e80 	.word	0x08003e80
 8002790:	3fe00000 	.word	0x3fe00000
 8002794:	3ff00000 	.word	0x3ff00000
 8002798:	40240000 	.word	0x40240000
 800279c:	40140000 	.word	0x40140000
 80027a0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80027a2:	2a00      	cmp	r2, #0
 80027a4:	f000 80db 	beq.w	800295e <_dtoa_r+0x8ce>
 80027a8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80027aa:	2a01      	cmp	r2, #1
 80027ac:	f300 80bf 	bgt.w	800292e <_dtoa_r+0x89e>
 80027b0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80027b2:	2a00      	cmp	r2, #0
 80027b4:	f000 80b7 	beq.w	8002926 <_dtoa_r+0x896>
 80027b8:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 80027bc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80027be:	4646      	mov	r6, r8
 80027c0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80027c2:	2101      	movs	r1, #1
 80027c4:	441a      	add	r2, r3
 80027c6:	4658      	mov	r0, fp
 80027c8:	4498      	add	r8, r3
 80027ca:	9209      	str	r2, [sp, #36]	@ 0x24
 80027cc:	f000 fc1c 	bl	8003008 <__i2b>
 80027d0:	4605      	mov	r5, r0
 80027d2:	b15e      	cbz	r6, 80027ec <_dtoa_r+0x75c>
 80027d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80027d6:	2b00      	cmp	r3, #0
 80027d8:	dd08      	ble.n	80027ec <_dtoa_r+0x75c>
 80027da:	42b3      	cmp	r3, r6
 80027dc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80027de:	bfa8      	it	ge
 80027e0:	4633      	movge	r3, r6
 80027e2:	eba8 0803 	sub.w	r8, r8, r3
 80027e6:	1af6      	subs	r6, r6, r3
 80027e8:	1ad3      	subs	r3, r2, r3
 80027ea:	9309      	str	r3, [sp, #36]	@ 0x24
 80027ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80027ee:	b1f3      	cbz	r3, 800282e <_dtoa_r+0x79e>
 80027f0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80027f2:	2b00      	cmp	r3, #0
 80027f4:	f000 80b7 	beq.w	8002966 <_dtoa_r+0x8d6>
 80027f8:	b18c      	cbz	r4, 800281e <_dtoa_r+0x78e>
 80027fa:	4629      	mov	r1, r5
 80027fc:	4622      	mov	r2, r4
 80027fe:	4658      	mov	r0, fp
 8002800:	f000 fcc2 	bl	8003188 <__pow5mult>
 8002804:	464a      	mov	r2, r9
 8002806:	4601      	mov	r1, r0
 8002808:	4605      	mov	r5, r0
 800280a:	4658      	mov	r0, fp
 800280c:	f000 fc12 	bl	8003034 <__multiply>
 8002810:	4649      	mov	r1, r9
 8002812:	9004      	str	r0, [sp, #16]
 8002814:	4658      	mov	r0, fp
 8002816:	f000 fb43 	bl	8002ea0 <_Bfree>
 800281a:	9b04      	ldr	r3, [sp, #16]
 800281c:	4699      	mov	r9, r3
 800281e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002820:	1b1a      	subs	r2, r3, r4
 8002822:	d004      	beq.n	800282e <_dtoa_r+0x79e>
 8002824:	4649      	mov	r1, r9
 8002826:	4658      	mov	r0, fp
 8002828:	f000 fcae 	bl	8003188 <__pow5mult>
 800282c:	4681      	mov	r9, r0
 800282e:	2101      	movs	r1, #1
 8002830:	4658      	mov	r0, fp
 8002832:	f000 fbe9 	bl	8003008 <__i2b>
 8002836:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002838:	4604      	mov	r4, r0
 800283a:	2b00      	cmp	r3, #0
 800283c:	f000 81c9 	beq.w	8002bd2 <_dtoa_r+0xb42>
 8002840:	461a      	mov	r2, r3
 8002842:	4601      	mov	r1, r0
 8002844:	4658      	mov	r0, fp
 8002846:	f000 fc9f 	bl	8003188 <__pow5mult>
 800284a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800284c:	2b01      	cmp	r3, #1
 800284e:	4604      	mov	r4, r0
 8002850:	f300 808f 	bgt.w	8002972 <_dtoa_r+0x8e2>
 8002854:	9b02      	ldr	r3, [sp, #8]
 8002856:	2b00      	cmp	r3, #0
 8002858:	f040 8087 	bne.w	800296a <_dtoa_r+0x8da>
 800285c:	9b03      	ldr	r3, [sp, #12]
 800285e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002862:	2b00      	cmp	r3, #0
 8002864:	f040 8083 	bne.w	800296e <_dtoa_r+0x8de>
 8002868:	9b03      	ldr	r3, [sp, #12]
 800286a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800286e:	0d1b      	lsrs	r3, r3, #20
 8002870:	051b      	lsls	r3, r3, #20
 8002872:	b12b      	cbz	r3, 8002880 <_dtoa_r+0x7f0>
 8002874:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002876:	3301      	adds	r3, #1
 8002878:	9309      	str	r3, [sp, #36]	@ 0x24
 800287a:	f108 0801 	add.w	r8, r8, #1
 800287e:	2301      	movs	r3, #1
 8002880:	930a      	str	r3, [sp, #40]	@ 0x28
 8002882:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002884:	2b00      	cmp	r3, #0
 8002886:	f000 81aa 	beq.w	8002bde <_dtoa_r+0xb4e>
 800288a:	6923      	ldr	r3, [r4, #16]
 800288c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002890:	6918      	ldr	r0, [r3, #16]
 8002892:	f000 fb6d 	bl	8002f70 <__hi0bits>
 8002896:	f1c0 0020 	rsb	r0, r0, #32
 800289a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800289c:	4418      	add	r0, r3
 800289e:	f010 001f 	ands.w	r0, r0, #31
 80028a2:	d071      	beq.n	8002988 <_dtoa_r+0x8f8>
 80028a4:	f1c0 0320 	rsb	r3, r0, #32
 80028a8:	2b04      	cmp	r3, #4
 80028aa:	dd65      	ble.n	8002978 <_dtoa_r+0x8e8>
 80028ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80028ae:	f1c0 001c 	rsb	r0, r0, #28
 80028b2:	4403      	add	r3, r0
 80028b4:	4480      	add	r8, r0
 80028b6:	4406      	add	r6, r0
 80028b8:	9309      	str	r3, [sp, #36]	@ 0x24
 80028ba:	f1b8 0f00 	cmp.w	r8, #0
 80028be:	dd05      	ble.n	80028cc <_dtoa_r+0x83c>
 80028c0:	4649      	mov	r1, r9
 80028c2:	4642      	mov	r2, r8
 80028c4:	4658      	mov	r0, fp
 80028c6:	f000 fcb9 	bl	800323c <__lshift>
 80028ca:	4681      	mov	r9, r0
 80028cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80028ce:	2b00      	cmp	r3, #0
 80028d0:	dd05      	ble.n	80028de <_dtoa_r+0x84e>
 80028d2:	4621      	mov	r1, r4
 80028d4:	461a      	mov	r2, r3
 80028d6:	4658      	mov	r0, fp
 80028d8:	f000 fcb0 	bl	800323c <__lshift>
 80028dc:	4604      	mov	r4, r0
 80028de:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80028e0:	2b00      	cmp	r3, #0
 80028e2:	d053      	beq.n	800298c <_dtoa_r+0x8fc>
 80028e4:	4621      	mov	r1, r4
 80028e6:	4648      	mov	r0, r9
 80028e8:	f000 fd14 	bl	8003314 <__mcmp>
 80028ec:	2800      	cmp	r0, #0
 80028ee:	da4d      	bge.n	800298c <_dtoa_r+0x8fc>
 80028f0:	1e7b      	subs	r3, r7, #1
 80028f2:	9304      	str	r3, [sp, #16]
 80028f4:	4649      	mov	r1, r9
 80028f6:	2300      	movs	r3, #0
 80028f8:	220a      	movs	r2, #10
 80028fa:	4658      	mov	r0, fp
 80028fc:	f000 faf2 	bl	8002ee4 <__multadd>
 8002900:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002902:	4681      	mov	r9, r0
 8002904:	2b00      	cmp	r3, #0
 8002906:	f000 816c 	beq.w	8002be2 <_dtoa_r+0xb52>
 800290a:	2300      	movs	r3, #0
 800290c:	4629      	mov	r1, r5
 800290e:	220a      	movs	r2, #10
 8002910:	4658      	mov	r0, fp
 8002912:	f000 fae7 	bl	8002ee4 <__multadd>
 8002916:	9b08      	ldr	r3, [sp, #32]
 8002918:	2b00      	cmp	r3, #0
 800291a:	4605      	mov	r5, r0
 800291c:	dc61      	bgt.n	80029e2 <_dtoa_r+0x952>
 800291e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002920:	2b02      	cmp	r3, #2
 8002922:	dc3b      	bgt.n	800299c <_dtoa_r+0x90c>
 8002924:	e05d      	b.n	80029e2 <_dtoa_r+0x952>
 8002926:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002928:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800292c:	e746      	b.n	80027bc <_dtoa_r+0x72c>
 800292e:	9b07      	ldr	r3, [sp, #28]
 8002930:	1e5c      	subs	r4, r3, #1
 8002932:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002934:	42a3      	cmp	r3, r4
 8002936:	bfbf      	itttt	lt
 8002938:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 800293a:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 800293c:	940a      	strlt	r4, [sp, #40]	@ 0x28
 800293e:	1ae3      	sublt	r3, r4, r3
 8002940:	bfb4      	ite	lt
 8002942:	18d2      	addlt	r2, r2, r3
 8002944:	1b1c      	subge	r4, r3, r4
 8002946:	9b07      	ldr	r3, [sp, #28]
 8002948:	bfbc      	itt	lt
 800294a:	920e      	strlt	r2, [sp, #56]	@ 0x38
 800294c:	2400      	movlt	r4, #0
 800294e:	2b00      	cmp	r3, #0
 8002950:	bfb5      	itete	lt
 8002952:	eba8 0603 	sublt.w	r6, r8, r3
 8002956:	9b07      	ldrge	r3, [sp, #28]
 8002958:	2300      	movlt	r3, #0
 800295a:	4646      	movge	r6, r8
 800295c:	e730      	b.n	80027c0 <_dtoa_r+0x730>
 800295e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002960:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8002962:	4646      	mov	r6, r8
 8002964:	e735      	b.n	80027d2 <_dtoa_r+0x742>
 8002966:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002968:	e75c      	b.n	8002824 <_dtoa_r+0x794>
 800296a:	2300      	movs	r3, #0
 800296c:	e788      	b.n	8002880 <_dtoa_r+0x7f0>
 800296e:	9b02      	ldr	r3, [sp, #8]
 8002970:	e786      	b.n	8002880 <_dtoa_r+0x7f0>
 8002972:	2300      	movs	r3, #0
 8002974:	930a      	str	r3, [sp, #40]	@ 0x28
 8002976:	e788      	b.n	800288a <_dtoa_r+0x7fa>
 8002978:	d09f      	beq.n	80028ba <_dtoa_r+0x82a>
 800297a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800297c:	331c      	adds	r3, #28
 800297e:	441a      	add	r2, r3
 8002980:	4498      	add	r8, r3
 8002982:	441e      	add	r6, r3
 8002984:	9209      	str	r2, [sp, #36]	@ 0x24
 8002986:	e798      	b.n	80028ba <_dtoa_r+0x82a>
 8002988:	4603      	mov	r3, r0
 800298a:	e7f6      	b.n	800297a <_dtoa_r+0x8ea>
 800298c:	9b07      	ldr	r3, [sp, #28]
 800298e:	9704      	str	r7, [sp, #16]
 8002990:	2b00      	cmp	r3, #0
 8002992:	dc20      	bgt.n	80029d6 <_dtoa_r+0x946>
 8002994:	9308      	str	r3, [sp, #32]
 8002996:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002998:	2b02      	cmp	r3, #2
 800299a:	dd1e      	ble.n	80029da <_dtoa_r+0x94a>
 800299c:	9b08      	ldr	r3, [sp, #32]
 800299e:	2b00      	cmp	r3, #0
 80029a0:	f47f aebc 	bne.w	800271c <_dtoa_r+0x68c>
 80029a4:	4621      	mov	r1, r4
 80029a6:	2205      	movs	r2, #5
 80029a8:	4658      	mov	r0, fp
 80029aa:	f000 fa9b 	bl	8002ee4 <__multadd>
 80029ae:	4601      	mov	r1, r0
 80029b0:	4604      	mov	r4, r0
 80029b2:	4648      	mov	r0, r9
 80029b4:	f000 fcae 	bl	8003314 <__mcmp>
 80029b8:	2800      	cmp	r0, #0
 80029ba:	f77f aeaf 	ble.w	800271c <_dtoa_r+0x68c>
 80029be:	4656      	mov	r6, sl
 80029c0:	2331      	movs	r3, #49	@ 0x31
 80029c2:	f806 3b01 	strb.w	r3, [r6], #1
 80029c6:	9b04      	ldr	r3, [sp, #16]
 80029c8:	3301      	adds	r3, #1
 80029ca:	9304      	str	r3, [sp, #16]
 80029cc:	e6aa      	b.n	8002724 <_dtoa_r+0x694>
 80029ce:	9c07      	ldr	r4, [sp, #28]
 80029d0:	9704      	str	r7, [sp, #16]
 80029d2:	4625      	mov	r5, r4
 80029d4:	e7f3      	b.n	80029be <_dtoa_r+0x92e>
 80029d6:	9b07      	ldr	r3, [sp, #28]
 80029d8:	9308      	str	r3, [sp, #32]
 80029da:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80029dc:	2b00      	cmp	r3, #0
 80029de:	f000 8104 	beq.w	8002bea <_dtoa_r+0xb5a>
 80029e2:	2e00      	cmp	r6, #0
 80029e4:	dd05      	ble.n	80029f2 <_dtoa_r+0x962>
 80029e6:	4629      	mov	r1, r5
 80029e8:	4632      	mov	r2, r6
 80029ea:	4658      	mov	r0, fp
 80029ec:	f000 fc26 	bl	800323c <__lshift>
 80029f0:	4605      	mov	r5, r0
 80029f2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80029f4:	2b00      	cmp	r3, #0
 80029f6:	d05a      	beq.n	8002aae <_dtoa_r+0xa1e>
 80029f8:	6869      	ldr	r1, [r5, #4]
 80029fa:	4658      	mov	r0, fp
 80029fc:	f000 fa10 	bl	8002e20 <_Balloc>
 8002a00:	4606      	mov	r6, r0
 8002a02:	b928      	cbnz	r0, 8002a10 <_dtoa_r+0x980>
 8002a04:	4b84      	ldr	r3, [pc, #528]	@ (8002c18 <_dtoa_r+0xb88>)
 8002a06:	4602      	mov	r2, r0
 8002a08:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8002a0c:	f7ff bb54 	b.w	80020b8 <_dtoa_r+0x28>
 8002a10:	692a      	ldr	r2, [r5, #16]
 8002a12:	3202      	adds	r2, #2
 8002a14:	0092      	lsls	r2, r2, #2
 8002a16:	f105 010c 	add.w	r1, r5, #12
 8002a1a:	300c      	adds	r0, #12
 8002a1c:	f000 fe38 	bl	8003690 <memcpy>
 8002a20:	2201      	movs	r2, #1
 8002a22:	4631      	mov	r1, r6
 8002a24:	4658      	mov	r0, fp
 8002a26:	f000 fc09 	bl	800323c <__lshift>
 8002a2a:	f10a 0301 	add.w	r3, sl, #1
 8002a2e:	9307      	str	r3, [sp, #28]
 8002a30:	9b08      	ldr	r3, [sp, #32]
 8002a32:	4453      	add	r3, sl
 8002a34:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002a36:	9b02      	ldr	r3, [sp, #8]
 8002a38:	f003 0301 	and.w	r3, r3, #1
 8002a3c:	462f      	mov	r7, r5
 8002a3e:	930a      	str	r3, [sp, #40]	@ 0x28
 8002a40:	4605      	mov	r5, r0
 8002a42:	9b07      	ldr	r3, [sp, #28]
 8002a44:	4621      	mov	r1, r4
 8002a46:	3b01      	subs	r3, #1
 8002a48:	4648      	mov	r0, r9
 8002a4a:	9302      	str	r3, [sp, #8]
 8002a4c:	f7ff fa97 	bl	8001f7e <quorem>
 8002a50:	4639      	mov	r1, r7
 8002a52:	9008      	str	r0, [sp, #32]
 8002a54:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8002a58:	4648      	mov	r0, r9
 8002a5a:	f000 fc5b 	bl	8003314 <__mcmp>
 8002a5e:	462a      	mov	r2, r5
 8002a60:	9009      	str	r0, [sp, #36]	@ 0x24
 8002a62:	4621      	mov	r1, r4
 8002a64:	4658      	mov	r0, fp
 8002a66:	f000 fc71 	bl	800334c <__mdiff>
 8002a6a:	68c2      	ldr	r2, [r0, #12]
 8002a6c:	4606      	mov	r6, r0
 8002a6e:	bb02      	cbnz	r2, 8002ab2 <_dtoa_r+0xa22>
 8002a70:	4601      	mov	r1, r0
 8002a72:	4648      	mov	r0, r9
 8002a74:	f000 fc4e 	bl	8003314 <__mcmp>
 8002a78:	4602      	mov	r2, r0
 8002a7a:	4631      	mov	r1, r6
 8002a7c:	4658      	mov	r0, fp
 8002a7e:	920c      	str	r2, [sp, #48]	@ 0x30
 8002a80:	f000 fa0e 	bl	8002ea0 <_Bfree>
 8002a84:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002a86:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8002a88:	9e07      	ldr	r6, [sp, #28]
 8002a8a:	ea43 0102 	orr.w	r1, r3, r2
 8002a8e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002a90:	4319      	orrs	r1, r3
 8002a92:	d110      	bne.n	8002ab6 <_dtoa_r+0xa26>
 8002a94:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002a98:	d029      	beq.n	8002aee <_dtoa_r+0xa5e>
 8002a9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002a9c:	2b00      	cmp	r3, #0
 8002a9e:	dd02      	ble.n	8002aa6 <_dtoa_r+0xa16>
 8002aa0:	9b08      	ldr	r3, [sp, #32]
 8002aa2:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8002aa6:	9b02      	ldr	r3, [sp, #8]
 8002aa8:	f883 8000 	strb.w	r8, [r3]
 8002aac:	e63b      	b.n	8002726 <_dtoa_r+0x696>
 8002aae:	4628      	mov	r0, r5
 8002ab0:	e7bb      	b.n	8002a2a <_dtoa_r+0x99a>
 8002ab2:	2201      	movs	r2, #1
 8002ab4:	e7e1      	b.n	8002a7a <_dtoa_r+0x9ea>
 8002ab6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ab8:	2b00      	cmp	r3, #0
 8002aba:	db04      	blt.n	8002ac6 <_dtoa_r+0xa36>
 8002abc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8002abe:	430b      	orrs	r3, r1
 8002ac0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8002ac2:	430b      	orrs	r3, r1
 8002ac4:	d120      	bne.n	8002b08 <_dtoa_r+0xa78>
 8002ac6:	2a00      	cmp	r2, #0
 8002ac8:	dded      	ble.n	8002aa6 <_dtoa_r+0xa16>
 8002aca:	4649      	mov	r1, r9
 8002acc:	2201      	movs	r2, #1
 8002ace:	4658      	mov	r0, fp
 8002ad0:	f000 fbb4 	bl	800323c <__lshift>
 8002ad4:	4621      	mov	r1, r4
 8002ad6:	4681      	mov	r9, r0
 8002ad8:	f000 fc1c 	bl	8003314 <__mcmp>
 8002adc:	2800      	cmp	r0, #0
 8002ade:	dc03      	bgt.n	8002ae8 <_dtoa_r+0xa58>
 8002ae0:	d1e1      	bne.n	8002aa6 <_dtoa_r+0xa16>
 8002ae2:	f018 0f01 	tst.w	r8, #1
 8002ae6:	d0de      	beq.n	8002aa6 <_dtoa_r+0xa16>
 8002ae8:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002aec:	d1d8      	bne.n	8002aa0 <_dtoa_r+0xa10>
 8002aee:	9a02      	ldr	r2, [sp, #8]
 8002af0:	2339      	movs	r3, #57	@ 0x39
 8002af2:	7013      	strb	r3, [r2, #0]
 8002af4:	4633      	mov	r3, r6
 8002af6:	461e      	mov	r6, r3
 8002af8:	3b01      	subs	r3, #1
 8002afa:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8002afe:	2a39      	cmp	r2, #57	@ 0x39
 8002b00:	d052      	beq.n	8002ba8 <_dtoa_r+0xb18>
 8002b02:	3201      	adds	r2, #1
 8002b04:	701a      	strb	r2, [r3, #0]
 8002b06:	e60e      	b.n	8002726 <_dtoa_r+0x696>
 8002b08:	2a00      	cmp	r2, #0
 8002b0a:	dd07      	ble.n	8002b1c <_dtoa_r+0xa8c>
 8002b0c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002b10:	d0ed      	beq.n	8002aee <_dtoa_r+0xa5e>
 8002b12:	9a02      	ldr	r2, [sp, #8]
 8002b14:	f108 0301 	add.w	r3, r8, #1
 8002b18:	7013      	strb	r3, [r2, #0]
 8002b1a:	e604      	b.n	8002726 <_dtoa_r+0x696>
 8002b1c:	9b07      	ldr	r3, [sp, #28]
 8002b1e:	9a07      	ldr	r2, [sp, #28]
 8002b20:	f803 8c01 	strb.w	r8, [r3, #-1]
 8002b24:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002b26:	4293      	cmp	r3, r2
 8002b28:	d028      	beq.n	8002b7c <_dtoa_r+0xaec>
 8002b2a:	4649      	mov	r1, r9
 8002b2c:	2300      	movs	r3, #0
 8002b2e:	220a      	movs	r2, #10
 8002b30:	4658      	mov	r0, fp
 8002b32:	f000 f9d7 	bl	8002ee4 <__multadd>
 8002b36:	42af      	cmp	r7, r5
 8002b38:	4681      	mov	r9, r0
 8002b3a:	f04f 0300 	mov.w	r3, #0
 8002b3e:	f04f 020a 	mov.w	r2, #10
 8002b42:	4639      	mov	r1, r7
 8002b44:	4658      	mov	r0, fp
 8002b46:	d107      	bne.n	8002b58 <_dtoa_r+0xac8>
 8002b48:	f000 f9cc 	bl	8002ee4 <__multadd>
 8002b4c:	4607      	mov	r7, r0
 8002b4e:	4605      	mov	r5, r0
 8002b50:	9b07      	ldr	r3, [sp, #28]
 8002b52:	3301      	adds	r3, #1
 8002b54:	9307      	str	r3, [sp, #28]
 8002b56:	e774      	b.n	8002a42 <_dtoa_r+0x9b2>
 8002b58:	f000 f9c4 	bl	8002ee4 <__multadd>
 8002b5c:	4629      	mov	r1, r5
 8002b5e:	4607      	mov	r7, r0
 8002b60:	2300      	movs	r3, #0
 8002b62:	220a      	movs	r2, #10
 8002b64:	4658      	mov	r0, fp
 8002b66:	f000 f9bd 	bl	8002ee4 <__multadd>
 8002b6a:	4605      	mov	r5, r0
 8002b6c:	e7f0      	b.n	8002b50 <_dtoa_r+0xac0>
 8002b6e:	9b08      	ldr	r3, [sp, #32]
 8002b70:	2b00      	cmp	r3, #0
 8002b72:	bfcc      	ite	gt
 8002b74:	461e      	movgt	r6, r3
 8002b76:	2601      	movle	r6, #1
 8002b78:	4456      	add	r6, sl
 8002b7a:	2700      	movs	r7, #0
 8002b7c:	4649      	mov	r1, r9
 8002b7e:	2201      	movs	r2, #1
 8002b80:	4658      	mov	r0, fp
 8002b82:	f000 fb5b 	bl	800323c <__lshift>
 8002b86:	4621      	mov	r1, r4
 8002b88:	4681      	mov	r9, r0
 8002b8a:	f000 fbc3 	bl	8003314 <__mcmp>
 8002b8e:	2800      	cmp	r0, #0
 8002b90:	dcb0      	bgt.n	8002af4 <_dtoa_r+0xa64>
 8002b92:	d102      	bne.n	8002b9a <_dtoa_r+0xb0a>
 8002b94:	f018 0f01 	tst.w	r8, #1
 8002b98:	d1ac      	bne.n	8002af4 <_dtoa_r+0xa64>
 8002b9a:	4633      	mov	r3, r6
 8002b9c:	461e      	mov	r6, r3
 8002b9e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002ba2:	2a30      	cmp	r2, #48	@ 0x30
 8002ba4:	d0fa      	beq.n	8002b9c <_dtoa_r+0xb0c>
 8002ba6:	e5be      	b.n	8002726 <_dtoa_r+0x696>
 8002ba8:	459a      	cmp	sl, r3
 8002baa:	d1a4      	bne.n	8002af6 <_dtoa_r+0xa66>
 8002bac:	9b04      	ldr	r3, [sp, #16]
 8002bae:	3301      	adds	r3, #1
 8002bb0:	9304      	str	r3, [sp, #16]
 8002bb2:	2331      	movs	r3, #49	@ 0x31
 8002bb4:	f88a 3000 	strb.w	r3, [sl]
 8002bb8:	e5b5      	b.n	8002726 <_dtoa_r+0x696>
 8002bba:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002bbc:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8002c1c <_dtoa_r+0xb8c>
 8002bc0:	b11b      	cbz	r3, 8002bca <_dtoa_r+0xb3a>
 8002bc2:	f10a 0308 	add.w	r3, sl, #8
 8002bc6:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8002bc8:	6013      	str	r3, [r2, #0]
 8002bca:	4650      	mov	r0, sl
 8002bcc:	b017      	add	sp, #92	@ 0x5c
 8002bce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002bd2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002bd4:	2b01      	cmp	r3, #1
 8002bd6:	f77f ae3d 	ble.w	8002854 <_dtoa_r+0x7c4>
 8002bda:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002bdc:	930a      	str	r3, [sp, #40]	@ 0x28
 8002bde:	2001      	movs	r0, #1
 8002be0:	e65b      	b.n	800289a <_dtoa_r+0x80a>
 8002be2:	9b08      	ldr	r3, [sp, #32]
 8002be4:	2b00      	cmp	r3, #0
 8002be6:	f77f aed6 	ble.w	8002996 <_dtoa_r+0x906>
 8002bea:	4656      	mov	r6, sl
 8002bec:	4621      	mov	r1, r4
 8002bee:	4648      	mov	r0, r9
 8002bf0:	f7ff f9c5 	bl	8001f7e <quorem>
 8002bf4:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8002bf8:	f806 8b01 	strb.w	r8, [r6], #1
 8002bfc:	9b08      	ldr	r3, [sp, #32]
 8002bfe:	eba6 020a 	sub.w	r2, r6, sl
 8002c02:	4293      	cmp	r3, r2
 8002c04:	ddb3      	ble.n	8002b6e <_dtoa_r+0xade>
 8002c06:	4649      	mov	r1, r9
 8002c08:	2300      	movs	r3, #0
 8002c0a:	220a      	movs	r2, #10
 8002c0c:	4658      	mov	r0, fp
 8002c0e:	f000 f969 	bl	8002ee4 <__multadd>
 8002c12:	4681      	mov	r9, r0
 8002c14:	e7ea      	b.n	8002bec <_dtoa_r+0xb5c>
 8002c16:	bf00      	nop
 8002c18:	08003de1 	.word	0x08003de1
 8002c1c:	08003d65 	.word	0x08003d65

08002c20 <_free_r>:
 8002c20:	b538      	push	{r3, r4, r5, lr}
 8002c22:	4605      	mov	r5, r0
 8002c24:	2900      	cmp	r1, #0
 8002c26:	d041      	beq.n	8002cac <_free_r+0x8c>
 8002c28:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002c2c:	1f0c      	subs	r4, r1, #4
 8002c2e:	2b00      	cmp	r3, #0
 8002c30:	bfb8      	it	lt
 8002c32:	18e4      	addlt	r4, r4, r3
 8002c34:	f000 f8e8 	bl	8002e08 <__malloc_lock>
 8002c38:	4a1d      	ldr	r2, [pc, #116]	@ (8002cb0 <_free_r+0x90>)
 8002c3a:	6813      	ldr	r3, [r2, #0]
 8002c3c:	b933      	cbnz	r3, 8002c4c <_free_r+0x2c>
 8002c3e:	6063      	str	r3, [r4, #4]
 8002c40:	6014      	str	r4, [r2, #0]
 8002c42:	4628      	mov	r0, r5
 8002c44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002c48:	f000 b8e4 	b.w	8002e14 <__malloc_unlock>
 8002c4c:	42a3      	cmp	r3, r4
 8002c4e:	d908      	bls.n	8002c62 <_free_r+0x42>
 8002c50:	6820      	ldr	r0, [r4, #0]
 8002c52:	1821      	adds	r1, r4, r0
 8002c54:	428b      	cmp	r3, r1
 8002c56:	bf01      	itttt	eq
 8002c58:	6819      	ldreq	r1, [r3, #0]
 8002c5a:	685b      	ldreq	r3, [r3, #4]
 8002c5c:	1809      	addeq	r1, r1, r0
 8002c5e:	6021      	streq	r1, [r4, #0]
 8002c60:	e7ed      	b.n	8002c3e <_free_r+0x1e>
 8002c62:	461a      	mov	r2, r3
 8002c64:	685b      	ldr	r3, [r3, #4]
 8002c66:	b10b      	cbz	r3, 8002c6c <_free_r+0x4c>
 8002c68:	42a3      	cmp	r3, r4
 8002c6a:	d9fa      	bls.n	8002c62 <_free_r+0x42>
 8002c6c:	6811      	ldr	r1, [r2, #0]
 8002c6e:	1850      	adds	r0, r2, r1
 8002c70:	42a0      	cmp	r0, r4
 8002c72:	d10b      	bne.n	8002c8c <_free_r+0x6c>
 8002c74:	6820      	ldr	r0, [r4, #0]
 8002c76:	4401      	add	r1, r0
 8002c78:	1850      	adds	r0, r2, r1
 8002c7a:	4283      	cmp	r3, r0
 8002c7c:	6011      	str	r1, [r2, #0]
 8002c7e:	d1e0      	bne.n	8002c42 <_free_r+0x22>
 8002c80:	6818      	ldr	r0, [r3, #0]
 8002c82:	685b      	ldr	r3, [r3, #4]
 8002c84:	6053      	str	r3, [r2, #4]
 8002c86:	4408      	add	r0, r1
 8002c88:	6010      	str	r0, [r2, #0]
 8002c8a:	e7da      	b.n	8002c42 <_free_r+0x22>
 8002c8c:	d902      	bls.n	8002c94 <_free_r+0x74>
 8002c8e:	230c      	movs	r3, #12
 8002c90:	602b      	str	r3, [r5, #0]
 8002c92:	e7d6      	b.n	8002c42 <_free_r+0x22>
 8002c94:	6820      	ldr	r0, [r4, #0]
 8002c96:	1821      	adds	r1, r4, r0
 8002c98:	428b      	cmp	r3, r1
 8002c9a:	bf04      	itt	eq
 8002c9c:	6819      	ldreq	r1, [r3, #0]
 8002c9e:	685b      	ldreq	r3, [r3, #4]
 8002ca0:	6063      	str	r3, [r4, #4]
 8002ca2:	bf04      	itt	eq
 8002ca4:	1809      	addeq	r1, r1, r0
 8002ca6:	6021      	streq	r1, [r4, #0]
 8002ca8:	6054      	str	r4, [r2, #4]
 8002caa:	e7ca      	b.n	8002c42 <_free_r+0x22>
 8002cac:	bd38      	pop	{r3, r4, r5, pc}
 8002cae:	bf00      	nop
 8002cb0:	20000348 	.word	0x20000348

08002cb4 <malloc>:
 8002cb4:	4b02      	ldr	r3, [pc, #8]	@ (8002cc0 <malloc+0xc>)
 8002cb6:	4601      	mov	r1, r0
 8002cb8:	6818      	ldr	r0, [r3, #0]
 8002cba:	f000 b825 	b.w	8002d08 <_malloc_r>
 8002cbe:	bf00      	nop
 8002cc0:	20000024 	.word	0x20000024

08002cc4 <sbrk_aligned>:
 8002cc4:	b570      	push	{r4, r5, r6, lr}
 8002cc6:	4e0f      	ldr	r6, [pc, #60]	@ (8002d04 <sbrk_aligned+0x40>)
 8002cc8:	460c      	mov	r4, r1
 8002cca:	6831      	ldr	r1, [r6, #0]
 8002ccc:	4605      	mov	r5, r0
 8002cce:	b911      	cbnz	r1, 8002cd6 <sbrk_aligned+0x12>
 8002cd0:	f000 fcce 	bl	8003670 <_sbrk_r>
 8002cd4:	6030      	str	r0, [r6, #0]
 8002cd6:	4621      	mov	r1, r4
 8002cd8:	4628      	mov	r0, r5
 8002cda:	f000 fcc9 	bl	8003670 <_sbrk_r>
 8002cde:	1c43      	adds	r3, r0, #1
 8002ce0:	d103      	bne.n	8002cea <sbrk_aligned+0x26>
 8002ce2:	f04f 34ff 	mov.w	r4, #4294967295
 8002ce6:	4620      	mov	r0, r4
 8002ce8:	bd70      	pop	{r4, r5, r6, pc}
 8002cea:	1cc4      	adds	r4, r0, #3
 8002cec:	f024 0403 	bic.w	r4, r4, #3
 8002cf0:	42a0      	cmp	r0, r4
 8002cf2:	d0f8      	beq.n	8002ce6 <sbrk_aligned+0x22>
 8002cf4:	1a21      	subs	r1, r4, r0
 8002cf6:	4628      	mov	r0, r5
 8002cf8:	f000 fcba 	bl	8003670 <_sbrk_r>
 8002cfc:	3001      	adds	r0, #1
 8002cfe:	d1f2      	bne.n	8002ce6 <sbrk_aligned+0x22>
 8002d00:	e7ef      	b.n	8002ce2 <sbrk_aligned+0x1e>
 8002d02:	bf00      	nop
 8002d04:	20000344 	.word	0x20000344

08002d08 <_malloc_r>:
 8002d08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002d0c:	1ccd      	adds	r5, r1, #3
 8002d0e:	f025 0503 	bic.w	r5, r5, #3
 8002d12:	3508      	adds	r5, #8
 8002d14:	2d0c      	cmp	r5, #12
 8002d16:	bf38      	it	cc
 8002d18:	250c      	movcc	r5, #12
 8002d1a:	2d00      	cmp	r5, #0
 8002d1c:	4606      	mov	r6, r0
 8002d1e:	db01      	blt.n	8002d24 <_malloc_r+0x1c>
 8002d20:	42a9      	cmp	r1, r5
 8002d22:	d904      	bls.n	8002d2e <_malloc_r+0x26>
 8002d24:	230c      	movs	r3, #12
 8002d26:	6033      	str	r3, [r6, #0]
 8002d28:	2000      	movs	r0, #0
 8002d2a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002d2e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8002e04 <_malloc_r+0xfc>
 8002d32:	f000 f869 	bl	8002e08 <__malloc_lock>
 8002d36:	f8d8 3000 	ldr.w	r3, [r8]
 8002d3a:	461c      	mov	r4, r3
 8002d3c:	bb44      	cbnz	r4, 8002d90 <_malloc_r+0x88>
 8002d3e:	4629      	mov	r1, r5
 8002d40:	4630      	mov	r0, r6
 8002d42:	f7ff ffbf 	bl	8002cc4 <sbrk_aligned>
 8002d46:	1c43      	adds	r3, r0, #1
 8002d48:	4604      	mov	r4, r0
 8002d4a:	d158      	bne.n	8002dfe <_malloc_r+0xf6>
 8002d4c:	f8d8 4000 	ldr.w	r4, [r8]
 8002d50:	4627      	mov	r7, r4
 8002d52:	2f00      	cmp	r7, #0
 8002d54:	d143      	bne.n	8002dde <_malloc_r+0xd6>
 8002d56:	2c00      	cmp	r4, #0
 8002d58:	d04b      	beq.n	8002df2 <_malloc_r+0xea>
 8002d5a:	6823      	ldr	r3, [r4, #0]
 8002d5c:	4639      	mov	r1, r7
 8002d5e:	4630      	mov	r0, r6
 8002d60:	eb04 0903 	add.w	r9, r4, r3
 8002d64:	f000 fc84 	bl	8003670 <_sbrk_r>
 8002d68:	4581      	cmp	r9, r0
 8002d6a:	d142      	bne.n	8002df2 <_malloc_r+0xea>
 8002d6c:	6821      	ldr	r1, [r4, #0]
 8002d6e:	1a6d      	subs	r5, r5, r1
 8002d70:	4629      	mov	r1, r5
 8002d72:	4630      	mov	r0, r6
 8002d74:	f7ff ffa6 	bl	8002cc4 <sbrk_aligned>
 8002d78:	3001      	adds	r0, #1
 8002d7a:	d03a      	beq.n	8002df2 <_malloc_r+0xea>
 8002d7c:	6823      	ldr	r3, [r4, #0]
 8002d7e:	442b      	add	r3, r5
 8002d80:	6023      	str	r3, [r4, #0]
 8002d82:	f8d8 3000 	ldr.w	r3, [r8]
 8002d86:	685a      	ldr	r2, [r3, #4]
 8002d88:	bb62      	cbnz	r2, 8002de4 <_malloc_r+0xdc>
 8002d8a:	f8c8 7000 	str.w	r7, [r8]
 8002d8e:	e00f      	b.n	8002db0 <_malloc_r+0xa8>
 8002d90:	6822      	ldr	r2, [r4, #0]
 8002d92:	1b52      	subs	r2, r2, r5
 8002d94:	d420      	bmi.n	8002dd8 <_malloc_r+0xd0>
 8002d96:	2a0b      	cmp	r2, #11
 8002d98:	d917      	bls.n	8002dca <_malloc_r+0xc2>
 8002d9a:	1961      	adds	r1, r4, r5
 8002d9c:	42a3      	cmp	r3, r4
 8002d9e:	6025      	str	r5, [r4, #0]
 8002da0:	bf18      	it	ne
 8002da2:	6059      	strne	r1, [r3, #4]
 8002da4:	6863      	ldr	r3, [r4, #4]
 8002da6:	bf08      	it	eq
 8002da8:	f8c8 1000 	streq.w	r1, [r8]
 8002dac:	5162      	str	r2, [r4, r5]
 8002dae:	604b      	str	r3, [r1, #4]
 8002db0:	4630      	mov	r0, r6
 8002db2:	f000 f82f 	bl	8002e14 <__malloc_unlock>
 8002db6:	f104 000b 	add.w	r0, r4, #11
 8002dba:	1d23      	adds	r3, r4, #4
 8002dbc:	f020 0007 	bic.w	r0, r0, #7
 8002dc0:	1ac2      	subs	r2, r0, r3
 8002dc2:	bf1c      	itt	ne
 8002dc4:	1a1b      	subne	r3, r3, r0
 8002dc6:	50a3      	strne	r3, [r4, r2]
 8002dc8:	e7af      	b.n	8002d2a <_malloc_r+0x22>
 8002dca:	6862      	ldr	r2, [r4, #4]
 8002dcc:	42a3      	cmp	r3, r4
 8002dce:	bf0c      	ite	eq
 8002dd0:	f8c8 2000 	streq.w	r2, [r8]
 8002dd4:	605a      	strne	r2, [r3, #4]
 8002dd6:	e7eb      	b.n	8002db0 <_malloc_r+0xa8>
 8002dd8:	4623      	mov	r3, r4
 8002dda:	6864      	ldr	r4, [r4, #4]
 8002ddc:	e7ae      	b.n	8002d3c <_malloc_r+0x34>
 8002dde:	463c      	mov	r4, r7
 8002de0:	687f      	ldr	r7, [r7, #4]
 8002de2:	e7b6      	b.n	8002d52 <_malloc_r+0x4a>
 8002de4:	461a      	mov	r2, r3
 8002de6:	685b      	ldr	r3, [r3, #4]
 8002de8:	42a3      	cmp	r3, r4
 8002dea:	d1fb      	bne.n	8002de4 <_malloc_r+0xdc>
 8002dec:	2300      	movs	r3, #0
 8002dee:	6053      	str	r3, [r2, #4]
 8002df0:	e7de      	b.n	8002db0 <_malloc_r+0xa8>
 8002df2:	230c      	movs	r3, #12
 8002df4:	6033      	str	r3, [r6, #0]
 8002df6:	4630      	mov	r0, r6
 8002df8:	f000 f80c 	bl	8002e14 <__malloc_unlock>
 8002dfc:	e794      	b.n	8002d28 <_malloc_r+0x20>
 8002dfe:	6005      	str	r5, [r0, #0]
 8002e00:	e7d6      	b.n	8002db0 <_malloc_r+0xa8>
 8002e02:	bf00      	nop
 8002e04:	20000348 	.word	0x20000348

08002e08 <__malloc_lock>:
 8002e08:	4801      	ldr	r0, [pc, #4]	@ (8002e10 <__malloc_lock+0x8>)
 8002e0a:	f7ff b8b6 	b.w	8001f7a <__retarget_lock_acquire_recursive>
 8002e0e:	bf00      	nop
 8002e10:	20000340 	.word	0x20000340

08002e14 <__malloc_unlock>:
 8002e14:	4801      	ldr	r0, [pc, #4]	@ (8002e1c <__malloc_unlock+0x8>)
 8002e16:	f7ff b8b1 	b.w	8001f7c <__retarget_lock_release_recursive>
 8002e1a:	bf00      	nop
 8002e1c:	20000340 	.word	0x20000340

08002e20 <_Balloc>:
 8002e20:	b570      	push	{r4, r5, r6, lr}
 8002e22:	69c6      	ldr	r6, [r0, #28]
 8002e24:	4604      	mov	r4, r0
 8002e26:	460d      	mov	r5, r1
 8002e28:	b976      	cbnz	r6, 8002e48 <_Balloc+0x28>
 8002e2a:	2010      	movs	r0, #16
 8002e2c:	f7ff ff42 	bl	8002cb4 <malloc>
 8002e30:	4602      	mov	r2, r0
 8002e32:	61e0      	str	r0, [r4, #28]
 8002e34:	b920      	cbnz	r0, 8002e40 <_Balloc+0x20>
 8002e36:	4b18      	ldr	r3, [pc, #96]	@ (8002e98 <_Balloc+0x78>)
 8002e38:	4818      	ldr	r0, [pc, #96]	@ (8002e9c <_Balloc+0x7c>)
 8002e3a:	216b      	movs	r1, #107	@ 0x6b
 8002e3c:	f000 fc36 	bl	80036ac <__assert_func>
 8002e40:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8002e44:	6006      	str	r6, [r0, #0]
 8002e46:	60c6      	str	r6, [r0, #12]
 8002e48:	69e6      	ldr	r6, [r4, #28]
 8002e4a:	68f3      	ldr	r3, [r6, #12]
 8002e4c:	b183      	cbz	r3, 8002e70 <_Balloc+0x50>
 8002e4e:	69e3      	ldr	r3, [r4, #28]
 8002e50:	68db      	ldr	r3, [r3, #12]
 8002e52:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8002e56:	b9b8      	cbnz	r0, 8002e88 <_Balloc+0x68>
 8002e58:	2101      	movs	r1, #1
 8002e5a:	fa01 f605 	lsl.w	r6, r1, r5
 8002e5e:	1d72      	adds	r2, r6, #5
 8002e60:	0092      	lsls	r2, r2, #2
 8002e62:	4620      	mov	r0, r4
 8002e64:	f000 fc40 	bl	80036e8 <_calloc_r>
 8002e68:	b160      	cbz	r0, 8002e84 <_Balloc+0x64>
 8002e6a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8002e6e:	e00e      	b.n	8002e8e <_Balloc+0x6e>
 8002e70:	2221      	movs	r2, #33	@ 0x21
 8002e72:	2104      	movs	r1, #4
 8002e74:	4620      	mov	r0, r4
 8002e76:	f000 fc37 	bl	80036e8 <_calloc_r>
 8002e7a:	69e3      	ldr	r3, [r4, #28]
 8002e7c:	60f0      	str	r0, [r6, #12]
 8002e7e:	68db      	ldr	r3, [r3, #12]
 8002e80:	2b00      	cmp	r3, #0
 8002e82:	d1e4      	bne.n	8002e4e <_Balloc+0x2e>
 8002e84:	2000      	movs	r0, #0
 8002e86:	bd70      	pop	{r4, r5, r6, pc}
 8002e88:	6802      	ldr	r2, [r0, #0]
 8002e8a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8002e8e:	2300      	movs	r3, #0
 8002e90:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8002e94:	e7f7      	b.n	8002e86 <_Balloc+0x66>
 8002e96:	bf00      	nop
 8002e98:	08003d72 	.word	0x08003d72
 8002e9c:	08003df2 	.word	0x08003df2

08002ea0 <_Bfree>:
 8002ea0:	b570      	push	{r4, r5, r6, lr}
 8002ea2:	69c6      	ldr	r6, [r0, #28]
 8002ea4:	4605      	mov	r5, r0
 8002ea6:	460c      	mov	r4, r1
 8002ea8:	b976      	cbnz	r6, 8002ec8 <_Bfree+0x28>
 8002eaa:	2010      	movs	r0, #16
 8002eac:	f7ff ff02 	bl	8002cb4 <malloc>
 8002eb0:	4602      	mov	r2, r0
 8002eb2:	61e8      	str	r0, [r5, #28]
 8002eb4:	b920      	cbnz	r0, 8002ec0 <_Bfree+0x20>
 8002eb6:	4b09      	ldr	r3, [pc, #36]	@ (8002edc <_Bfree+0x3c>)
 8002eb8:	4809      	ldr	r0, [pc, #36]	@ (8002ee0 <_Bfree+0x40>)
 8002eba:	218f      	movs	r1, #143	@ 0x8f
 8002ebc:	f000 fbf6 	bl	80036ac <__assert_func>
 8002ec0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8002ec4:	6006      	str	r6, [r0, #0]
 8002ec6:	60c6      	str	r6, [r0, #12]
 8002ec8:	b13c      	cbz	r4, 8002eda <_Bfree+0x3a>
 8002eca:	69eb      	ldr	r3, [r5, #28]
 8002ecc:	6862      	ldr	r2, [r4, #4]
 8002ece:	68db      	ldr	r3, [r3, #12]
 8002ed0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8002ed4:	6021      	str	r1, [r4, #0]
 8002ed6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8002eda:	bd70      	pop	{r4, r5, r6, pc}
 8002edc:	08003d72 	.word	0x08003d72
 8002ee0:	08003df2 	.word	0x08003df2

08002ee4 <__multadd>:
 8002ee4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002ee8:	690d      	ldr	r5, [r1, #16]
 8002eea:	4607      	mov	r7, r0
 8002eec:	460c      	mov	r4, r1
 8002eee:	461e      	mov	r6, r3
 8002ef0:	f101 0c14 	add.w	ip, r1, #20
 8002ef4:	2000      	movs	r0, #0
 8002ef6:	f8dc 3000 	ldr.w	r3, [ip]
 8002efa:	b299      	uxth	r1, r3
 8002efc:	fb02 6101 	mla	r1, r2, r1, r6
 8002f00:	0c1e      	lsrs	r6, r3, #16
 8002f02:	0c0b      	lsrs	r3, r1, #16
 8002f04:	fb02 3306 	mla	r3, r2, r6, r3
 8002f08:	b289      	uxth	r1, r1
 8002f0a:	3001      	adds	r0, #1
 8002f0c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8002f10:	4285      	cmp	r5, r0
 8002f12:	f84c 1b04 	str.w	r1, [ip], #4
 8002f16:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8002f1a:	dcec      	bgt.n	8002ef6 <__multadd+0x12>
 8002f1c:	b30e      	cbz	r6, 8002f62 <__multadd+0x7e>
 8002f1e:	68a3      	ldr	r3, [r4, #8]
 8002f20:	42ab      	cmp	r3, r5
 8002f22:	dc19      	bgt.n	8002f58 <__multadd+0x74>
 8002f24:	6861      	ldr	r1, [r4, #4]
 8002f26:	4638      	mov	r0, r7
 8002f28:	3101      	adds	r1, #1
 8002f2a:	f7ff ff79 	bl	8002e20 <_Balloc>
 8002f2e:	4680      	mov	r8, r0
 8002f30:	b928      	cbnz	r0, 8002f3e <__multadd+0x5a>
 8002f32:	4602      	mov	r2, r0
 8002f34:	4b0c      	ldr	r3, [pc, #48]	@ (8002f68 <__multadd+0x84>)
 8002f36:	480d      	ldr	r0, [pc, #52]	@ (8002f6c <__multadd+0x88>)
 8002f38:	21ba      	movs	r1, #186	@ 0xba
 8002f3a:	f000 fbb7 	bl	80036ac <__assert_func>
 8002f3e:	6922      	ldr	r2, [r4, #16]
 8002f40:	3202      	adds	r2, #2
 8002f42:	f104 010c 	add.w	r1, r4, #12
 8002f46:	0092      	lsls	r2, r2, #2
 8002f48:	300c      	adds	r0, #12
 8002f4a:	f000 fba1 	bl	8003690 <memcpy>
 8002f4e:	4621      	mov	r1, r4
 8002f50:	4638      	mov	r0, r7
 8002f52:	f7ff ffa5 	bl	8002ea0 <_Bfree>
 8002f56:	4644      	mov	r4, r8
 8002f58:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8002f5c:	3501      	adds	r5, #1
 8002f5e:	615e      	str	r6, [r3, #20]
 8002f60:	6125      	str	r5, [r4, #16]
 8002f62:	4620      	mov	r0, r4
 8002f64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002f68:	08003de1 	.word	0x08003de1
 8002f6c:	08003df2 	.word	0x08003df2

08002f70 <__hi0bits>:
 8002f70:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8002f74:	4603      	mov	r3, r0
 8002f76:	bf36      	itet	cc
 8002f78:	0403      	lslcc	r3, r0, #16
 8002f7a:	2000      	movcs	r0, #0
 8002f7c:	2010      	movcc	r0, #16
 8002f7e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002f82:	bf3c      	itt	cc
 8002f84:	021b      	lslcc	r3, r3, #8
 8002f86:	3008      	addcc	r0, #8
 8002f88:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8002f8c:	bf3c      	itt	cc
 8002f8e:	011b      	lslcc	r3, r3, #4
 8002f90:	3004      	addcc	r0, #4
 8002f92:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002f96:	bf3c      	itt	cc
 8002f98:	009b      	lslcc	r3, r3, #2
 8002f9a:	3002      	addcc	r0, #2
 8002f9c:	2b00      	cmp	r3, #0
 8002f9e:	db05      	blt.n	8002fac <__hi0bits+0x3c>
 8002fa0:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8002fa4:	f100 0001 	add.w	r0, r0, #1
 8002fa8:	bf08      	it	eq
 8002faa:	2020      	moveq	r0, #32
 8002fac:	4770      	bx	lr

08002fae <__lo0bits>:
 8002fae:	6803      	ldr	r3, [r0, #0]
 8002fb0:	4602      	mov	r2, r0
 8002fb2:	f013 0007 	ands.w	r0, r3, #7
 8002fb6:	d00b      	beq.n	8002fd0 <__lo0bits+0x22>
 8002fb8:	07d9      	lsls	r1, r3, #31
 8002fba:	d421      	bmi.n	8003000 <__lo0bits+0x52>
 8002fbc:	0798      	lsls	r0, r3, #30
 8002fbe:	bf49      	itett	mi
 8002fc0:	085b      	lsrmi	r3, r3, #1
 8002fc2:	089b      	lsrpl	r3, r3, #2
 8002fc4:	2001      	movmi	r0, #1
 8002fc6:	6013      	strmi	r3, [r2, #0]
 8002fc8:	bf5c      	itt	pl
 8002fca:	6013      	strpl	r3, [r2, #0]
 8002fcc:	2002      	movpl	r0, #2
 8002fce:	4770      	bx	lr
 8002fd0:	b299      	uxth	r1, r3
 8002fd2:	b909      	cbnz	r1, 8002fd8 <__lo0bits+0x2a>
 8002fd4:	0c1b      	lsrs	r3, r3, #16
 8002fd6:	2010      	movs	r0, #16
 8002fd8:	b2d9      	uxtb	r1, r3
 8002fda:	b909      	cbnz	r1, 8002fe0 <__lo0bits+0x32>
 8002fdc:	3008      	adds	r0, #8
 8002fde:	0a1b      	lsrs	r3, r3, #8
 8002fe0:	0719      	lsls	r1, r3, #28
 8002fe2:	bf04      	itt	eq
 8002fe4:	091b      	lsreq	r3, r3, #4
 8002fe6:	3004      	addeq	r0, #4
 8002fe8:	0799      	lsls	r1, r3, #30
 8002fea:	bf04      	itt	eq
 8002fec:	089b      	lsreq	r3, r3, #2
 8002fee:	3002      	addeq	r0, #2
 8002ff0:	07d9      	lsls	r1, r3, #31
 8002ff2:	d403      	bmi.n	8002ffc <__lo0bits+0x4e>
 8002ff4:	085b      	lsrs	r3, r3, #1
 8002ff6:	f100 0001 	add.w	r0, r0, #1
 8002ffa:	d003      	beq.n	8003004 <__lo0bits+0x56>
 8002ffc:	6013      	str	r3, [r2, #0]
 8002ffe:	4770      	bx	lr
 8003000:	2000      	movs	r0, #0
 8003002:	4770      	bx	lr
 8003004:	2020      	movs	r0, #32
 8003006:	4770      	bx	lr

08003008 <__i2b>:
 8003008:	b510      	push	{r4, lr}
 800300a:	460c      	mov	r4, r1
 800300c:	2101      	movs	r1, #1
 800300e:	f7ff ff07 	bl	8002e20 <_Balloc>
 8003012:	4602      	mov	r2, r0
 8003014:	b928      	cbnz	r0, 8003022 <__i2b+0x1a>
 8003016:	4b05      	ldr	r3, [pc, #20]	@ (800302c <__i2b+0x24>)
 8003018:	4805      	ldr	r0, [pc, #20]	@ (8003030 <__i2b+0x28>)
 800301a:	f240 1145 	movw	r1, #325	@ 0x145
 800301e:	f000 fb45 	bl	80036ac <__assert_func>
 8003022:	2301      	movs	r3, #1
 8003024:	6144      	str	r4, [r0, #20]
 8003026:	6103      	str	r3, [r0, #16]
 8003028:	bd10      	pop	{r4, pc}
 800302a:	bf00      	nop
 800302c:	08003de1 	.word	0x08003de1
 8003030:	08003df2 	.word	0x08003df2

08003034 <__multiply>:
 8003034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003038:	4614      	mov	r4, r2
 800303a:	690a      	ldr	r2, [r1, #16]
 800303c:	6923      	ldr	r3, [r4, #16]
 800303e:	429a      	cmp	r2, r3
 8003040:	bfa8      	it	ge
 8003042:	4623      	movge	r3, r4
 8003044:	460f      	mov	r7, r1
 8003046:	bfa4      	itt	ge
 8003048:	460c      	movge	r4, r1
 800304a:	461f      	movge	r7, r3
 800304c:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8003050:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8003054:	68a3      	ldr	r3, [r4, #8]
 8003056:	6861      	ldr	r1, [r4, #4]
 8003058:	eb0a 0609 	add.w	r6, sl, r9
 800305c:	42b3      	cmp	r3, r6
 800305e:	b085      	sub	sp, #20
 8003060:	bfb8      	it	lt
 8003062:	3101      	addlt	r1, #1
 8003064:	f7ff fedc 	bl	8002e20 <_Balloc>
 8003068:	b930      	cbnz	r0, 8003078 <__multiply+0x44>
 800306a:	4602      	mov	r2, r0
 800306c:	4b44      	ldr	r3, [pc, #272]	@ (8003180 <__multiply+0x14c>)
 800306e:	4845      	ldr	r0, [pc, #276]	@ (8003184 <__multiply+0x150>)
 8003070:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003074:	f000 fb1a 	bl	80036ac <__assert_func>
 8003078:	f100 0514 	add.w	r5, r0, #20
 800307c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003080:	462b      	mov	r3, r5
 8003082:	2200      	movs	r2, #0
 8003084:	4543      	cmp	r3, r8
 8003086:	d321      	bcc.n	80030cc <__multiply+0x98>
 8003088:	f107 0114 	add.w	r1, r7, #20
 800308c:	f104 0214 	add.w	r2, r4, #20
 8003090:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8003094:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8003098:	9302      	str	r3, [sp, #8]
 800309a:	1b13      	subs	r3, r2, r4
 800309c:	3b15      	subs	r3, #21
 800309e:	f023 0303 	bic.w	r3, r3, #3
 80030a2:	3304      	adds	r3, #4
 80030a4:	f104 0715 	add.w	r7, r4, #21
 80030a8:	42ba      	cmp	r2, r7
 80030aa:	bf38      	it	cc
 80030ac:	2304      	movcc	r3, #4
 80030ae:	9301      	str	r3, [sp, #4]
 80030b0:	9b02      	ldr	r3, [sp, #8]
 80030b2:	9103      	str	r1, [sp, #12]
 80030b4:	428b      	cmp	r3, r1
 80030b6:	d80c      	bhi.n	80030d2 <__multiply+0x9e>
 80030b8:	2e00      	cmp	r6, #0
 80030ba:	dd03      	ble.n	80030c4 <__multiply+0x90>
 80030bc:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80030c0:	2b00      	cmp	r3, #0
 80030c2:	d05a      	beq.n	800317a <__multiply+0x146>
 80030c4:	6106      	str	r6, [r0, #16]
 80030c6:	b005      	add	sp, #20
 80030c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030cc:	f843 2b04 	str.w	r2, [r3], #4
 80030d0:	e7d8      	b.n	8003084 <__multiply+0x50>
 80030d2:	f8b1 a000 	ldrh.w	sl, [r1]
 80030d6:	f1ba 0f00 	cmp.w	sl, #0
 80030da:	d023      	beq.n	8003124 <__multiply+0xf0>
 80030dc:	f104 0e14 	add.w	lr, r4, #20
 80030e0:	46a9      	mov	r9, r5
 80030e2:	f04f 0c00 	mov.w	ip, #0
 80030e6:	f85e 7b04 	ldr.w	r7, [lr], #4
 80030ea:	f8d9 3000 	ldr.w	r3, [r9]
 80030ee:	fa1f fb87 	uxth.w	fp, r7
 80030f2:	b29b      	uxth	r3, r3
 80030f4:	fb0a 330b 	mla	r3, sl, fp, r3
 80030f8:	4463      	add	r3, ip
 80030fa:	f8d9 c000 	ldr.w	ip, [r9]
 80030fe:	0c3f      	lsrs	r7, r7, #16
 8003100:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8003104:	fb0a c707 	mla	r7, sl, r7, ip
 8003108:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 800310c:	b29b      	uxth	r3, r3
 800310e:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003112:	4572      	cmp	r2, lr
 8003114:	f849 3b04 	str.w	r3, [r9], #4
 8003118:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800311c:	d8e3      	bhi.n	80030e6 <__multiply+0xb2>
 800311e:	9b01      	ldr	r3, [sp, #4]
 8003120:	f845 c003 	str.w	ip, [r5, r3]
 8003124:	9b03      	ldr	r3, [sp, #12]
 8003126:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800312a:	3104      	adds	r1, #4
 800312c:	f1b9 0f00 	cmp.w	r9, #0
 8003130:	d021      	beq.n	8003176 <__multiply+0x142>
 8003132:	682b      	ldr	r3, [r5, #0]
 8003134:	f104 0c14 	add.w	ip, r4, #20
 8003138:	46ae      	mov	lr, r5
 800313a:	f04f 0a00 	mov.w	sl, #0
 800313e:	f8bc b000 	ldrh.w	fp, [ip]
 8003142:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8003146:	fb09 770b 	mla	r7, r9, fp, r7
 800314a:	4457      	add	r7, sl
 800314c:	b29b      	uxth	r3, r3
 800314e:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003152:	f84e 3b04 	str.w	r3, [lr], #4
 8003156:	f85c 3b04 	ldr.w	r3, [ip], #4
 800315a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800315e:	f8be 3000 	ldrh.w	r3, [lr]
 8003162:	fb09 330a 	mla	r3, r9, sl, r3
 8003166:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800316a:	4562      	cmp	r2, ip
 800316c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003170:	d8e5      	bhi.n	800313e <__multiply+0x10a>
 8003172:	9f01      	ldr	r7, [sp, #4]
 8003174:	51eb      	str	r3, [r5, r7]
 8003176:	3504      	adds	r5, #4
 8003178:	e79a      	b.n	80030b0 <__multiply+0x7c>
 800317a:	3e01      	subs	r6, #1
 800317c:	e79c      	b.n	80030b8 <__multiply+0x84>
 800317e:	bf00      	nop
 8003180:	08003de1 	.word	0x08003de1
 8003184:	08003df2 	.word	0x08003df2

08003188 <__pow5mult>:
 8003188:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800318c:	4615      	mov	r5, r2
 800318e:	f012 0203 	ands.w	r2, r2, #3
 8003192:	4607      	mov	r7, r0
 8003194:	460e      	mov	r6, r1
 8003196:	d007      	beq.n	80031a8 <__pow5mult+0x20>
 8003198:	4c25      	ldr	r4, [pc, #148]	@ (8003230 <__pow5mult+0xa8>)
 800319a:	3a01      	subs	r2, #1
 800319c:	2300      	movs	r3, #0
 800319e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80031a2:	f7ff fe9f 	bl	8002ee4 <__multadd>
 80031a6:	4606      	mov	r6, r0
 80031a8:	10ad      	asrs	r5, r5, #2
 80031aa:	d03d      	beq.n	8003228 <__pow5mult+0xa0>
 80031ac:	69fc      	ldr	r4, [r7, #28]
 80031ae:	b97c      	cbnz	r4, 80031d0 <__pow5mult+0x48>
 80031b0:	2010      	movs	r0, #16
 80031b2:	f7ff fd7f 	bl	8002cb4 <malloc>
 80031b6:	4602      	mov	r2, r0
 80031b8:	61f8      	str	r0, [r7, #28]
 80031ba:	b928      	cbnz	r0, 80031c8 <__pow5mult+0x40>
 80031bc:	4b1d      	ldr	r3, [pc, #116]	@ (8003234 <__pow5mult+0xac>)
 80031be:	481e      	ldr	r0, [pc, #120]	@ (8003238 <__pow5mult+0xb0>)
 80031c0:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80031c4:	f000 fa72 	bl	80036ac <__assert_func>
 80031c8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80031cc:	6004      	str	r4, [r0, #0]
 80031ce:	60c4      	str	r4, [r0, #12]
 80031d0:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80031d4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80031d8:	b94c      	cbnz	r4, 80031ee <__pow5mult+0x66>
 80031da:	f240 2171 	movw	r1, #625	@ 0x271
 80031de:	4638      	mov	r0, r7
 80031e0:	f7ff ff12 	bl	8003008 <__i2b>
 80031e4:	2300      	movs	r3, #0
 80031e6:	f8c8 0008 	str.w	r0, [r8, #8]
 80031ea:	4604      	mov	r4, r0
 80031ec:	6003      	str	r3, [r0, #0]
 80031ee:	f04f 0900 	mov.w	r9, #0
 80031f2:	07eb      	lsls	r3, r5, #31
 80031f4:	d50a      	bpl.n	800320c <__pow5mult+0x84>
 80031f6:	4631      	mov	r1, r6
 80031f8:	4622      	mov	r2, r4
 80031fa:	4638      	mov	r0, r7
 80031fc:	f7ff ff1a 	bl	8003034 <__multiply>
 8003200:	4631      	mov	r1, r6
 8003202:	4680      	mov	r8, r0
 8003204:	4638      	mov	r0, r7
 8003206:	f7ff fe4b 	bl	8002ea0 <_Bfree>
 800320a:	4646      	mov	r6, r8
 800320c:	106d      	asrs	r5, r5, #1
 800320e:	d00b      	beq.n	8003228 <__pow5mult+0xa0>
 8003210:	6820      	ldr	r0, [r4, #0]
 8003212:	b938      	cbnz	r0, 8003224 <__pow5mult+0x9c>
 8003214:	4622      	mov	r2, r4
 8003216:	4621      	mov	r1, r4
 8003218:	4638      	mov	r0, r7
 800321a:	f7ff ff0b 	bl	8003034 <__multiply>
 800321e:	6020      	str	r0, [r4, #0]
 8003220:	f8c0 9000 	str.w	r9, [r0]
 8003224:	4604      	mov	r4, r0
 8003226:	e7e4      	b.n	80031f2 <__pow5mult+0x6a>
 8003228:	4630      	mov	r0, r6
 800322a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800322e:	bf00      	nop
 8003230:	08003e4c 	.word	0x08003e4c
 8003234:	08003d72 	.word	0x08003d72
 8003238:	08003df2 	.word	0x08003df2

0800323c <__lshift>:
 800323c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003240:	460c      	mov	r4, r1
 8003242:	6849      	ldr	r1, [r1, #4]
 8003244:	6923      	ldr	r3, [r4, #16]
 8003246:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800324a:	68a3      	ldr	r3, [r4, #8]
 800324c:	4607      	mov	r7, r0
 800324e:	4691      	mov	r9, r2
 8003250:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003254:	f108 0601 	add.w	r6, r8, #1
 8003258:	42b3      	cmp	r3, r6
 800325a:	db0b      	blt.n	8003274 <__lshift+0x38>
 800325c:	4638      	mov	r0, r7
 800325e:	f7ff fddf 	bl	8002e20 <_Balloc>
 8003262:	4605      	mov	r5, r0
 8003264:	b948      	cbnz	r0, 800327a <__lshift+0x3e>
 8003266:	4602      	mov	r2, r0
 8003268:	4b28      	ldr	r3, [pc, #160]	@ (800330c <__lshift+0xd0>)
 800326a:	4829      	ldr	r0, [pc, #164]	@ (8003310 <__lshift+0xd4>)
 800326c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003270:	f000 fa1c 	bl	80036ac <__assert_func>
 8003274:	3101      	adds	r1, #1
 8003276:	005b      	lsls	r3, r3, #1
 8003278:	e7ee      	b.n	8003258 <__lshift+0x1c>
 800327a:	2300      	movs	r3, #0
 800327c:	f100 0114 	add.w	r1, r0, #20
 8003280:	f100 0210 	add.w	r2, r0, #16
 8003284:	4618      	mov	r0, r3
 8003286:	4553      	cmp	r3, sl
 8003288:	db33      	blt.n	80032f2 <__lshift+0xb6>
 800328a:	6920      	ldr	r0, [r4, #16]
 800328c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003290:	f104 0314 	add.w	r3, r4, #20
 8003294:	f019 091f 	ands.w	r9, r9, #31
 8003298:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800329c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80032a0:	d02b      	beq.n	80032fa <__lshift+0xbe>
 80032a2:	f1c9 0e20 	rsb	lr, r9, #32
 80032a6:	468a      	mov	sl, r1
 80032a8:	2200      	movs	r2, #0
 80032aa:	6818      	ldr	r0, [r3, #0]
 80032ac:	fa00 f009 	lsl.w	r0, r0, r9
 80032b0:	4310      	orrs	r0, r2
 80032b2:	f84a 0b04 	str.w	r0, [sl], #4
 80032b6:	f853 2b04 	ldr.w	r2, [r3], #4
 80032ba:	459c      	cmp	ip, r3
 80032bc:	fa22 f20e 	lsr.w	r2, r2, lr
 80032c0:	d8f3      	bhi.n	80032aa <__lshift+0x6e>
 80032c2:	ebac 0304 	sub.w	r3, ip, r4
 80032c6:	3b15      	subs	r3, #21
 80032c8:	f023 0303 	bic.w	r3, r3, #3
 80032cc:	3304      	adds	r3, #4
 80032ce:	f104 0015 	add.w	r0, r4, #21
 80032d2:	4584      	cmp	ip, r0
 80032d4:	bf38      	it	cc
 80032d6:	2304      	movcc	r3, #4
 80032d8:	50ca      	str	r2, [r1, r3]
 80032da:	b10a      	cbz	r2, 80032e0 <__lshift+0xa4>
 80032dc:	f108 0602 	add.w	r6, r8, #2
 80032e0:	3e01      	subs	r6, #1
 80032e2:	4638      	mov	r0, r7
 80032e4:	612e      	str	r6, [r5, #16]
 80032e6:	4621      	mov	r1, r4
 80032e8:	f7ff fdda 	bl	8002ea0 <_Bfree>
 80032ec:	4628      	mov	r0, r5
 80032ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80032f2:	f842 0f04 	str.w	r0, [r2, #4]!
 80032f6:	3301      	adds	r3, #1
 80032f8:	e7c5      	b.n	8003286 <__lshift+0x4a>
 80032fa:	3904      	subs	r1, #4
 80032fc:	f853 2b04 	ldr.w	r2, [r3], #4
 8003300:	f841 2f04 	str.w	r2, [r1, #4]!
 8003304:	459c      	cmp	ip, r3
 8003306:	d8f9      	bhi.n	80032fc <__lshift+0xc0>
 8003308:	e7ea      	b.n	80032e0 <__lshift+0xa4>
 800330a:	bf00      	nop
 800330c:	08003de1 	.word	0x08003de1
 8003310:	08003df2 	.word	0x08003df2

08003314 <__mcmp>:
 8003314:	690a      	ldr	r2, [r1, #16]
 8003316:	4603      	mov	r3, r0
 8003318:	6900      	ldr	r0, [r0, #16]
 800331a:	1a80      	subs	r0, r0, r2
 800331c:	b530      	push	{r4, r5, lr}
 800331e:	d10e      	bne.n	800333e <__mcmp+0x2a>
 8003320:	3314      	adds	r3, #20
 8003322:	3114      	adds	r1, #20
 8003324:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003328:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800332c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003330:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003334:	4295      	cmp	r5, r2
 8003336:	d003      	beq.n	8003340 <__mcmp+0x2c>
 8003338:	d205      	bcs.n	8003346 <__mcmp+0x32>
 800333a:	f04f 30ff 	mov.w	r0, #4294967295
 800333e:	bd30      	pop	{r4, r5, pc}
 8003340:	42a3      	cmp	r3, r4
 8003342:	d3f3      	bcc.n	800332c <__mcmp+0x18>
 8003344:	e7fb      	b.n	800333e <__mcmp+0x2a>
 8003346:	2001      	movs	r0, #1
 8003348:	e7f9      	b.n	800333e <__mcmp+0x2a>
	...

0800334c <__mdiff>:
 800334c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003350:	4689      	mov	r9, r1
 8003352:	4606      	mov	r6, r0
 8003354:	4611      	mov	r1, r2
 8003356:	4648      	mov	r0, r9
 8003358:	4614      	mov	r4, r2
 800335a:	f7ff ffdb 	bl	8003314 <__mcmp>
 800335e:	1e05      	subs	r5, r0, #0
 8003360:	d112      	bne.n	8003388 <__mdiff+0x3c>
 8003362:	4629      	mov	r1, r5
 8003364:	4630      	mov	r0, r6
 8003366:	f7ff fd5b 	bl	8002e20 <_Balloc>
 800336a:	4602      	mov	r2, r0
 800336c:	b928      	cbnz	r0, 800337a <__mdiff+0x2e>
 800336e:	4b3e      	ldr	r3, [pc, #248]	@ (8003468 <__mdiff+0x11c>)
 8003370:	f240 2137 	movw	r1, #567	@ 0x237
 8003374:	483d      	ldr	r0, [pc, #244]	@ (800346c <__mdiff+0x120>)
 8003376:	f000 f999 	bl	80036ac <__assert_func>
 800337a:	2301      	movs	r3, #1
 800337c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003380:	4610      	mov	r0, r2
 8003382:	b003      	add	sp, #12
 8003384:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003388:	bfbc      	itt	lt
 800338a:	464b      	movlt	r3, r9
 800338c:	46a1      	movlt	r9, r4
 800338e:	4630      	mov	r0, r6
 8003390:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003394:	bfba      	itte	lt
 8003396:	461c      	movlt	r4, r3
 8003398:	2501      	movlt	r5, #1
 800339a:	2500      	movge	r5, #0
 800339c:	f7ff fd40 	bl	8002e20 <_Balloc>
 80033a0:	4602      	mov	r2, r0
 80033a2:	b918      	cbnz	r0, 80033ac <__mdiff+0x60>
 80033a4:	4b30      	ldr	r3, [pc, #192]	@ (8003468 <__mdiff+0x11c>)
 80033a6:	f240 2145 	movw	r1, #581	@ 0x245
 80033aa:	e7e3      	b.n	8003374 <__mdiff+0x28>
 80033ac:	f8d9 7010 	ldr.w	r7, [r9, #16]
 80033b0:	6926      	ldr	r6, [r4, #16]
 80033b2:	60c5      	str	r5, [r0, #12]
 80033b4:	f109 0310 	add.w	r3, r9, #16
 80033b8:	f109 0514 	add.w	r5, r9, #20
 80033bc:	f104 0e14 	add.w	lr, r4, #20
 80033c0:	f100 0b14 	add.w	fp, r0, #20
 80033c4:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80033c8:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80033cc:	9301      	str	r3, [sp, #4]
 80033ce:	46d9      	mov	r9, fp
 80033d0:	f04f 0c00 	mov.w	ip, #0
 80033d4:	9b01      	ldr	r3, [sp, #4]
 80033d6:	f85e 0b04 	ldr.w	r0, [lr], #4
 80033da:	f853 af04 	ldr.w	sl, [r3, #4]!
 80033de:	9301      	str	r3, [sp, #4]
 80033e0:	b281      	uxth	r1, r0
 80033e2:	fa1f f38a 	uxth.w	r3, sl
 80033e6:	1a5b      	subs	r3, r3, r1
 80033e8:	0c00      	lsrs	r0, r0, #16
 80033ea:	4463      	add	r3, ip
 80033ec:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80033f0:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80033f4:	b29b      	uxth	r3, r3
 80033f6:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80033fa:	4576      	cmp	r6, lr
 80033fc:	f849 3b04 	str.w	r3, [r9], #4
 8003400:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003404:	d8e6      	bhi.n	80033d4 <__mdiff+0x88>
 8003406:	1b33      	subs	r3, r6, r4
 8003408:	3b15      	subs	r3, #21
 800340a:	f023 0303 	bic.w	r3, r3, #3
 800340e:	3415      	adds	r4, #21
 8003410:	3304      	adds	r3, #4
 8003412:	42a6      	cmp	r6, r4
 8003414:	bf38      	it	cc
 8003416:	2304      	movcc	r3, #4
 8003418:	441d      	add	r5, r3
 800341a:	445b      	add	r3, fp
 800341c:	461e      	mov	r6, r3
 800341e:	462c      	mov	r4, r5
 8003420:	4544      	cmp	r4, r8
 8003422:	d30e      	bcc.n	8003442 <__mdiff+0xf6>
 8003424:	f108 0103 	add.w	r1, r8, #3
 8003428:	1b49      	subs	r1, r1, r5
 800342a:	f021 0103 	bic.w	r1, r1, #3
 800342e:	3d03      	subs	r5, #3
 8003430:	45a8      	cmp	r8, r5
 8003432:	bf38      	it	cc
 8003434:	2100      	movcc	r1, #0
 8003436:	440b      	add	r3, r1
 8003438:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800343c:	b191      	cbz	r1, 8003464 <__mdiff+0x118>
 800343e:	6117      	str	r7, [r2, #16]
 8003440:	e79e      	b.n	8003380 <__mdiff+0x34>
 8003442:	f854 1b04 	ldr.w	r1, [r4], #4
 8003446:	46e6      	mov	lr, ip
 8003448:	0c08      	lsrs	r0, r1, #16
 800344a:	fa1c fc81 	uxtah	ip, ip, r1
 800344e:	4471      	add	r1, lr
 8003450:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003454:	b289      	uxth	r1, r1
 8003456:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800345a:	f846 1b04 	str.w	r1, [r6], #4
 800345e:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003462:	e7dd      	b.n	8003420 <__mdiff+0xd4>
 8003464:	3f01      	subs	r7, #1
 8003466:	e7e7      	b.n	8003438 <__mdiff+0xec>
 8003468:	08003de1 	.word	0x08003de1
 800346c:	08003df2 	.word	0x08003df2

08003470 <__d2b>:
 8003470:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8003474:	2101      	movs	r1, #1
 8003476:	9e08      	ldr	r6, [sp, #32]
 8003478:	4690      	mov	r8, r2
 800347a:	4699      	mov	r9, r3
 800347c:	f7ff fcd0 	bl	8002e20 <_Balloc>
 8003480:	4604      	mov	r4, r0
 8003482:	b930      	cbnz	r0, 8003492 <__d2b+0x22>
 8003484:	4602      	mov	r2, r0
 8003486:	4b24      	ldr	r3, [pc, #144]	@ (8003518 <__d2b+0xa8>)
 8003488:	4824      	ldr	r0, [pc, #144]	@ (800351c <__d2b+0xac>)
 800348a:	f240 310f 	movw	r1, #783	@ 0x30f
 800348e:	f000 f90d 	bl	80036ac <__assert_func>
 8003492:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003496:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800349a:	b10d      	cbz	r5, 80034a0 <__d2b+0x30>
 800349c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80034a0:	9301      	str	r3, [sp, #4]
 80034a2:	f1b8 0300 	subs.w	r3, r8, #0
 80034a6:	d024      	beq.n	80034f2 <__d2b+0x82>
 80034a8:	4668      	mov	r0, sp
 80034aa:	9300      	str	r3, [sp, #0]
 80034ac:	f7ff fd7f 	bl	8002fae <__lo0bits>
 80034b0:	e9dd 1200 	ldrd	r1, r2, [sp]
 80034b4:	b1d8      	cbz	r0, 80034ee <__d2b+0x7e>
 80034b6:	f1c0 0320 	rsb	r3, r0, #32
 80034ba:	fa02 f303 	lsl.w	r3, r2, r3
 80034be:	430b      	orrs	r3, r1
 80034c0:	40c2      	lsrs	r2, r0
 80034c2:	6163      	str	r3, [r4, #20]
 80034c4:	9201      	str	r2, [sp, #4]
 80034c6:	9b01      	ldr	r3, [sp, #4]
 80034c8:	61a3      	str	r3, [r4, #24]
 80034ca:	2b00      	cmp	r3, #0
 80034cc:	bf0c      	ite	eq
 80034ce:	2201      	moveq	r2, #1
 80034d0:	2202      	movne	r2, #2
 80034d2:	6122      	str	r2, [r4, #16]
 80034d4:	b1ad      	cbz	r5, 8003502 <__d2b+0x92>
 80034d6:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80034da:	4405      	add	r5, r0
 80034dc:	6035      	str	r5, [r6, #0]
 80034de:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80034e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80034e4:	6018      	str	r0, [r3, #0]
 80034e6:	4620      	mov	r0, r4
 80034e8:	b002      	add	sp, #8
 80034ea:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80034ee:	6161      	str	r1, [r4, #20]
 80034f0:	e7e9      	b.n	80034c6 <__d2b+0x56>
 80034f2:	a801      	add	r0, sp, #4
 80034f4:	f7ff fd5b 	bl	8002fae <__lo0bits>
 80034f8:	9b01      	ldr	r3, [sp, #4]
 80034fa:	6163      	str	r3, [r4, #20]
 80034fc:	3020      	adds	r0, #32
 80034fe:	2201      	movs	r2, #1
 8003500:	e7e7      	b.n	80034d2 <__d2b+0x62>
 8003502:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003506:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800350a:	6030      	str	r0, [r6, #0]
 800350c:	6918      	ldr	r0, [r3, #16]
 800350e:	f7ff fd2f 	bl	8002f70 <__hi0bits>
 8003512:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003516:	e7e4      	b.n	80034e2 <__d2b+0x72>
 8003518:	08003de1 	.word	0x08003de1
 800351c:	08003df2 	.word	0x08003df2

08003520 <__sflush_r>:
 8003520:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003524:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003526:	0716      	lsls	r6, r2, #28
 8003528:	4605      	mov	r5, r0
 800352a:	460c      	mov	r4, r1
 800352c:	d454      	bmi.n	80035d8 <__sflush_r+0xb8>
 800352e:	684b      	ldr	r3, [r1, #4]
 8003530:	2b00      	cmp	r3, #0
 8003532:	dc02      	bgt.n	800353a <__sflush_r+0x1a>
 8003534:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003536:	2b00      	cmp	r3, #0
 8003538:	dd48      	ble.n	80035cc <__sflush_r+0xac>
 800353a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800353c:	2e00      	cmp	r6, #0
 800353e:	d045      	beq.n	80035cc <__sflush_r+0xac>
 8003540:	2300      	movs	r3, #0
 8003542:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003546:	682f      	ldr	r7, [r5, #0]
 8003548:	6a21      	ldr	r1, [r4, #32]
 800354a:	602b      	str	r3, [r5, #0]
 800354c:	d030      	beq.n	80035b0 <__sflush_r+0x90>
 800354e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003550:	89a3      	ldrh	r3, [r4, #12]
 8003552:	0759      	lsls	r1, r3, #29
 8003554:	d505      	bpl.n	8003562 <__sflush_r+0x42>
 8003556:	6863      	ldr	r3, [r4, #4]
 8003558:	1ad2      	subs	r2, r2, r3
 800355a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800355c:	b10b      	cbz	r3, 8003562 <__sflush_r+0x42>
 800355e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003560:	1ad2      	subs	r2, r2, r3
 8003562:	2300      	movs	r3, #0
 8003564:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003566:	6a21      	ldr	r1, [r4, #32]
 8003568:	4628      	mov	r0, r5
 800356a:	47b0      	blx	r6
 800356c:	1c43      	adds	r3, r0, #1
 800356e:	89a3      	ldrh	r3, [r4, #12]
 8003570:	d106      	bne.n	8003580 <__sflush_r+0x60>
 8003572:	6829      	ldr	r1, [r5, #0]
 8003574:	291d      	cmp	r1, #29
 8003576:	d82b      	bhi.n	80035d0 <__sflush_r+0xb0>
 8003578:	4a28      	ldr	r2, [pc, #160]	@ (800361c <__sflush_r+0xfc>)
 800357a:	410a      	asrs	r2, r1
 800357c:	07d6      	lsls	r6, r2, #31
 800357e:	d427      	bmi.n	80035d0 <__sflush_r+0xb0>
 8003580:	2200      	movs	r2, #0
 8003582:	6062      	str	r2, [r4, #4]
 8003584:	04d9      	lsls	r1, r3, #19
 8003586:	6922      	ldr	r2, [r4, #16]
 8003588:	6022      	str	r2, [r4, #0]
 800358a:	d504      	bpl.n	8003596 <__sflush_r+0x76>
 800358c:	1c42      	adds	r2, r0, #1
 800358e:	d101      	bne.n	8003594 <__sflush_r+0x74>
 8003590:	682b      	ldr	r3, [r5, #0]
 8003592:	b903      	cbnz	r3, 8003596 <__sflush_r+0x76>
 8003594:	6560      	str	r0, [r4, #84]	@ 0x54
 8003596:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003598:	602f      	str	r7, [r5, #0]
 800359a:	b1b9      	cbz	r1, 80035cc <__sflush_r+0xac>
 800359c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80035a0:	4299      	cmp	r1, r3
 80035a2:	d002      	beq.n	80035aa <__sflush_r+0x8a>
 80035a4:	4628      	mov	r0, r5
 80035a6:	f7ff fb3b 	bl	8002c20 <_free_r>
 80035aa:	2300      	movs	r3, #0
 80035ac:	6363      	str	r3, [r4, #52]	@ 0x34
 80035ae:	e00d      	b.n	80035cc <__sflush_r+0xac>
 80035b0:	2301      	movs	r3, #1
 80035b2:	4628      	mov	r0, r5
 80035b4:	47b0      	blx	r6
 80035b6:	4602      	mov	r2, r0
 80035b8:	1c50      	adds	r0, r2, #1
 80035ba:	d1c9      	bne.n	8003550 <__sflush_r+0x30>
 80035bc:	682b      	ldr	r3, [r5, #0]
 80035be:	2b00      	cmp	r3, #0
 80035c0:	d0c6      	beq.n	8003550 <__sflush_r+0x30>
 80035c2:	2b1d      	cmp	r3, #29
 80035c4:	d001      	beq.n	80035ca <__sflush_r+0xaa>
 80035c6:	2b16      	cmp	r3, #22
 80035c8:	d11d      	bne.n	8003606 <__sflush_r+0xe6>
 80035ca:	602f      	str	r7, [r5, #0]
 80035cc:	2000      	movs	r0, #0
 80035ce:	e021      	b.n	8003614 <__sflush_r+0xf4>
 80035d0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80035d4:	b21b      	sxth	r3, r3
 80035d6:	e01a      	b.n	800360e <__sflush_r+0xee>
 80035d8:	690f      	ldr	r7, [r1, #16]
 80035da:	2f00      	cmp	r7, #0
 80035dc:	d0f6      	beq.n	80035cc <__sflush_r+0xac>
 80035de:	0793      	lsls	r3, r2, #30
 80035e0:	680e      	ldr	r6, [r1, #0]
 80035e2:	bf08      	it	eq
 80035e4:	694b      	ldreq	r3, [r1, #20]
 80035e6:	600f      	str	r7, [r1, #0]
 80035e8:	bf18      	it	ne
 80035ea:	2300      	movne	r3, #0
 80035ec:	1bf6      	subs	r6, r6, r7
 80035ee:	608b      	str	r3, [r1, #8]
 80035f0:	2e00      	cmp	r6, #0
 80035f2:	ddeb      	ble.n	80035cc <__sflush_r+0xac>
 80035f4:	6a21      	ldr	r1, [r4, #32]
 80035f6:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 80035fa:	4633      	mov	r3, r6
 80035fc:	463a      	mov	r2, r7
 80035fe:	4628      	mov	r0, r5
 8003600:	47e0      	blx	ip
 8003602:	2800      	cmp	r0, #0
 8003604:	dc07      	bgt.n	8003616 <__sflush_r+0xf6>
 8003606:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800360a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800360e:	81a3      	strh	r3, [r4, #12]
 8003610:	f04f 30ff 	mov.w	r0, #4294967295
 8003614:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003616:	4407      	add	r7, r0
 8003618:	1a36      	subs	r6, r6, r0
 800361a:	e7e9      	b.n	80035f0 <__sflush_r+0xd0>
 800361c:	dfbffffe 	.word	0xdfbffffe

08003620 <_fflush_r>:
 8003620:	b538      	push	{r3, r4, r5, lr}
 8003622:	690b      	ldr	r3, [r1, #16]
 8003624:	4605      	mov	r5, r0
 8003626:	460c      	mov	r4, r1
 8003628:	b913      	cbnz	r3, 8003630 <_fflush_r+0x10>
 800362a:	2500      	movs	r5, #0
 800362c:	4628      	mov	r0, r5
 800362e:	bd38      	pop	{r3, r4, r5, pc}
 8003630:	b118      	cbz	r0, 800363a <_fflush_r+0x1a>
 8003632:	6a03      	ldr	r3, [r0, #32]
 8003634:	b90b      	cbnz	r3, 800363a <_fflush_r+0x1a>
 8003636:	f7fe fba9 	bl	8001d8c <__sinit>
 800363a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800363e:	2b00      	cmp	r3, #0
 8003640:	d0f3      	beq.n	800362a <_fflush_r+0xa>
 8003642:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003644:	07d0      	lsls	r0, r2, #31
 8003646:	d404      	bmi.n	8003652 <_fflush_r+0x32>
 8003648:	0599      	lsls	r1, r3, #22
 800364a:	d402      	bmi.n	8003652 <_fflush_r+0x32>
 800364c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800364e:	f7fe fc94 	bl	8001f7a <__retarget_lock_acquire_recursive>
 8003652:	4628      	mov	r0, r5
 8003654:	4621      	mov	r1, r4
 8003656:	f7ff ff63 	bl	8003520 <__sflush_r>
 800365a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800365c:	07da      	lsls	r2, r3, #31
 800365e:	4605      	mov	r5, r0
 8003660:	d4e4      	bmi.n	800362c <_fflush_r+0xc>
 8003662:	89a3      	ldrh	r3, [r4, #12]
 8003664:	059b      	lsls	r3, r3, #22
 8003666:	d4e1      	bmi.n	800362c <_fflush_r+0xc>
 8003668:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800366a:	f7fe fc87 	bl	8001f7c <__retarget_lock_release_recursive>
 800366e:	e7dd      	b.n	800362c <_fflush_r+0xc>

08003670 <_sbrk_r>:
 8003670:	b538      	push	{r3, r4, r5, lr}
 8003672:	4d06      	ldr	r5, [pc, #24]	@ (800368c <_sbrk_r+0x1c>)
 8003674:	2300      	movs	r3, #0
 8003676:	4604      	mov	r4, r0
 8003678:	4608      	mov	r0, r1
 800367a:	602b      	str	r3, [r5, #0]
 800367c:	f7fd fd96 	bl	80011ac <_sbrk>
 8003680:	1c43      	adds	r3, r0, #1
 8003682:	d102      	bne.n	800368a <_sbrk_r+0x1a>
 8003684:	682b      	ldr	r3, [r5, #0]
 8003686:	b103      	cbz	r3, 800368a <_sbrk_r+0x1a>
 8003688:	6023      	str	r3, [r4, #0]
 800368a:	bd38      	pop	{r3, r4, r5, pc}
 800368c:	2000033c 	.word	0x2000033c

08003690 <memcpy>:
 8003690:	440a      	add	r2, r1
 8003692:	4291      	cmp	r1, r2
 8003694:	f100 33ff 	add.w	r3, r0, #4294967295
 8003698:	d100      	bne.n	800369c <memcpy+0xc>
 800369a:	4770      	bx	lr
 800369c:	b510      	push	{r4, lr}
 800369e:	f811 4b01 	ldrb.w	r4, [r1], #1
 80036a2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80036a6:	4291      	cmp	r1, r2
 80036a8:	d1f9      	bne.n	800369e <memcpy+0xe>
 80036aa:	bd10      	pop	{r4, pc}

080036ac <__assert_func>:
 80036ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80036ae:	4614      	mov	r4, r2
 80036b0:	461a      	mov	r2, r3
 80036b2:	4b09      	ldr	r3, [pc, #36]	@ (80036d8 <__assert_func+0x2c>)
 80036b4:	681b      	ldr	r3, [r3, #0]
 80036b6:	4605      	mov	r5, r0
 80036b8:	68d8      	ldr	r0, [r3, #12]
 80036ba:	b954      	cbnz	r4, 80036d2 <__assert_func+0x26>
 80036bc:	4b07      	ldr	r3, [pc, #28]	@ (80036dc <__assert_func+0x30>)
 80036be:	461c      	mov	r4, r3
 80036c0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80036c4:	9100      	str	r1, [sp, #0]
 80036c6:	462b      	mov	r3, r5
 80036c8:	4905      	ldr	r1, [pc, #20]	@ (80036e0 <__assert_func+0x34>)
 80036ca:	f000 f841 	bl	8003750 <fiprintf>
 80036ce:	f000 f851 	bl	8003774 <abort>
 80036d2:	4b04      	ldr	r3, [pc, #16]	@ (80036e4 <__assert_func+0x38>)
 80036d4:	e7f4      	b.n	80036c0 <__assert_func+0x14>
 80036d6:	bf00      	nop
 80036d8:	20000024 	.word	0x20000024
 80036dc:	08003f8d 	.word	0x08003f8d
 80036e0:	08003f5f 	.word	0x08003f5f
 80036e4:	08003f52 	.word	0x08003f52

080036e8 <_calloc_r>:
 80036e8:	b570      	push	{r4, r5, r6, lr}
 80036ea:	fba1 5402 	umull	r5, r4, r1, r2
 80036ee:	b93c      	cbnz	r4, 8003700 <_calloc_r+0x18>
 80036f0:	4629      	mov	r1, r5
 80036f2:	f7ff fb09 	bl	8002d08 <_malloc_r>
 80036f6:	4606      	mov	r6, r0
 80036f8:	b928      	cbnz	r0, 8003706 <_calloc_r+0x1e>
 80036fa:	2600      	movs	r6, #0
 80036fc:	4630      	mov	r0, r6
 80036fe:	bd70      	pop	{r4, r5, r6, pc}
 8003700:	220c      	movs	r2, #12
 8003702:	6002      	str	r2, [r0, #0]
 8003704:	e7f9      	b.n	80036fa <_calloc_r+0x12>
 8003706:	462a      	mov	r2, r5
 8003708:	4621      	mov	r1, r4
 800370a:	f7fe fbb8 	bl	8001e7e <memset>
 800370e:	e7f5      	b.n	80036fc <_calloc_r+0x14>

08003710 <__ascii_mbtowc>:
 8003710:	b082      	sub	sp, #8
 8003712:	b901      	cbnz	r1, 8003716 <__ascii_mbtowc+0x6>
 8003714:	a901      	add	r1, sp, #4
 8003716:	b142      	cbz	r2, 800372a <__ascii_mbtowc+0x1a>
 8003718:	b14b      	cbz	r3, 800372e <__ascii_mbtowc+0x1e>
 800371a:	7813      	ldrb	r3, [r2, #0]
 800371c:	600b      	str	r3, [r1, #0]
 800371e:	7812      	ldrb	r2, [r2, #0]
 8003720:	1e10      	subs	r0, r2, #0
 8003722:	bf18      	it	ne
 8003724:	2001      	movne	r0, #1
 8003726:	b002      	add	sp, #8
 8003728:	4770      	bx	lr
 800372a:	4610      	mov	r0, r2
 800372c:	e7fb      	b.n	8003726 <__ascii_mbtowc+0x16>
 800372e:	f06f 0001 	mvn.w	r0, #1
 8003732:	e7f8      	b.n	8003726 <__ascii_mbtowc+0x16>

08003734 <__ascii_wctomb>:
 8003734:	4603      	mov	r3, r0
 8003736:	4608      	mov	r0, r1
 8003738:	b141      	cbz	r1, 800374c <__ascii_wctomb+0x18>
 800373a:	2aff      	cmp	r2, #255	@ 0xff
 800373c:	d904      	bls.n	8003748 <__ascii_wctomb+0x14>
 800373e:	228a      	movs	r2, #138	@ 0x8a
 8003740:	601a      	str	r2, [r3, #0]
 8003742:	f04f 30ff 	mov.w	r0, #4294967295
 8003746:	4770      	bx	lr
 8003748:	700a      	strb	r2, [r1, #0]
 800374a:	2001      	movs	r0, #1
 800374c:	4770      	bx	lr
	...

08003750 <fiprintf>:
 8003750:	b40e      	push	{r1, r2, r3}
 8003752:	b503      	push	{r0, r1, lr}
 8003754:	4601      	mov	r1, r0
 8003756:	ab03      	add	r3, sp, #12
 8003758:	4805      	ldr	r0, [pc, #20]	@ (8003770 <fiprintf+0x20>)
 800375a:	f853 2b04 	ldr.w	r2, [r3], #4
 800375e:	6800      	ldr	r0, [r0, #0]
 8003760:	9301      	str	r3, [sp, #4]
 8003762:	f000 f835 	bl	80037d0 <_vfiprintf_r>
 8003766:	b002      	add	sp, #8
 8003768:	f85d eb04 	ldr.w	lr, [sp], #4
 800376c:	b003      	add	sp, #12
 800376e:	4770      	bx	lr
 8003770:	20000024 	.word	0x20000024

08003774 <abort>:
 8003774:	b508      	push	{r3, lr}
 8003776:	2006      	movs	r0, #6
 8003778:	f000 f9fe 	bl	8003b78 <raise>
 800377c:	2001      	movs	r0, #1
 800377e:	f7fd fca0 	bl	80010c2 <_exit>

08003782 <__sfputc_r>:
 8003782:	6893      	ldr	r3, [r2, #8]
 8003784:	3b01      	subs	r3, #1
 8003786:	2b00      	cmp	r3, #0
 8003788:	b410      	push	{r4}
 800378a:	6093      	str	r3, [r2, #8]
 800378c:	da07      	bge.n	800379e <__sfputc_r+0x1c>
 800378e:	6994      	ldr	r4, [r2, #24]
 8003790:	42a3      	cmp	r3, r4
 8003792:	db01      	blt.n	8003798 <__sfputc_r+0x16>
 8003794:	290a      	cmp	r1, #10
 8003796:	d102      	bne.n	800379e <__sfputc_r+0x1c>
 8003798:	bc10      	pop	{r4}
 800379a:	f000 b931 	b.w	8003a00 <__swbuf_r>
 800379e:	6813      	ldr	r3, [r2, #0]
 80037a0:	1c58      	adds	r0, r3, #1
 80037a2:	6010      	str	r0, [r2, #0]
 80037a4:	7019      	strb	r1, [r3, #0]
 80037a6:	4608      	mov	r0, r1
 80037a8:	bc10      	pop	{r4}
 80037aa:	4770      	bx	lr

080037ac <__sfputs_r>:
 80037ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80037ae:	4606      	mov	r6, r0
 80037b0:	460f      	mov	r7, r1
 80037b2:	4614      	mov	r4, r2
 80037b4:	18d5      	adds	r5, r2, r3
 80037b6:	42ac      	cmp	r4, r5
 80037b8:	d101      	bne.n	80037be <__sfputs_r+0x12>
 80037ba:	2000      	movs	r0, #0
 80037bc:	e007      	b.n	80037ce <__sfputs_r+0x22>
 80037be:	f814 1b01 	ldrb.w	r1, [r4], #1
 80037c2:	463a      	mov	r2, r7
 80037c4:	4630      	mov	r0, r6
 80037c6:	f7ff ffdc 	bl	8003782 <__sfputc_r>
 80037ca:	1c43      	adds	r3, r0, #1
 80037cc:	d1f3      	bne.n	80037b6 <__sfputs_r+0xa>
 80037ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080037d0 <_vfiprintf_r>:
 80037d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037d4:	460d      	mov	r5, r1
 80037d6:	b09d      	sub	sp, #116	@ 0x74
 80037d8:	4614      	mov	r4, r2
 80037da:	4698      	mov	r8, r3
 80037dc:	4606      	mov	r6, r0
 80037de:	b118      	cbz	r0, 80037e8 <_vfiprintf_r+0x18>
 80037e0:	6a03      	ldr	r3, [r0, #32]
 80037e2:	b90b      	cbnz	r3, 80037e8 <_vfiprintf_r+0x18>
 80037e4:	f7fe fad2 	bl	8001d8c <__sinit>
 80037e8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80037ea:	07d9      	lsls	r1, r3, #31
 80037ec:	d405      	bmi.n	80037fa <_vfiprintf_r+0x2a>
 80037ee:	89ab      	ldrh	r3, [r5, #12]
 80037f0:	059a      	lsls	r2, r3, #22
 80037f2:	d402      	bmi.n	80037fa <_vfiprintf_r+0x2a>
 80037f4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80037f6:	f7fe fbc0 	bl	8001f7a <__retarget_lock_acquire_recursive>
 80037fa:	89ab      	ldrh	r3, [r5, #12]
 80037fc:	071b      	lsls	r3, r3, #28
 80037fe:	d501      	bpl.n	8003804 <_vfiprintf_r+0x34>
 8003800:	692b      	ldr	r3, [r5, #16]
 8003802:	b99b      	cbnz	r3, 800382c <_vfiprintf_r+0x5c>
 8003804:	4629      	mov	r1, r5
 8003806:	4630      	mov	r0, r6
 8003808:	f000 f938 	bl	8003a7c <__swsetup_r>
 800380c:	b170      	cbz	r0, 800382c <_vfiprintf_r+0x5c>
 800380e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003810:	07dc      	lsls	r4, r3, #31
 8003812:	d504      	bpl.n	800381e <_vfiprintf_r+0x4e>
 8003814:	f04f 30ff 	mov.w	r0, #4294967295
 8003818:	b01d      	add	sp, #116	@ 0x74
 800381a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800381e:	89ab      	ldrh	r3, [r5, #12]
 8003820:	0598      	lsls	r0, r3, #22
 8003822:	d4f7      	bmi.n	8003814 <_vfiprintf_r+0x44>
 8003824:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003826:	f7fe fba9 	bl	8001f7c <__retarget_lock_release_recursive>
 800382a:	e7f3      	b.n	8003814 <_vfiprintf_r+0x44>
 800382c:	2300      	movs	r3, #0
 800382e:	9309      	str	r3, [sp, #36]	@ 0x24
 8003830:	2320      	movs	r3, #32
 8003832:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003836:	f8cd 800c 	str.w	r8, [sp, #12]
 800383a:	2330      	movs	r3, #48	@ 0x30
 800383c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80039ec <_vfiprintf_r+0x21c>
 8003840:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003844:	f04f 0901 	mov.w	r9, #1
 8003848:	4623      	mov	r3, r4
 800384a:	469a      	mov	sl, r3
 800384c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003850:	b10a      	cbz	r2, 8003856 <_vfiprintf_r+0x86>
 8003852:	2a25      	cmp	r2, #37	@ 0x25
 8003854:	d1f9      	bne.n	800384a <_vfiprintf_r+0x7a>
 8003856:	ebba 0b04 	subs.w	fp, sl, r4
 800385a:	d00b      	beq.n	8003874 <_vfiprintf_r+0xa4>
 800385c:	465b      	mov	r3, fp
 800385e:	4622      	mov	r2, r4
 8003860:	4629      	mov	r1, r5
 8003862:	4630      	mov	r0, r6
 8003864:	f7ff ffa2 	bl	80037ac <__sfputs_r>
 8003868:	3001      	adds	r0, #1
 800386a:	f000 80a7 	beq.w	80039bc <_vfiprintf_r+0x1ec>
 800386e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003870:	445a      	add	r2, fp
 8003872:	9209      	str	r2, [sp, #36]	@ 0x24
 8003874:	f89a 3000 	ldrb.w	r3, [sl]
 8003878:	2b00      	cmp	r3, #0
 800387a:	f000 809f 	beq.w	80039bc <_vfiprintf_r+0x1ec>
 800387e:	2300      	movs	r3, #0
 8003880:	f04f 32ff 	mov.w	r2, #4294967295
 8003884:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003888:	f10a 0a01 	add.w	sl, sl, #1
 800388c:	9304      	str	r3, [sp, #16]
 800388e:	9307      	str	r3, [sp, #28]
 8003890:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003894:	931a      	str	r3, [sp, #104]	@ 0x68
 8003896:	4654      	mov	r4, sl
 8003898:	2205      	movs	r2, #5
 800389a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800389e:	4853      	ldr	r0, [pc, #332]	@ (80039ec <_vfiprintf_r+0x21c>)
 80038a0:	f7fc fc9e 	bl	80001e0 <memchr>
 80038a4:	9a04      	ldr	r2, [sp, #16]
 80038a6:	b9d8      	cbnz	r0, 80038e0 <_vfiprintf_r+0x110>
 80038a8:	06d1      	lsls	r1, r2, #27
 80038aa:	bf44      	itt	mi
 80038ac:	2320      	movmi	r3, #32
 80038ae:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80038b2:	0713      	lsls	r3, r2, #28
 80038b4:	bf44      	itt	mi
 80038b6:	232b      	movmi	r3, #43	@ 0x2b
 80038b8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80038bc:	f89a 3000 	ldrb.w	r3, [sl]
 80038c0:	2b2a      	cmp	r3, #42	@ 0x2a
 80038c2:	d015      	beq.n	80038f0 <_vfiprintf_r+0x120>
 80038c4:	9a07      	ldr	r2, [sp, #28]
 80038c6:	4654      	mov	r4, sl
 80038c8:	2000      	movs	r0, #0
 80038ca:	f04f 0c0a 	mov.w	ip, #10
 80038ce:	4621      	mov	r1, r4
 80038d0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80038d4:	3b30      	subs	r3, #48	@ 0x30
 80038d6:	2b09      	cmp	r3, #9
 80038d8:	d94b      	bls.n	8003972 <_vfiprintf_r+0x1a2>
 80038da:	b1b0      	cbz	r0, 800390a <_vfiprintf_r+0x13a>
 80038dc:	9207      	str	r2, [sp, #28]
 80038de:	e014      	b.n	800390a <_vfiprintf_r+0x13a>
 80038e0:	eba0 0308 	sub.w	r3, r0, r8
 80038e4:	fa09 f303 	lsl.w	r3, r9, r3
 80038e8:	4313      	orrs	r3, r2
 80038ea:	9304      	str	r3, [sp, #16]
 80038ec:	46a2      	mov	sl, r4
 80038ee:	e7d2      	b.n	8003896 <_vfiprintf_r+0xc6>
 80038f0:	9b03      	ldr	r3, [sp, #12]
 80038f2:	1d19      	adds	r1, r3, #4
 80038f4:	681b      	ldr	r3, [r3, #0]
 80038f6:	9103      	str	r1, [sp, #12]
 80038f8:	2b00      	cmp	r3, #0
 80038fa:	bfbb      	ittet	lt
 80038fc:	425b      	neglt	r3, r3
 80038fe:	f042 0202 	orrlt.w	r2, r2, #2
 8003902:	9307      	strge	r3, [sp, #28]
 8003904:	9307      	strlt	r3, [sp, #28]
 8003906:	bfb8      	it	lt
 8003908:	9204      	strlt	r2, [sp, #16]
 800390a:	7823      	ldrb	r3, [r4, #0]
 800390c:	2b2e      	cmp	r3, #46	@ 0x2e
 800390e:	d10a      	bne.n	8003926 <_vfiprintf_r+0x156>
 8003910:	7863      	ldrb	r3, [r4, #1]
 8003912:	2b2a      	cmp	r3, #42	@ 0x2a
 8003914:	d132      	bne.n	800397c <_vfiprintf_r+0x1ac>
 8003916:	9b03      	ldr	r3, [sp, #12]
 8003918:	1d1a      	adds	r2, r3, #4
 800391a:	681b      	ldr	r3, [r3, #0]
 800391c:	9203      	str	r2, [sp, #12]
 800391e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003922:	3402      	adds	r4, #2
 8003924:	9305      	str	r3, [sp, #20]
 8003926:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 80039f0 <_vfiprintf_r+0x220>
 800392a:	7821      	ldrb	r1, [r4, #0]
 800392c:	2203      	movs	r2, #3
 800392e:	4650      	mov	r0, sl
 8003930:	f7fc fc56 	bl	80001e0 <memchr>
 8003934:	b138      	cbz	r0, 8003946 <_vfiprintf_r+0x176>
 8003936:	9b04      	ldr	r3, [sp, #16]
 8003938:	eba0 000a 	sub.w	r0, r0, sl
 800393c:	2240      	movs	r2, #64	@ 0x40
 800393e:	4082      	lsls	r2, r0
 8003940:	4313      	orrs	r3, r2
 8003942:	3401      	adds	r4, #1
 8003944:	9304      	str	r3, [sp, #16]
 8003946:	f814 1b01 	ldrb.w	r1, [r4], #1
 800394a:	482a      	ldr	r0, [pc, #168]	@ (80039f4 <_vfiprintf_r+0x224>)
 800394c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003950:	2206      	movs	r2, #6
 8003952:	f7fc fc45 	bl	80001e0 <memchr>
 8003956:	2800      	cmp	r0, #0
 8003958:	d03f      	beq.n	80039da <_vfiprintf_r+0x20a>
 800395a:	4b27      	ldr	r3, [pc, #156]	@ (80039f8 <_vfiprintf_r+0x228>)
 800395c:	bb1b      	cbnz	r3, 80039a6 <_vfiprintf_r+0x1d6>
 800395e:	9b03      	ldr	r3, [sp, #12]
 8003960:	3307      	adds	r3, #7
 8003962:	f023 0307 	bic.w	r3, r3, #7
 8003966:	3308      	adds	r3, #8
 8003968:	9303      	str	r3, [sp, #12]
 800396a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800396c:	443b      	add	r3, r7
 800396e:	9309      	str	r3, [sp, #36]	@ 0x24
 8003970:	e76a      	b.n	8003848 <_vfiprintf_r+0x78>
 8003972:	fb0c 3202 	mla	r2, ip, r2, r3
 8003976:	460c      	mov	r4, r1
 8003978:	2001      	movs	r0, #1
 800397a:	e7a8      	b.n	80038ce <_vfiprintf_r+0xfe>
 800397c:	2300      	movs	r3, #0
 800397e:	3401      	adds	r4, #1
 8003980:	9305      	str	r3, [sp, #20]
 8003982:	4619      	mov	r1, r3
 8003984:	f04f 0c0a 	mov.w	ip, #10
 8003988:	4620      	mov	r0, r4
 800398a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800398e:	3a30      	subs	r2, #48	@ 0x30
 8003990:	2a09      	cmp	r2, #9
 8003992:	d903      	bls.n	800399c <_vfiprintf_r+0x1cc>
 8003994:	2b00      	cmp	r3, #0
 8003996:	d0c6      	beq.n	8003926 <_vfiprintf_r+0x156>
 8003998:	9105      	str	r1, [sp, #20]
 800399a:	e7c4      	b.n	8003926 <_vfiprintf_r+0x156>
 800399c:	fb0c 2101 	mla	r1, ip, r1, r2
 80039a0:	4604      	mov	r4, r0
 80039a2:	2301      	movs	r3, #1
 80039a4:	e7f0      	b.n	8003988 <_vfiprintf_r+0x1b8>
 80039a6:	ab03      	add	r3, sp, #12
 80039a8:	9300      	str	r3, [sp, #0]
 80039aa:	462a      	mov	r2, r5
 80039ac:	4b13      	ldr	r3, [pc, #76]	@ (80039fc <_vfiprintf_r+0x22c>)
 80039ae:	a904      	add	r1, sp, #16
 80039b0:	4630      	mov	r0, r6
 80039b2:	f7fd fda5 	bl	8001500 <_printf_float>
 80039b6:	4607      	mov	r7, r0
 80039b8:	1c78      	adds	r0, r7, #1
 80039ba:	d1d6      	bne.n	800396a <_vfiprintf_r+0x19a>
 80039bc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80039be:	07d9      	lsls	r1, r3, #31
 80039c0:	d405      	bmi.n	80039ce <_vfiprintf_r+0x1fe>
 80039c2:	89ab      	ldrh	r3, [r5, #12]
 80039c4:	059a      	lsls	r2, r3, #22
 80039c6:	d402      	bmi.n	80039ce <_vfiprintf_r+0x1fe>
 80039c8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80039ca:	f7fe fad7 	bl	8001f7c <__retarget_lock_release_recursive>
 80039ce:	89ab      	ldrh	r3, [r5, #12]
 80039d0:	065b      	lsls	r3, r3, #25
 80039d2:	f53f af1f 	bmi.w	8003814 <_vfiprintf_r+0x44>
 80039d6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80039d8:	e71e      	b.n	8003818 <_vfiprintf_r+0x48>
 80039da:	ab03      	add	r3, sp, #12
 80039dc:	9300      	str	r3, [sp, #0]
 80039de:	462a      	mov	r2, r5
 80039e0:	4b06      	ldr	r3, [pc, #24]	@ (80039fc <_vfiprintf_r+0x22c>)
 80039e2:	a904      	add	r1, sp, #16
 80039e4:	4630      	mov	r0, r6
 80039e6:	f7fe f825 	bl	8001a34 <_printf_i>
 80039ea:	e7e4      	b.n	80039b6 <_vfiprintf_r+0x1e6>
 80039ec:	0800408f 	.word	0x0800408f
 80039f0:	08004095 	.word	0x08004095
 80039f4:	08004099 	.word	0x08004099
 80039f8:	08001501 	.word	0x08001501
 80039fc:	080037ad 	.word	0x080037ad

08003a00 <__swbuf_r>:
 8003a00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003a02:	460e      	mov	r6, r1
 8003a04:	4614      	mov	r4, r2
 8003a06:	4605      	mov	r5, r0
 8003a08:	b118      	cbz	r0, 8003a12 <__swbuf_r+0x12>
 8003a0a:	6a03      	ldr	r3, [r0, #32]
 8003a0c:	b90b      	cbnz	r3, 8003a12 <__swbuf_r+0x12>
 8003a0e:	f7fe f9bd 	bl	8001d8c <__sinit>
 8003a12:	69a3      	ldr	r3, [r4, #24]
 8003a14:	60a3      	str	r3, [r4, #8]
 8003a16:	89a3      	ldrh	r3, [r4, #12]
 8003a18:	071a      	lsls	r2, r3, #28
 8003a1a:	d501      	bpl.n	8003a20 <__swbuf_r+0x20>
 8003a1c:	6923      	ldr	r3, [r4, #16]
 8003a1e:	b943      	cbnz	r3, 8003a32 <__swbuf_r+0x32>
 8003a20:	4621      	mov	r1, r4
 8003a22:	4628      	mov	r0, r5
 8003a24:	f000 f82a 	bl	8003a7c <__swsetup_r>
 8003a28:	b118      	cbz	r0, 8003a32 <__swbuf_r+0x32>
 8003a2a:	f04f 37ff 	mov.w	r7, #4294967295
 8003a2e:	4638      	mov	r0, r7
 8003a30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003a32:	6823      	ldr	r3, [r4, #0]
 8003a34:	6922      	ldr	r2, [r4, #16]
 8003a36:	1a98      	subs	r0, r3, r2
 8003a38:	6963      	ldr	r3, [r4, #20]
 8003a3a:	b2f6      	uxtb	r6, r6
 8003a3c:	4283      	cmp	r3, r0
 8003a3e:	4637      	mov	r7, r6
 8003a40:	dc05      	bgt.n	8003a4e <__swbuf_r+0x4e>
 8003a42:	4621      	mov	r1, r4
 8003a44:	4628      	mov	r0, r5
 8003a46:	f7ff fdeb 	bl	8003620 <_fflush_r>
 8003a4a:	2800      	cmp	r0, #0
 8003a4c:	d1ed      	bne.n	8003a2a <__swbuf_r+0x2a>
 8003a4e:	68a3      	ldr	r3, [r4, #8]
 8003a50:	3b01      	subs	r3, #1
 8003a52:	60a3      	str	r3, [r4, #8]
 8003a54:	6823      	ldr	r3, [r4, #0]
 8003a56:	1c5a      	adds	r2, r3, #1
 8003a58:	6022      	str	r2, [r4, #0]
 8003a5a:	701e      	strb	r6, [r3, #0]
 8003a5c:	6962      	ldr	r2, [r4, #20]
 8003a5e:	1c43      	adds	r3, r0, #1
 8003a60:	429a      	cmp	r2, r3
 8003a62:	d004      	beq.n	8003a6e <__swbuf_r+0x6e>
 8003a64:	89a3      	ldrh	r3, [r4, #12]
 8003a66:	07db      	lsls	r3, r3, #31
 8003a68:	d5e1      	bpl.n	8003a2e <__swbuf_r+0x2e>
 8003a6a:	2e0a      	cmp	r6, #10
 8003a6c:	d1df      	bne.n	8003a2e <__swbuf_r+0x2e>
 8003a6e:	4621      	mov	r1, r4
 8003a70:	4628      	mov	r0, r5
 8003a72:	f7ff fdd5 	bl	8003620 <_fflush_r>
 8003a76:	2800      	cmp	r0, #0
 8003a78:	d0d9      	beq.n	8003a2e <__swbuf_r+0x2e>
 8003a7a:	e7d6      	b.n	8003a2a <__swbuf_r+0x2a>

08003a7c <__swsetup_r>:
 8003a7c:	b538      	push	{r3, r4, r5, lr}
 8003a7e:	4b29      	ldr	r3, [pc, #164]	@ (8003b24 <__swsetup_r+0xa8>)
 8003a80:	4605      	mov	r5, r0
 8003a82:	6818      	ldr	r0, [r3, #0]
 8003a84:	460c      	mov	r4, r1
 8003a86:	b118      	cbz	r0, 8003a90 <__swsetup_r+0x14>
 8003a88:	6a03      	ldr	r3, [r0, #32]
 8003a8a:	b90b      	cbnz	r3, 8003a90 <__swsetup_r+0x14>
 8003a8c:	f7fe f97e 	bl	8001d8c <__sinit>
 8003a90:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003a94:	0719      	lsls	r1, r3, #28
 8003a96:	d422      	bmi.n	8003ade <__swsetup_r+0x62>
 8003a98:	06da      	lsls	r2, r3, #27
 8003a9a:	d407      	bmi.n	8003aac <__swsetup_r+0x30>
 8003a9c:	2209      	movs	r2, #9
 8003a9e:	602a      	str	r2, [r5, #0]
 8003aa0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003aa4:	81a3      	strh	r3, [r4, #12]
 8003aa6:	f04f 30ff 	mov.w	r0, #4294967295
 8003aaa:	e033      	b.n	8003b14 <__swsetup_r+0x98>
 8003aac:	0758      	lsls	r0, r3, #29
 8003aae:	d512      	bpl.n	8003ad6 <__swsetup_r+0x5a>
 8003ab0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003ab2:	b141      	cbz	r1, 8003ac6 <__swsetup_r+0x4a>
 8003ab4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003ab8:	4299      	cmp	r1, r3
 8003aba:	d002      	beq.n	8003ac2 <__swsetup_r+0x46>
 8003abc:	4628      	mov	r0, r5
 8003abe:	f7ff f8af 	bl	8002c20 <_free_r>
 8003ac2:	2300      	movs	r3, #0
 8003ac4:	6363      	str	r3, [r4, #52]	@ 0x34
 8003ac6:	89a3      	ldrh	r3, [r4, #12]
 8003ac8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8003acc:	81a3      	strh	r3, [r4, #12]
 8003ace:	2300      	movs	r3, #0
 8003ad0:	6063      	str	r3, [r4, #4]
 8003ad2:	6923      	ldr	r3, [r4, #16]
 8003ad4:	6023      	str	r3, [r4, #0]
 8003ad6:	89a3      	ldrh	r3, [r4, #12]
 8003ad8:	f043 0308 	orr.w	r3, r3, #8
 8003adc:	81a3      	strh	r3, [r4, #12]
 8003ade:	6923      	ldr	r3, [r4, #16]
 8003ae0:	b94b      	cbnz	r3, 8003af6 <__swsetup_r+0x7a>
 8003ae2:	89a3      	ldrh	r3, [r4, #12]
 8003ae4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8003ae8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003aec:	d003      	beq.n	8003af6 <__swsetup_r+0x7a>
 8003aee:	4621      	mov	r1, r4
 8003af0:	4628      	mov	r0, r5
 8003af2:	f000 f883 	bl	8003bfc <__smakebuf_r>
 8003af6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003afa:	f013 0201 	ands.w	r2, r3, #1
 8003afe:	d00a      	beq.n	8003b16 <__swsetup_r+0x9a>
 8003b00:	2200      	movs	r2, #0
 8003b02:	60a2      	str	r2, [r4, #8]
 8003b04:	6962      	ldr	r2, [r4, #20]
 8003b06:	4252      	negs	r2, r2
 8003b08:	61a2      	str	r2, [r4, #24]
 8003b0a:	6922      	ldr	r2, [r4, #16]
 8003b0c:	b942      	cbnz	r2, 8003b20 <__swsetup_r+0xa4>
 8003b0e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8003b12:	d1c5      	bne.n	8003aa0 <__swsetup_r+0x24>
 8003b14:	bd38      	pop	{r3, r4, r5, pc}
 8003b16:	0799      	lsls	r1, r3, #30
 8003b18:	bf58      	it	pl
 8003b1a:	6962      	ldrpl	r2, [r4, #20]
 8003b1c:	60a2      	str	r2, [r4, #8]
 8003b1e:	e7f4      	b.n	8003b0a <__swsetup_r+0x8e>
 8003b20:	2000      	movs	r0, #0
 8003b22:	e7f7      	b.n	8003b14 <__swsetup_r+0x98>
 8003b24:	20000024 	.word	0x20000024

08003b28 <_raise_r>:
 8003b28:	291f      	cmp	r1, #31
 8003b2a:	b538      	push	{r3, r4, r5, lr}
 8003b2c:	4605      	mov	r5, r0
 8003b2e:	460c      	mov	r4, r1
 8003b30:	d904      	bls.n	8003b3c <_raise_r+0x14>
 8003b32:	2316      	movs	r3, #22
 8003b34:	6003      	str	r3, [r0, #0]
 8003b36:	f04f 30ff 	mov.w	r0, #4294967295
 8003b3a:	bd38      	pop	{r3, r4, r5, pc}
 8003b3c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8003b3e:	b112      	cbz	r2, 8003b46 <_raise_r+0x1e>
 8003b40:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8003b44:	b94b      	cbnz	r3, 8003b5a <_raise_r+0x32>
 8003b46:	4628      	mov	r0, r5
 8003b48:	f000 f830 	bl	8003bac <_getpid_r>
 8003b4c:	4622      	mov	r2, r4
 8003b4e:	4601      	mov	r1, r0
 8003b50:	4628      	mov	r0, r5
 8003b52:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003b56:	f000 b817 	b.w	8003b88 <_kill_r>
 8003b5a:	2b01      	cmp	r3, #1
 8003b5c:	d00a      	beq.n	8003b74 <_raise_r+0x4c>
 8003b5e:	1c59      	adds	r1, r3, #1
 8003b60:	d103      	bne.n	8003b6a <_raise_r+0x42>
 8003b62:	2316      	movs	r3, #22
 8003b64:	6003      	str	r3, [r0, #0]
 8003b66:	2001      	movs	r0, #1
 8003b68:	e7e7      	b.n	8003b3a <_raise_r+0x12>
 8003b6a:	2100      	movs	r1, #0
 8003b6c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8003b70:	4620      	mov	r0, r4
 8003b72:	4798      	blx	r3
 8003b74:	2000      	movs	r0, #0
 8003b76:	e7e0      	b.n	8003b3a <_raise_r+0x12>

08003b78 <raise>:
 8003b78:	4b02      	ldr	r3, [pc, #8]	@ (8003b84 <raise+0xc>)
 8003b7a:	4601      	mov	r1, r0
 8003b7c:	6818      	ldr	r0, [r3, #0]
 8003b7e:	f7ff bfd3 	b.w	8003b28 <_raise_r>
 8003b82:	bf00      	nop
 8003b84:	20000024 	.word	0x20000024

08003b88 <_kill_r>:
 8003b88:	b538      	push	{r3, r4, r5, lr}
 8003b8a:	4d07      	ldr	r5, [pc, #28]	@ (8003ba8 <_kill_r+0x20>)
 8003b8c:	2300      	movs	r3, #0
 8003b8e:	4604      	mov	r4, r0
 8003b90:	4608      	mov	r0, r1
 8003b92:	4611      	mov	r1, r2
 8003b94:	602b      	str	r3, [r5, #0]
 8003b96:	f7fd fa84 	bl	80010a2 <_kill>
 8003b9a:	1c43      	adds	r3, r0, #1
 8003b9c:	d102      	bne.n	8003ba4 <_kill_r+0x1c>
 8003b9e:	682b      	ldr	r3, [r5, #0]
 8003ba0:	b103      	cbz	r3, 8003ba4 <_kill_r+0x1c>
 8003ba2:	6023      	str	r3, [r4, #0]
 8003ba4:	bd38      	pop	{r3, r4, r5, pc}
 8003ba6:	bf00      	nop
 8003ba8:	2000033c 	.word	0x2000033c

08003bac <_getpid_r>:
 8003bac:	f7fd ba72 	b.w	8001094 <_getpid>

08003bb0 <__swhatbuf_r>:
 8003bb0:	b570      	push	{r4, r5, r6, lr}
 8003bb2:	460c      	mov	r4, r1
 8003bb4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003bb8:	2900      	cmp	r1, #0
 8003bba:	b096      	sub	sp, #88	@ 0x58
 8003bbc:	4615      	mov	r5, r2
 8003bbe:	461e      	mov	r6, r3
 8003bc0:	da0d      	bge.n	8003bde <__swhatbuf_r+0x2e>
 8003bc2:	89a3      	ldrh	r3, [r4, #12]
 8003bc4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8003bc8:	f04f 0100 	mov.w	r1, #0
 8003bcc:	bf14      	ite	ne
 8003bce:	2340      	movne	r3, #64	@ 0x40
 8003bd0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8003bd4:	2000      	movs	r0, #0
 8003bd6:	6031      	str	r1, [r6, #0]
 8003bd8:	602b      	str	r3, [r5, #0]
 8003bda:	b016      	add	sp, #88	@ 0x58
 8003bdc:	bd70      	pop	{r4, r5, r6, pc}
 8003bde:	466a      	mov	r2, sp
 8003be0:	f000 f848 	bl	8003c74 <_fstat_r>
 8003be4:	2800      	cmp	r0, #0
 8003be6:	dbec      	blt.n	8003bc2 <__swhatbuf_r+0x12>
 8003be8:	9901      	ldr	r1, [sp, #4]
 8003bea:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8003bee:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8003bf2:	4259      	negs	r1, r3
 8003bf4:	4159      	adcs	r1, r3
 8003bf6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8003bfa:	e7eb      	b.n	8003bd4 <__swhatbuf_r+0x24>

08003bfc <__smakebuf_r>:
 8003bfc:	898b      	ldrh	r3, [r1, #12]
 8003bfe:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003c00:	079d      	lsls	r5, r3, #30
 8003c02:	4606      	mov	r6, r0
 8003c04:	460c      	mov	r4, r1
 8003c06:	d507      	bpl.n	8003c18 <__smakebuf_r+0x1c>
 8003c08:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8003c0c:	6023      	str	r3, [r4, #0]
 8003c0e:	6123      	str	r3, [r4, #16]
 8003c10:	2301      	movs	r3, #1
 8003c12:	6163      	str	r3, [r4, #20]
 8003c14:	b003      	add	sp, #12
 8003c16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003c18:	ab01      	add	r3, sp, #4
 8003c1a:	466a      	mov	r2, sp
 8003c1c:	f7ff ffc8 	bl	8003bb0 <__swhatbuf_r>
 8003c20:	9f00      	ldr	r7, [sp, #0]
 8003c22:	4605      	mov	r5, r0
 8003c24:	4639      	mov	r1, r7
 8003c26:	4630      	mov	r0, r6
 8003c28:	f7ff f86e 	bl	8002d08 <_malloc_r>
 8003c2c:	b948      	cbnz	r0, 8003c42 <__smakebuf_r+0x46>
 8003c2e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003c32:	059a      	lsls	r2, r3, #22
 8003c34:	d4ee      	bmi.n	8003c14 <__smakebuf_r+0x18>
 8003c36:	f023 0303 	bic.w	r3, r3, #3
 8003c3a:	f043 0302 	orr.w	r3, r3, #2
 8003c3e:	81a3      	strh	r3, [r4, #12]
 8003c40:	e7e2      	b.n	8003c08 <__smakebuf_r+0xc>
 8003c42:	89a3      	ldrh	r3, [r4, #12]
 8003c44:	6020      	str	r0, [r4, #0]
 8003c46:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003c4a:	81a3      	strh	r3, [r4, #12]
 8003c4c:	9b01      	ldr	r3, [sp, #4]
 8003c4e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8003c52:	b15b      	cbz	r3, 8003c6c <__smakebuf_r+0x70>
 8003c54:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003c58:	4630      	mov	r0, r6
 8003c5a:	f000 f81d 	bl	8003c98 <_isatty_r>
 8003c5e:	b128      	cbz	r0, 8003c6c <__smakebuf_r+0x70>
 8003c60:	89a3      	ldrh	r3, [r4, #12]
 8003c62:	f023 0303 	bic.w	r3, r3, #3
 8003c66:	f043 0301 	orr.w	r3, r3, #1
 8003c6a:	81a3      	strh	r3, [r4, #12]
 8003c6c:	89a3      	ldrh	r3, [r4, #12]
 8003c6e:	431d      	orrs	r5, r3
 8003c70:	81a5      	strh	r5, [r4, #12]
 8003c72:	e7cf      	b.n	8003c14 <__smakebuf_r+0x18>

08003c74 <_fstat_r>:
 8003c74:	b538      	push	{r3, r4, r5, lr}
 8003c76:	4d07      	ldr	r5, [pc, #28]	@ (8003c94 <_fstat_r+0x20>)
 8003c78:	2300      	movs	r3, #0
 8003c7a:	4604      	mov	r4, r0
 8003c7c:	4608      	mov	r0, r1
 8003c7e:	4611      	mov	r1, r2
 8003c80:	602b      	str	r3, [r5, #0]
 8003c82:	f7fd fa6d 	bl	8001160 <_fstat>
 8003c86:	1c43      	adds	r3, r0, #1
 8003c88:	d102      	bne.n	8003c90 <_fstat_r+0x1c>
 8003c8a:	682b      	ldr	r3, [r5, #0]
 8003c8c:	b103      	cbz	r3, 8003c90 <_fstat_r+0x1c>
 8003c8e:	6023      	str	r3, [r4, #0]
 8003c90:	bd38      	pop	{r3, r4, r5, pc}
 8003c92:	bf00      	nop
 8003c94:	2000033c 	.word	0x2000033c

08003c98 <_isatty_r>:
 8003c98:	b538      	push	{r3, r4, r5, lr}
 8003c9a:	4d06      	ldr	r5, [pc, #24]	@ (8003cb4 <_isatty_r+0x1c>)
 8003c9c:	2300      	movs	r3, #0
 8003c9e:	4604      	mov	r4, r0
 8003ca0:	4608      	mov	r0, r1
 8003ca2:	602b      	str	r3, [r5, #0]
 8003ca4:	f7fd fa6b 	bl	800117e <_isatty>
 8003ca8:	1c43      	adds	r3, r0, #1
 8003caa:	d102      	bne.n	8003cb2 <_isatty_r+0x1a>
 8003cac:	682b      	ldr	r3, [r5, #0]
 8003cae:	b103      	cbz	r3, 8003cb2 <_isatty_r+0x1a>
 8003cb0:	6023      	str	r3, [r4, #0]
 8003cb2:	bd38      	pop	{r3, r4, r5, pc}
 8003cb4:	2000033c 	.word	0x2000033c

08003cb8 <_init>:
 8003cb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003cba:	bf00      	nop
 8003cbc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003cbe:	bc08      	pop	{r3}
 8003cc0:	469e      	mov	lr, r3
 8003cc2:	4770      	bx	lr

08003cc4 <_fini>:
 8003cc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003cc6:	bf00      	nop
 8003cc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003cca:	bc08      	pop	{r3}
 8003ccc:	469e      	mov	lr, r3
 8003cce:	4770      	bx	lr
